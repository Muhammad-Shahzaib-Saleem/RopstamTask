{
	"id": "20e8e9751ff554717b1cdcb67d373b14",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"Task1/Mem.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2023-07-06\n*/\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n\n\npragma solidity 0.8.19;\n\ninterface IERC20 {\n   \n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount)external returns (bool);\n    function allowance(address owner, address spender)external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender,address recipient,uint256 amount) external returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner,address indexed spender,uint256 value);\n}\n\n\n\ncontract MemEthereum is IERC20, Ownable {\n    \n    using SafeMath for uint256;\n    \n    string private _name = \"MemEthereum\";\n    string private _symbol = \"METH\";\n    uint8 private _decimals = 18;\n\n    \n    mapping(address => uint256) internal _balances;\n    mapping(address => mapping(address => uint256)) internal _allowances;\n    mapping(address => bool) isExcludedFromFee;\n    mapping(address => uint256) public  _lockTimestamp;\n\n    uint256 internal _totalSupply =  100000000000 *10**18; \n    uint256 public _charity = 100; //  1.00%\n    uint256 public _burningFee = 100;// 1.0%\n    uint256 public _lpFee = 100; // 1%\n    uint256 public _inbetweenFee_ = 300; // 3%\n    uint256 public _charityTotal;\n    uint256 public _burningFeeTotal;\n    uint256 public _lpFeeTotal;\n    uint256 public _inbetweenFeeTotal;\n    address public charityAddress  = 0x2CD2BD245b2C563C98356B543d6C9a1aBf7353C5;     \n    address public burningAddress = 0x0000000000000000000000000000000000000000;  \n    address public lpAddress ;  // will set after creating pool             \n    address public inbetweenAddress = 0x80Dc1B16eB733Ca49B289f6B39090EC0dC0222a8;     \n    uint256 public maxWalletBalance = 3000000000*10**18;   //3% max supply  \n\n    \n\n    modifier antiBot(address account) {\n        require(_lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp, \"Account is locked\");\n        _;\n      \n    }\n\n     modifier maxWallet(address recipient, uint256 amount) {\n         require(balanceOf(recipient) + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\");\n        _;\n        \n    }\n\n    constructor() {\n\n        isExcludedFromFee[msg.sender] = true;\n        isExcludedFromFee[address(this)] = true;\n        _balances[msg.sender] = _totalSupply;\n                \n        emit Transfer(address(0), msg.sender, _totalSupply);\n\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public override view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public override view returns (uint256) {\n         return _balances[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public  antiBot(msg.sender) maxWallet( recipient, amount) override virtual returns (bool) {\n       _transfer(msg.sender,recipient,amount);\n       _lockTimestamp[msg.sender] = block.timestamp ;\n        return true;\n    }\n\n    function allowance(address owner, address spender) public override view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public antiBot(msg.sender) override virtual returns (bool) {\n        require(_balances[recipient] + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\");\n        _transfer(sender,recipient,amount);       \n        _approve(sender,msg.sender,_allowances[sender][msg.sender].sub( amount,\"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    function _approve(address owner, address spender, uint256 amount) private {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n\n    function _transfer(address sender, address recipient, uint256 amount) private {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n        \n         uint256 transferAmount = amount;\n\n            if(isExcludedFromFee[sender] && isExcludedFromFee[recipient]){\n                transferAmount = amount;\n            }\n            if(!isExcludedFromFee[sender] && !isExcludedFromFee[recipient]){\n                transferAmount = betweenCollectFee(sender,amount);\n            }\n            if(isExcludedFromFee[sender] && !isExcludedFromFee[recipient]){\n                transferAmount = buyCollectFee(sender,amount);\n            }\n            if(!isExcludedFromFee[sender] && isExcludedFromFee[recipient]){\n                transferAmount = SellCollectFee(sender,amount);\n            }\n  \n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(transferAmount);\n        \n        emit Transfer(sender, recipient, transferAmount);\n    } \n    \n    function buyCollectFee(address account, uint256 amount/*, uint256 rate*/) private returns (uint256) {\n        \n        uint256 transferAmount = amount;\n         uint256 charityFee = amount.mul(_charity).div(10000);\n        uint256 lpFee = amount.mul(_lpFee).div(10000);\n      \n        \n        if (lpFee > 0){\n            transferAmount = transferAmount.sub(lpFee);\n            _balances[lpAddress] = _balances[lpAddress].add(lpFee);\n            _lpFeeTotal = _lpFeeTotal.add(lpFee);\n            emit Transfer(account,lpAddress,lpFee);\n        }\n\n        if(charityFee > 0){\n            transferAmount = transferAmount.sub(charityFee);\n            _balances[charityAddress] = _balances[charityAddress].add(charityFee);\n            _charityTotal = _charityTotal.add(charityFee);\n            emit Transfer(account,charityAddress,charityFee);\n        }  \n        return transferAmount;\n    }\n\n\n    function SellCollectFee(address account, uint256 amount) private  returns (uint256) {\n        \n        uint256 transferAmount = amount;\n        uint256 charityFee = amount.mul(_charity).div(10000);\n        uint256 burningFee = amount.mul(_burningFee).div(10000);\n        uint256 lpFee = amount.mul(_lpFee).div(10000);\n     \n\n        if (burningFee > 0){\n            transferAmount = transferAmount.sub(burningFee);\n            _balances[burningAddress] = _balances[burningAddress].add(burningFee);\n            _burningFeeTotal = _burningFeeTotal.add(burningFee);\n            emit Transfer(account,burningAddress,burningFee);\n        }\n\n        if (lpFee > 0){\n            transferAmount = transferAmount.sub(lpFee);\n             _balances[lpAddress] = _balances[lpAddress].add(lpFee);\n            _lpFeeTotal = _lpFeeTotal.add(lpFee);\n            emit Transfer(account,lpAddress,lpFee);\n        }\n\n        if(charityFee > 0){\n            transferAmount = transferAmount.sub(charityFee);\n             _balances[charityAddress] = _balances[charityAddress].add(charityFee);\n            _charityTotal = _charityTotal.add(charityFee);\n            emit Transfer(account,charityAddress,charityFee);\n        }\n        \n        return transferAmount;\n    }\n\n\n  function betweenCollectFee(address account, uint256 amount) private  returns (uint256) {\n        \n        uint256 transferAmount = amount;\n       \n        uint256 _inbetweenFee = amount.mul(_inbetweenFee_).div(10000);\n\n        if (_inbetweenFee > 0){\n            transferAmount = transferAmount.sub(_inbetweenFee);\n            _balances[inbetweenAddress] = _balances[inbetweenAddress].add(_inbetweenFee);\n            _inbetweenFeeTotal = _inbetweenFeeTotal.add(_inbetweenFee);\n            emit Transfer(account,inbetweenAddress,_inbetweenFee);\n        }\n       \n        return transferAmount;\n    }\n   \n  function ExcludedFromFee(address account, bool) public onlyOwner {\n        isExcludedFromFee[account] = true;\n    }\n    \n    function IncludeInFee(address account, bool) public onlyOwner {\n        isExcludedFromFee[account] = false;\n    }\n    \n     function setLPAddress(address _Address) public onlyOwner {\n        require(_Address != lpAddress);\n        \n        lpAddress = _Address;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Task1/Mem.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Task1/Mem.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Task1/Mem.sol\":{\"keccak256\":\"0xd19cff6ea6535d5270c7bf7a86bb6562500e3a19ca5425b6296154a8ef973417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540ff895f946b546ac13835b2f22944337f7d42452a36100dc8abcea02ac637e\",\"dweb:/ipfs/Qma4zPBN94HXYJh4Li3pW6zLsWXe77VHo1PbWps2SdvtP1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Task1/Mem.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Task1/Mem.sol\":{\"keccak256\":\"0xd19cff6ea6535d5270c7bf7a86bb6562500e3a19ca5425b6296154a8ef973417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540ff895f946b546ac13835b2f22944337f7d42452a36100dc8abcea02ac637e\",\"dweb:/ipfs/Qma4zPBN94HXYJh4Li3pW6zLsWXe77VHo1PbWps2SdvtP1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MemEthereum": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"name": "ExcludedFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"name": "IncludeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_burningFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_burningFeeTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_charity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_charityTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_inbetweenFeeTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_inbetweenFee_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_lockTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_lpFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_lpFeeTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burningAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "charityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "inbetweenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWalletBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Address",
									"type": "address"
								}
							],
							"name": "setLPAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Task1/Mem.sol\":11144:11180  string private _name = \"MemEthereum\" */\n  0xc0\n    /* \"Task1/Mem.sol\":11056:19514  contract MemEthereum is IERC20, Ownable {... */\n  0x40\n    /* \"Task1/Mem.sol\":11144:11180  string private _name = \"MemEthereum\" */\n  mstore\n  0x0b\n    /* \"Task1/Mem.sol\":11056:19514  contract MemEthereum is IERC20, Ownable {... */\n  0x80\n    /* \"Task1/Mem.sol\":11144:11180  string private _name = \"MemEthereum\" */\n  swap1\n  dup2\n  mstore\n  mstore(0xa0, shl(0xa8, 0x4d656d457468657265756d))\n  0x01\n  swap1\n  tag_1\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Task1/Mem.sol\":11186:11217  string private _symbol = \"METH\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x04\n  dup2\n  mstore\n  shl(0xe3, 0x09a8aa89)\n  0x20\n  dup3\n  add\n  mstore\n  0x02\n  swap1\n  tag_3\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"Task1/Mem.sol\":11223:11251  uint8 private _decimals = 18 */\n  0x03\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Task1/Mem.sol\":11249:11251  18 */\n  0x12\n    /* \"Task1/Mem.sol\":11223:11251  uint8 private _decimals = 18 */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Task1/Mem.sol\":11527:11547  100000000000 *10**18 */\n  0x01431e0fae6d7217caa0000000\n    /* \"Task1/Mem.sol\":11494:11547  uint256 internal _totalSupply =  100000000000 *10**18 */\n  0x08\n  sstore\n    /* \"Task1/Mem.sol\":11580:11583  100 */\n  0x64\n    /* \"Task1/Mem.sol\":11554:11583  uint256 public _charity = 100 */\n  0x09\n  dup2\n  swap1\n  sstore\n    /* \"Task1/Mem.sol\":11599:11631  uint256 public _burningFee = 100 */\n  0x0a\n  dup2\n  swap1\n  sstore\n    /* \"Task1/Mem.sol\":11644:11671  uint256 public _lpFee = 100 */\n  0x0b\n  sstore\n    /* \"Task1/Mem.sol\":11715:11718  300 */\n  0x012c\n    /* \"Task1/Mem.sol\":11683:11718  uint256 public _inbetweenFee_ = 300 */\n  0x0c\n  sstore\n    /* \"Task1/Mem.sol\":11872:11947  address public charityAddress  = 0x2CD2BD245b2C563C98356B543d6C9a1aBf7353C5 */\n  0x11\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"Task1/Mem.sol\":11905:11947  0x2CD2BD245b2C563C98356B543d6C9a1aBf7353C5 */\n  0x2cd2bd245b2c563c98356b543d6c9a1abf7353c5\n    /* \"Task1/Mem.sol\":11872:11947  address public charityAddress  = 0x2CD2BD245b2C563C98356B543d6C9a1aBf7353C5 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Task1/Mem.sol\":11958:12032  address public burningAddress = 0x0000000000000000000000000000000000000000 */\n  dup2\n  sload\n  dup2\n  and\n  swap1\n  swap2\n  sstore\n    /* \"Task1/Mem.sol\":12117:12193  address public inbetweenAddress = 0x80Dc1B16eB733Ca49B289f6B39090EC0dC0222a8 */\n  0x14\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"Task1/Mem.sol\":12151:12193  0x80Dc1B16eB733Ca49B289f6B39090EC0dC0222a8 */\n  0x80dc1b16eb733ca49b289f6b39090ec0dc0222a8\n    /* \"Task1/Mem.sol\":12117:12193  address public inbetweenAddress = 0x80Dc1B16eB733Ca49B289f6B39090EC0dC0222a8 */\n  or\n  swap1\n  sstore\n    /* \"Task1/Mem.sol\":12238:12255  3000000000*10**18 */\n  0x09b18ab5df7180b6b8000000\n    /* \"Task1/Mem.sol\":12204:12255  uint256 public maxWalletBalance = 3000000000*10**18 */\n  0x15\n  sstore\n    /* \"Task1/Mem.sol\":12664:12906  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"Task1/Mem.sol\":8675:8707  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"Task1/Mem.sol\":7569:7579  msg.sender */\n  caller\n    /* \"Task1/Mem.sol\":8675:8693  _transferOwnership */\n  tag_11\n    /* \"Task1/Mem.sol\":8675:8707  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"Task1/Mem.sol\":12707:12717  msg.sender */\n  caller\n    /* \"Task1/Mem.sol\":12689:12718  isExcludedFromFee[msg.sender] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"Task1/Mem.sol\":12689:12706  isExcludedFromFee */\n  0x06\n    /* \"Task1/Mem.sol\":12689:12718  isExcludedFromFee[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"Task1/Mem.sol\":12689:12725  isExcludedFromFee[msg.sender] = true */\n  dup1\n  sload\n    /* \"Task1/Mem.sol\":12721:12725  true */\n  0x01\n  not(0xff)\n    /* \"Task1/Mem.sol\":12689:12725  isExcludedFromFee[msg.sender] = true */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"Task1/Mem.sol\":12761:12765  this */\n  address\n    /* \"Task1/Mem.sol\":12735:12767  isExcludedFromFee[address(this)] */\n  dup6\n  mstore\n  dup3\n  dup6\n  keccak256\n    /* \"Task1/Mem.sol\":12735:12774  isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Task1/Mem.sol\":12808:12820  _totalSupply */\n  sload(0x08)\n    /* \"Task1/Mem.sol\":12784:12805  _balances[msg.sender] */\n  dup5\n  dup5\n  mstore\n    /* \"Task1/Mem.sol\":12784:12793  _balances */\n  0x04\n    /* \"Task1/Mem.sol\":12784:12805  _balances[msg.sender] */\n  dup4\n  mstore\n  dup2\n  dup5\n  keccak256\n    /* \"Task1/Mem.sol\":12784:12820  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n    /* \"Task1/Mem.sol\":12852:12898  Transfer(address(0), msg.sender, _totalSupply) */\n  swap1\n  mload\n    /* \"#utility.yul\":2881:2906   */\n  swap1\n  dup2\n  mstore\n    /* \"Task1/Mem.sol\":12852:12898  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":2854:2872   */\n  add\n    /* \"Task1/Mem.sol\":12852:12898  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Task1/Mem.sol\":11056:19514  contract MemEthereum is IERC20, Ownable {... */\n  jump(tag_23)\n    /* \"Task1/Mem.sol\":10172:10359  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"Task1/Mem.sol\":10245:10261  address oldOwner */\n  0x00\n    /* \"Task1/Mem.sol\":10264:10270  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Task1/Mem.sol\":10280:10297  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"Task1/Mem.sol\":10312:10352  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Task1/Mem.sol\":10264:10270  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"Task1/Mem.sol\":10312:10352  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"Task1/Mem.sol\":10245:10261  address oldOwner */\n  swap1\n    /* \"Task1/Mem.sol\":10312:10352  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Task1/Mem.sol\":10235:10359  {... */\n  pop\n    /* \"Task1/Mem.sol\":10172:10359  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_19:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_26:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_27:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_21:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_31\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_31:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_32:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_30:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_2:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1582:1679   */\n  tag_39\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_40\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_43:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_34)\n    /* \"#utility.yul\":1810:2473   */\ntag_42:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_46:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_49:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2912   */\ntag_23:\n    /* \"Task1/Mem.sol\":11056:19514  contract MemEthereum is IERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Task1/Mem.sol\":11056:19514  contract MemEthereum is IERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xbcac9176\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xbcac9176\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xceae0e8d\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xad0a00aa\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xafcf2fc4\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xbbde77c1\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9b4dc8cc\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7a351a1d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x82d99cb1\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x2d43abd8\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x48112396\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x48112396\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4f8244f4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52db1ca4\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6c726137\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x2d43abd8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3871ef64\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x15c93a7d\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x15c93a7d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x27364d21\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x02fb4880\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Task1/Mem.sol\":11437:11487  mapping(address => uint256) public  _lockTimestamp */\n    tag_3:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"Task1/Mem.sol\":11437:11487  mapping(address => uint256) public  _lockTimestamp */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Task1/Mem.sol\":12912:12993  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n        /* \"Task1/Mem.sol\":13830:13986  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_5:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":1542:1556   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1535:1557   */\n      iszero\n        /* \"#utility.yul\":1517:1558   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1505:1507   */\n      0x20\n        /* \"#utility.yul\":1490:1508   */\n      add\n        /* \"Task1/Mem.sol\":13830:13986  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      tag_45\n        /* \"#utility.yul\":1377:1564   */\n      jump\n        /* \"Task1/Mem.sol\":11644:11671  uint256 public _lpFee = 100 */\n    tag_6:\n      tag_41\n      sload(0x0b)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":13177:13275  function totalSupply() public override view returns (uint256) {... */\n    tag_7:\n        /* \"Task1/Mem.sol\":13256:13268  _totalSupply */\n      sload(0x08)\n        /* \"Task1/Mem.sol\":13177:13275  function totalSupply() public override view returns (uint256) {... */\n      jump(tag_41)\n        /* \"Task1/Mem.sol\":13992:14431  function transferFrom(address sender, address recipient, uint256 amount) public antiBot(msg.sender) override virtual returns (bool) {... */\n    tag_8:\n      tag_51\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"Task1/Mem.sol\":11801:11827  uint256 public _lpFeeTotal */\n    tag_9:\n      tag_41\n      sload(0x0f)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":19119:19234  function ExcludedFromFee(address account, bool) public onlyOwner {... */\n    tag_10:\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"Task1/Mem.sol\":13090:13171  function decimals() public view returns (uint8) {... */\n    tag_11:\n        /* \"Task1/Mem.sol\":13155:13164  _decimals */\n      sload(0x03)\n        /* \"Task1/Mem.sol\":13090:13171  function decimals() public view returns (uint8) {... */\n      mload(0x40)\n        /* \"Task1/Mem.sol\":13155:13164  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2396:2432   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2384:2386   */\n      0x20\n        /* \"#utility.yul\":2369:2387   */\n      add\n        /* \"Task1/Mem.sol\":13090:13171  function decimals() public view returns (uint8) {... */\n      tag_45\n        /* \"#utility.yul\":2254:2438   */\n      jump\n        /* \"Task1/Mem.sol\":12117:12193  address public inbetweenAddress = 0x80Dc1B16eB733Ca49B289f6B39090EC0dC0222a8 */\n    tag_12:\n      sload(0x14)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_79:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2607:2639   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2589:2640   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2577:2579   */\n      0x20\n        /* \"#utility.yul\":2562:2580   */\n      add\n        /* \"Task1/Mem.sol\":12117:12193  address public inbetweenAddress = 0x80Dc1B16eB733Ca49B289f6B39090EC0dC0222a8 */\n      tag_45\n        /* \"#utility.yul\":2443:2646   */\n      jump\n        /* \"Task1/Mem.sol\":14437:14648  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_13:\n      tag_51\n      tag_84\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"Task1/Mem.sol\":11958:12032  address public burningAddress = 0x0000000000000000000000000000000000000000 */\n    tag_14:\n      sload(0x12)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":11833:11866  uint256 public _inbetweenFeeTotal */\n    tag_15:\n      tag_41\n      sload(0x10)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":11730:11758  uint256 public _charityTotal */\n    tag_16:\n      tag_41\n      sload(0x0d)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":19244:19357  function IncludeInFee(address account, bool) public onlyOwner {... */\n    tag_17:\n      tag_71\n      tag_97\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"Task1/Mem.sol\":13281:13399  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_18:\n      tag_41\n      tag_100\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":13374:13392  _balances[account] */\n      and\n        /* \"Task1/Mem.sol\":13347:13354  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":13374:13392  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":13374:13383  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":13374:13392  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Task1/Mem.sol\":13281:13399  function balanceOf(address account) public override view returns (uint256) {... */\n      jump\n        /* \"Task1/Mem.sol\":9570:9671  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_71\n      tag_104\n      jump\t// in\n        /* \"Task1/Mem.sol\":19368:19511  function setLPAddress(address _Address) public onlyOwner {... */\n    tag_20:\n      tag_71\n      tag_106\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"Task1/Mem.sol\":11554:11583  uint256 public _charity = 100 */\n    tag_21:\n      tag_41\n      sload(0x09)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":8940:9025  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"Task1/Mem.sol\":8986:8993  address */\n      0x00\n        /* \"Task1/Mem.sol\":9012:9018  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Task1/Mem.sol\":8940:9025  function owner() public view virtual returns (address) {... */\n      jump(tag_79)\n        /* \"Task1/Mem.sol\":12999:13084  function symbol() public view returns (string memory) {... */\n    tag_23:\n      tag_47\n      tag_115\n      jump\t// in\n        /* \"Task1/Mem.sol\":12040:12064  address public lpAddress */\n    tag_24:\n      sload(0x13)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":14654:14916  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_25:\n      tag_51\n      tag_121\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"Task1/Mem.sol\":13405:13677  function transfer(address recipient, uint256 amount) public  antiBot(msg.sender) maxWallet( recipient, amount) override virtual returns (bool) {... */\n    tag_26:\n      tag_51\n      tag_125\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"Task1/Mem.sol\":11599:11631  uint256 public _burningFee = 100 */\n    tag_27:\n      tag_41\n      sload(0x0a)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":11872:11947  address public charityAddress  = 0x2CD2BD245b2C563C98356B543d6C9a1aBf7353C5 */\n    tag_28:\n      sload(0x11)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":12204:12255  uint256 public maxWalletBalance = 3000000000*10**18 */\n    tag_29:\n      tag_41\n      sload(0x15)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":11683:11718  uint256 public _inbetweenFee_ = 300 */\n    tag_30:\n      tag_41\n      sload(0x0c)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":11764:11795  uint256 public _burningFeeTotal */\n    tag_31:\n      tag_41\n      sload(0x0e)\n      dup2\n      jump\n        /* \"Task1/Mem.sol\":13683:13824  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_32:\n      tag_41\n      tag_144\n      calldatasize\n      0x04\n      tag_145\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":13790:13808  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Task1/Mem.sol\":13764:13771  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":13790:13808  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":13790:13801  _allowances */\n      0x05\n        /* \"Task1/Mem.sol\":13790:13808  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Task1/Mem.sol\":13790:13817  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Task1/Mem.sol\":13683:13824  function allowance(address owner, address spender) public override view returns (uint256) {... */\n      jump\n        /* \"Task1/Mem.sol\":9820:10018  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n      tag_71\n      tag_149\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n        /* \"Task1/Mem.sol\":12912:12993  function name() public view returns (string memory) {... */\n    tag_48:\n        /* \"Task1/Mem.sol\":12949:12962  string memory */\n      0x60\n        /* \"Task1/Mem.sol\":12981:12986  _name */\n      0x01\n        /* \"Task1/Mem.sol\":12974:12986  return _name */\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_153\n      jump\t// in\n    tag_154:\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_156\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_155)\n    tag_156:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_157:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_157\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":12912:12993  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Task1/Mem.sol\":13830:13986  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_54:\n        /* \"Task1/Mem.sol\":13905:13909  bool */\n      0x00\n        /* \"Task1/Mem.sol\":13921:13958  _approve(msg.sender, spender, amount) */\n      tag_159\n        /* \"Task1/Mem.sol\":13930:13940  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":13942:13949  spender */\n      dup5\n        /* \"Task1/Mem.sol\":13951:13957  amount */\n      dup5\n        /* \"Task1/Mem.sol\":13921:13929  _approve */\n      tag_160\n        /* \"Task1/Mem.sol\":13921:13958  _approve(msg.sender, spender, amount) */\n      jump\t// in\n    tag_159:\n      pop\n        /* \"Task1/Mem.sol\":13975:13979  true */\n      0x01\n        /* \"Task1/Mem.sol\":13830:13986  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_158:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":13992:14431  function transferFrom(address sender, address recipient, uint256 amount) public antiBot(msg.sender) override virtual returns (bool) {... */\n    tag_66:\n        /* \"Task1/Mem.sol\":14080:14090  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":14118:14122  bool */\n      0x00\n        /* \"Task1/Mem.sol\":12340:12363  _lockTimestamp[account] */\n      dup2\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":12340:12354  _lockTimestamp */\n      0x07\n        /* \"Task1/Mem.sol\":12340:12363  _lockTimestamp[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":14118:14122  bool */\n      swap1\n      swap2\n        /* \"Task1/Mem.sol\":14080:14090  msg.sender */\n      swap1\n        /* \"Task1/Mem.sol\":12340:12368  _lockTimestamp[account] == 0 */\n      iszero\n      dup1\n        /* \"Task1/Mem.sol\":12340:12419  _lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp */\n      tag_163\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":12372:12395  _lockTimestamp[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":12372:12386  _lockTimestamp */\n      0x07\n        /* \"Task1/Mem.sol\":12372:12395  _lockTimestamp[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":12404:12419  block.timestamp */\n      timestamp\n      swap1\n        /* \"Task1/Mem.sol\":12372:12400  _lockTimestamp[account] + 10 */\n      tag_164\n      swap1\n        /* \"Task1/Mem.sol\":12398:12400  10 */\n      0x0a\n        /* \"Task1/Mem.sol\":12372:12400  _lockTimestamp[account] + 10 */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"Task1/Mem.sol\":12372:12419  _lockTimestamp[account] + 10 <= block.timestamp */\n      gt\n      iszero\n        /* \"Task1/Mem.sol\":12340:12419  _lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp */\n    tag_163:\n        /* \"Task1/Mem.sol\":12332:12441  require(_lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp, \"Account is locked\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3765:3767   */\n      0x20\n        /* \"Task1/Mem.sol\":12332:12441  require(_lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp, \"Account is locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3747:3768   */\n      mstore\n        /* \"#utility.yul\":3804:3806   */\n      0x11\n        /* \"#utility.yul\":3784:3802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3777:3807   */\n      mstore\n      shl(0x7a, 0x1058d8dbdd5b9d081a5cc81b1bd8dad959)\n        /* \"#utility.yul\":3823:3841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3816:3863   */\n      mstore\n        /* \"#utility.yul\":3880:3898   */\n      0x64\n      add\n        /* \"Task1/Mem.sol\":12332:12441  require(_lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp, \"Account is locked\") */\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"Task1/Mem.sol\":14175:14191  maxWalletBalance */\n      sload(0x15)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":14142:14162  _balances[recipient] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":14142:14151  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":14142:14162  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":14142:14171  _balances[recipient] + amount */\n      tag_170\n      swap1\n        /* \"Task1/Mem.sol\":14165:14171  amount */\n      dup6\n      swap1\n        /* \"Task1/Mem.sol\":14142:14171  _balances[recipient] + amount */\n      tag_165\n      jump\t// in\n    tag_170:\n        /* \"Task1/Mem.sol\":14142:14191  _balances[recipient] + amount <= maxWalletBalance */\n      gt\n      iszero\n        /* \"Task1/Mem.sol\":14134:14227  require(_balances[recipient] + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4111:4113   */\n      0x20\n        /* \"Task1/Mem.sol\":14134:14227  require(_balances[recipient] + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4093:4114   */\n      mstore\n        /* \"#utility.yul\":4150:4152   */\n      0x1f\n        /* \"#utility.yul\":4130:4148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4123:4153   */\n      mstore\n        /* \"#utility.yul\":4189:4222   */\n      0x4d6178696d756d2077616c6c65742062616c616e636520657863656564656400\n        /* \"#utility.yul\":4169:4187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4162:4223   */\n      mstore\n        /* \"#utility.yul\":4240:4258   */\n      0x64\n      add\n        /* \"Task1/Mem.sol\":14134:14227  require(_balances[recipient] + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\") */\n      tag_167\n        /* \"#utility.yul\":3909:4264   */\n      jump\n        /* \"Task1/Mem.sol\":14134:14227  require(_balances[recipient] + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\") */\n    tag_171:\n        /* \"Task1/Mem.sol\":14237:14271  _transfer(sender,recipient,amount) */\n      tag_174\n        /* \"Task1/Mem.sol\":14247:14253  sender */\n      dup6\n        /* \"Task1/Mem.sol\":14254:14263  recipient */\n      dup6\n        /* \"Task1/Mem.sol\":14264:14270  amount */\n      dup6\n        /* \"Task1/Mem.sol\":14237:14246  _transfer */\n      tag_175\n        /* \"Task1/Mem.sol\":14237:14271  _transfer(sender,recipient,amount) */\n      jump\t// in\n    tag_174:\n        /* \"Task1/Mem.sol\":14288:14403  _approve(sender,msg.sender,_allowances[sender][msg.sender].sub( amount,\"ERC20: transfer amount exceeds allowance\")) */\n      tag_176\n        /* \"Task1/Mem.sol\":14297:14303  sender */\n      dup6\n        /* \"Task1/Mem.sol\":14304:14314  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":14315:14402  _allowances[sender][msg.sender].sub( amount,\"ERC20: transfer amount exceeds allowance\") */\n      tag_177\n        /* \"Task1/Mem.sol\":14352:14358  amount */\n      dup7\n        /* \"Task1/Mem.sol\":14315:14402  _allowances[sender][msg.sender].sub( amount,\"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":14315:14334  _allowances[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":14315:14326  _allowances */\n      0x05\n        /* \"Task1/Mem.sol\":14315:14334  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Task1/Mem.sol\":14335:14345  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":14315:14346  _allowances[sender][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Task1/Mem.sol\":14315:14402  _allowances[sender][msg.sender].sub( amount,\"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"Task1/Mem.sol\":14315:14350  _allowances[sender][msg.sender].sub */\n      tag_178\n        /* \"Task1/Mem.sol\":14315:14402  _allowances[sender][msg.sender].sub( amount,\"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_177:\n        /* \"Task1/Mem.sol\":14288:14296  _approve */\n      tag_160\n        /* \"Task1/Mem.sol\":14288:14403  _approve(sender,msg.sender,_allowances[sender][msg.sender].sub( amount,\"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_176:\n      pop\n        /* \"Task1/Mem.sol\":14420:14424  true */\n      0x01\n      swap5\n        /* \"Task1/Mem.sol\":13992:14431  function transferFrom(address sender, address recipient, uint256 amount) public antiBot(msg.sender) override virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":19119:19234  function ExcludedFromFee(address account, bool) public onlyOwner {... */\n    tag_74:\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      tag_180\n        /* \"Task1/Mem.sol\":8833:8844  _checkOwner */\n      tag_181\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      jump\t// in\n    tag_180:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":19194:19220  isExcludedFromFee[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":19194:19211  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":19194:19220  isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":19194:19227  isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Task1/Mem.sol\":19223:19227  true */\n      0x01\n        /* \"Task1/Mem.sol\":19194:19227  isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"Task1/Mem.sol\":19119:19234  function ExcludedFromFee(address account, bool) public onlyOwner {... */\n      jump\t// out\n        /* \"Task1/Mem.sol\":14437:14648  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_85:\n        /* \"Task1/Mem.sol\":14550:14560  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":14525:14529  bool */\n      0x00\n        /* \"Task1/Mem.sol\":14571:14594  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":14571:14582  _allowances */\n      0x05\n        /* \"Task1/Mem.sol\":14571:14594  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":14571:14603  _allowances[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":14525:14529  bool */\n      swap1\n      swap2\n        /* \"Task1/Mem.sol\":14541:14620  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_159\n      swap2\n        /* \"Task1/Mem.sol\":14562:14569  spender */\n      dup6\n      swap1\n        /* \"Task1/Mem.sol\":14571:14619  _allowances[msg.sender][spender].add(addedValue) */\n      tag_177\n      swap1\n        /* \"Task1/Mem.sol\":14608:14618  addedValue */\n      dup7\n        /* \"Task1/Mem.sol\":14571:14607  _allowances[msg.sender][spender].add */\n      tag_187\n        /* \"Task1/Mem.sol\":14571:14619  _allowances[msg.sender][spender].add(addedValue) */\n      jump\t// in\n        /* \"Task1/Mem.sol\":19244:19357  function IncludeInFee(address account, bool) public onlyOwner {... */\n    tag_98:\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      tag_189\n        /* \"Task1/Mem.sol\":8833:8844  _checkOwner */\n      tag_181\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      jump\t// in\n    tag_189:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":19316:19342  isExcludedFromFee[account] */\n      and\n        /* \"Task1/Mem.sol\":19345:19350  false */\n      0x00\n        /* \"Task1/Mem.sol\":19316:19342  isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":19316:19333  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":19316:19342  isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":19316:19350  isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Task1/Mem.sol\":19244:19357  function IncludeInFee(address account, bool) public onlyOwner {... */\n      jump\t// out\n        /* \"Task1/Mem.sol\":9570:9671  function renounceOwnership() public virtual onlyOwner {... */\n    tag_104:\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      tag_193\n        /* \"Task1/Mem.sol\":8833:8844  _checkOwner */\n      tag_181\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"Task1/Mem.sol\":9634:9664  _transferOwnership(address(0)) */\n      tag_195\n        /* \"Task1/Mem.sol\":9661:9662  0 */\n      0x00\n        /* \"Task1/Mem.sol\":9634:9652  _transferOwnership */\n      tag_196\n        /* \"Task1/Mem.sol\":9634:9664  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_195:\n        /* \"Task1/Mem.sol\":9570:9671  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Task1/Mem.sol\":19368:19511  function setLPAddress(address _Address) public onlyOwner {... */\n    tag_107:\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      tag_198\n        /* \"Task1/Mem.sol\":8833:8844  _checkOwner */\n      tag_181\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"Task1/Mem.sol\":19455:19464  lpAddress */\n      sload(0x13)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Task1/Mem.sol\":19443:19464  _Address != lpAddress */\n      swap1\n      dup3\n      and\n      sub\n        /* \"Task1/Mem.sol\":19435:19465  require(_Address != lpAddress) */\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n        /* \"Task1/Mem.sol\":19484:19493  lpAddress */\n      0x13\n        /* \"Task1/Mem.sol\":19484:19504  lpAddress = _Address */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Task1/Mem.sol\":19368:19511  function setLPAddress(address _Address) public onlyOwner {... */\n      jump\t// out\n        /* \"Task1/Mem.sol\":12999:13084  function symbol() public view returns (string memory) {... */\n    tag_115:\n        /* \"Task1/Mem.sol\":13038:13051  string memory */\n      0x60\n        /* \"Task1/Mem.sol\":13070:13077  _symbol */\n      0x02\n        /* \"Task1/Mem.sol\":13063:13077  return _symbol */\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n        /* \"Task1/Mem.sol\":14654:14916  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_122:\n        /* \"Task1/Mem.sol\":14747:14751  bool */\n      0x00\n        /* \"Task1/Mem.sol\":14763:14888  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_159\n        /* \"Task1/Mem.sol\":14772:14782  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":14784:14791  spender */\n      dup5\n        /* \"Task1/Mem.sol\":14793:14887  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_177\n        /* \"Task1/Mem.sol\":14830:14845  subtractedValue */\n      dup6\n        /* \"Task1/Mem.sol\":14793:14887  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"Task1/Mem.sol\":14805:14815  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":14793:14816  _allowances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":14793:14804  _allowances */\n      0x05\n        /* \"Task1/Mem.sol\":14793:14816  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":14793:14825  _allowances[msg.sender][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Task1/Mem.sol\":14793:14887  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"Task1/Mem.sol\":14793:14829  _allowances[msg.sender][spender].sub */\n      tag_178\n        /* \"Task1/Mem.sol\":14793:14887  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"Task1/Mem.sol\":13405:13677  function transfer(address recipient, uint256 amount) public  antiBot(msg.sender) maxWallet( recipient, amount) override virtual returns (bool) {... */\n    tag_126:\n        /* \"Task1/Mem.sol\":13474:13484  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":13542:13546  bool */\n      0x00\n        /* \"Task1/Mem.sol\":12340:12363  _lockTimestamp[account] */\n      dup2\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":12340:12354  _lockTimestamp */\n      0x07\n        /* \"Task1/Mem.sol\":12340:12363  _lockTimestamp[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":13542:13546  bool */\n      swap1\n      swap2\n        /* \"Task1/Mem.sol\":13474:13484  msg.sender */\n      swap1\n        /* \"Task1/Mem.sol\":12340:12368  _lockTimestamp[account] == 0 */\n      iszero\n      dup1\n        /* \"Task1/Mem.sol\":12340:12419  _lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp */\n      tag_212\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":12372:12395  _lockTimestamp[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":12372:12386  _lockTimestamp */\n      0x07\n        /* \"Task1/Mem.sol\":12372:12395  _lockTimestamp[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":12404:12419  block.timestamp */\n      timestamp\n      swap1\n        /* \"Task1/Mem.sol\":12372:12400  _lockTimestamp[account] + 10 */\n      tag_213\n      swap1\n        /* \"Task1/Mem.sol\":12398:12400  10 */\n      0x0a\n        /* \"Task1/Mem.sol\":12372:12400  _lockTimestamp[account] + 10 */\n      tag_165\n      jump\t// in\n    tag_213:\n        /* \"Task1/Mem.sol\":12372:12419  _lockTimestamp[account] + 10 <= block.timestamp */\n      gt\n      iszero\n        /* \"Task1/Mem.sol\":12340:12419  _lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp */\n    tag_212:\n        /* \"Task1/Mem.sol\":12332:12441  require(_lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp, \"Account is locked\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3765:3767   */\n      0x20\n        /* \"Task1/Mem.sol\":12332:12441  require(_lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp, \"Account is locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3747:3768   */\n      mstore\n        /* \"#utility.yul\":3804:3806   */\n      0x11\n        /* \"#utility.yul\":3784:3802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3777:3807   */\n      mstore\n      shl(0x7a, 0x1058d8dbdd5b9d081a5cc81b1bd8dad959)\n        /* \"#utility.yul\":3823:3841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3816:3863   */\n      mstore\n        /* \"#utility.yul\":3880:3898   */\n      0x64\n      add\n        /* \"Task1/Mem.sol\":12332:12441  require(_lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp, \"Account is locked\") */\n      tag_167\n        /* \"#utility.yul\":3563:3904   */\n      jump\n        /* \"Task1/Mem.sol\":12332:12441  require(_lockTimestamp[account] == 0 || _lockTimestamp[account] + 10 <= block.timestamp, \"Account is locked\") */\n    tag_214:\n        /* \"Task1/Mem.sol\":13497:13506  recipient */\n      dup4\n        /* \"Task1/Mem.sol\":13508:13514  amount */\n      dup4\n        /* \"Task1/Mem.sol\":12579:12595  maxWalletBalance */\n      sload(0x15)\n        /* \"Task1/Mem.sol\":12569:12575  amount */\n      dup2\n        /* \"Task1/Mem.sol\":12546:12566  balanceOf(recipient) */\n      tag_217\n        /* \"Task1/Mem.sol\":12556:12565  recipient */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":13374:13392  _balances[account] */\n      and\n        /* \"Task1/Mem.sol\":13347:13354  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":13374:13392  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":13374:13383  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":13374:13392  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Task1/Mem.sol\":13281:13399  function balanceOf(address account) public override view returns (uint256) {... */\n      jump\n        /* \"Task1/Mem.sol\":12546:12566  balanceOf(recipient) */\n    tag_217:\n        /* \"Task1/Mem.sol\":12546:12575  balanceOf(recipient) + amount */\n      tag_218\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_218:\n        /* \"Task1/Mem.sol\":12546:12595  balanceOf(recipient) + amount <= maxWalletBalance */\n      gt\n      iszero\n        /* \"Task1/Mem.sol\":12538:12631  require(balanceOf(recipient) + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4111:4113   */\n      0x20\n        /* \"Task1/Mem.sol\":12538:12631  require(balanceOf(recipient) + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4093:4114   */\n      mstore\n        /* \"#utility.yul\":4150:4152   */\n      0x1f\n        /* \"#utility.yul\":4130:4148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4123:4153   */\n      mstore\n        /* \"#utility.yul\":4189:4222   */\n      0x4d6178696d756d2077616c6c65742062616c616e636520657863656564656400\n        /* \"#utility.yul\":4169:4187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4162:4223   */\n      mstore\n        /* \"#utility.yul\":4240:4258   */\n      0x64\n      add\n        /* \"Task1/Mem.sol\":12538:12631  require(balanceOf(recipient) + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\") */\n      tag_167\n        /* \"#utility.yul\":3909:4264   */\n      jump\n        /* \"Task1/Mem.sol\":12538:12631  require(balanceOf(recipient) + amount <= maxWalletBalance, \"Maximum wallet balance exceeded\") */\n    tag_219:\n        /* \"Task1/Mem.sol\":13557:13595  _transfer(msg.sender,recipient,amount) */\n      tag_222\n        /* \"Task1/Mem.sol\":13567:13577  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":13578:13587  recipient */\n      dup8\n        /* \"Task1/Mem.sol\":13588:13594  amount */\n      dup8\n        /* \"Task1/Mem.sol\":13557:13566  _transfer */\n      tag_175\n        /* \"Task1/Mem.sol\":13557:13595  _transfer(msg.sender,recipient,amount) */\n      jump\t// in\n    tag_222:\n      pop\n      pop\n        /* \"Task1/Mem.sol\":13619:13629  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":13604:13630  _lockTimestamp[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":13604:13618  _lockTimestamp */\n      0x07\n        /* \"Task1/Mem.sol\":13604:13630  _lockTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":13633:13648  block.timestamp */\n      timestamp\n        /* \"Task1/Mem.sol\":13604:13648  _lockTimestamp[msg.sender] = block.timestamp */\n      swap1\n      sstore\n      pop\n        /* \"Task1/Mem.sol\":13666:13670  true */\n      0x01\n      swap4\n        /* \"Task1/Mem.sol\":13405:13677  function transfer(address recipient, uint256 amount) public  antiBot(msg.sender) maxWallet( recipient, amount) override virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":9820:10018  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_150:\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      tag_225\n        /* \"Task1/Mem.sol\":8833:8844  _checkOwner */\n      tag_181\n        /* \"Task1/Mem.sol\":8833:8846  _checkOwner() */\n      jump\t// in\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":9908:9930  newOwner != address(0) */\n      dup2\n      and\n        /* \"Task1/Mem.sol\":9900:9973  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4471:4473   */\n      0x20\n        /* \"Task1/Mem.sol\":9900:9973  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4453:4474   */\n      mstore\n        /* \"#utility.yul\":4510:4512   */\n      0x26\n        /* \"#utility.yul\":4490:4508   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4483:4513   */\n      mstore\n        /* \"#utility.yul\":4549:4583   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4529:4547   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4522:4584   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4600:4618   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4593:4629   */\n      mstore\n        /* \"#utility.yul\":4646:4665   */\n      0x84\n      add\n        /* \"Task1/Mem.sol\":9900:9973  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_167\n        /* \"#utility.yul\":4269:4671   */\n      jump\n        /* \"Task1/Mem.sol\":9900:9973  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_227:\n        /* \"Task1/Mem.sol\":9983:10011  _transferOwnership(newOwner) */\n      tag_230\n        /* \"Task1/Mem.sol\":10002:10010  newOwner */\n      dup2\n        /* \"Task1/Mem.sol\":9983:10001  _transferOwnership */\n      tag_196\n        /* \"Task1/Mem.sol\":9983:10011  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_230:\n        /* \"Task1/Mem.sol\":9820:10018  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":14922:15253  function _approve(address owner, address spender, uint256 amount) private {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15014:15033  owner != address(0) */\n      dup4\n      and\n        /* \"Task1/Mem.sol\":15006:15074  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4878:4880   */\n      0x20\n        /* \"Task1/Mem.sol\":15006:15074  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4860:4881   */\n      mstore\n        /* \"#utility.yul\":4917:4919   */\n      0x24\n        /* \"#utility.yul\":4897:4915   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4890:4920   */\n      mstore\n        /* \"#utility.yul\":4956:4990   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4936:4954   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4929:4991   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5007:5025   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5000:5034   */\n      mstore\n        /* \"#utility.yul\":5051:5070   */\n      0x84\n      add\n        /* \"Task1/Mem.sol\":15006:15074  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_167\n        /* \"#utility.yul\":4676:5076   */\n      jump\n        /* \"Task1/Mem.sol\":15006:15074  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15092:15113  spender != address(0) */\n      dup3\n      and\n        /* \"Task1/Mem.sol\":15084:15152  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5283:5285   */\n      0x20\n        /* \"Task1/Mem.sol\":15084:15152  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5265:5286   */\n      mstore\n        /* \"#utility.yul\":5322:5324   */\n      0x22\n        /* \"#utility.yul\":5302:5320   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5295:5325   */\n      mstore\n        /* \"#utility.yul\":5361:5395   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5341:5359   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5334:5396   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5412:5430   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5405:5437   */\n      mstore\n        /* \"#utility.yul\":5454:5473   */\n      0x84\n      add\n        /* \"Task1/Mem.sol\":15084:15152  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_167\n        /* \"#utility.yul\":5081:5479   */\n      jump\n        /* \"Task1/Mem.sol\":15084:15152  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15163:15181  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":15163:15174  _allowances */\n      0x05\n        /* \"Task1/Mem.sol\":15163:15181  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Task1/Mem.sol\":15163:15190  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":15163:15199  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Task1/Mem.sol\":15214:15246  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":529:554   */\n      dup5\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":15214:15246  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"Task1/Mem.sol\":15214:15246  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Task1/Mem.sol\":14922:15253  function _approve(address owner, address spender, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":15260:16356  function _transfer(address sender, address recipient, uint256 amount) private {... */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15356:15376  sender != address(0) */\n      dup4\n      and\n        /* \"Task1/Mem.sol\":15348:15418  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5686:5688   */\n      0x20\n        /* \"Task1/Mem.sol\":15348:15418  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5668:5689   */\n      mstore\n        /* \"#utility.yul\":5725:5727   */\n      0x25\n        /* \"#utility.yul\":5705:5723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5698:5728   */\n      mstore\n        /* \"#utility.yul\":5764:5798   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5744:5762   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5737:5799   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5815:5833   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5808:5843   */\n      mstore\n        /* \"#utility.yul\":5860:5879   */\n      0x84\n      add\n        /* \"Task1/Mem.sol\":15348:15418  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_167\n        /* \"#utility.yul\":5484:5885   */\n      jump\n        /* \"Task1/Mem.sol\":15348:15418  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15436:15459  recipient != address(0) */\n      dup3\n      and\n        /* \"Task1/Mem.sol\":15428:15499  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6092:6094   */\n      0x20\n        /* \"Task1/Mem.sol\":15428:15499  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6074:6095   */\n      mstore\n        /* \"#utility.yul\":6131:6133   */\n      0x23\n        /* \"#utility.yul\":6111:6129   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6104:6134   */\n      mstore\n        /* \"#utility.yul\":6170:6204   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6150:6168   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6143:6205   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6221:6239   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6214:6247   */\n      mstore\n        /* \"#utility.yul\":6264:6283   */\n      0x84\n      add\n        /* \"Task1/Mem.sol\":15428:15499  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_167\n        /* \"#utility.yul\":5890:6289   */\n      jump\n        /* \"Task1/Mem.sol\":15428:15499  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15568:15593  isExcludedFromFee[sender] */\n      dup4\n      and\n        /* \"Task1/Mem.sol\":15519:15541  uint256 transferAmount */\n      0x00\n        /* \"Task1/Mem.sol\":15568:15593  isExcludedFromFee[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":15568:15585  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":15568:15593  isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":15544:15550  amount */\n      dup2\n      swap1\n        /* \"Task1/Mem.sol\":15568:15593  isExcludedFromFee[sender] */\n      0xff\n      and\n        /* \"Task1/Mem.sol\":15568:15625  isExcludedFromFee[sender] && isExcludedFromFee[recipient] */\n      dup1\n      iszero\n      tag_246\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15597:15625  isExcludedFromFee[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":15597:15614  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":15597:15625  isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Task1/Mem.sol\":15568:15625  isExcludedFromFee[sender] && isExcludedFromFee[recipient] */\n    tag_246:\n        /* \"Task1/Mem.sol\":15565:15682  if(isExcludedFromFee[sender] && isExcludedFromFee[recipient]){... */\n      iszero\n      tag_247\n      jumpi\n      pop\n        /* \"Task1/Mem.sol\":15661:15667  amount */\n      dup1\n        /* \"Task1/Mem.sol\":15565:15682  if(isExcludedFromFee[sender] && isExcludedFromFee[recipient]){... */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15699:15724  isExcludedFromFee[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":15699:15716  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":15699:15724  isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Task1/Mem.sol\":15698:15724  !isExcludedFromFee[sender] */\n      iszero\n        /* \"Task1/Mem.sol\":15698:15757  !isExcludedFromFee[sender] && !isExcludedFromFee[recipient] */\n      dup1\n      iszero\n      tag_248\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15729:15757  isExcludedFromFee[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":15729:15746  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":15729:15757  isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Task1/Mem.sol\":15728:15757  !isExcludedFromFee[recipient] */\n      iszero\n        /* \"Task1/Mem.sol\":15698:15757  !isExcludedFromFee[sender] && !isExcludedFromFee[recipient] */\n    tag_248:\n        /* \"Task1/Mem.sol\":15695:15840  if(!isExcludedFromFee[sender] && !isExcludedFromFee[recipient]){... */\n      iszero\n      tag_249\n      jumpi\n        /* \"Task1/Mem.sol\":15793:15825  betweenCollectFee(sender,amount) */\n      tag_250\n        /* \"Task1/Mem.sol\":15811:15817  sender */\n      dup5\n        /* \"Task1/Mem.sol\":15818:15824  amount */\n      dup4\n        /* \"Task1/Mem.sol\":15793:15810  betweenCollectFee */\n      tag_251\n        /* \"Task1/Mem.sol\":15793:15825  betweenCollectFee(sender,amount) */\n      jump\t// in\n    tag_250:\n        /* \"Task1/Mem.sol\":15776:15825  transferAmount = betweenCollectFee(sender,amount) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":15695:15840  if(!isExcludedFromFee[sender] && !isExcludedFromFee[recipient]){... */\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15856:15881  isExcludedFromFee[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":15856:15873  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":15856:15881  isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Task1/Mem.sol\":15856:15914  isExcludedFromFee[sender] && !isExcludedFromFee[recipient] */\n      dup1\n      iszero\n      tag_252\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":15886:15914  isExcludedFromFee[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":15886:15903  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":15886:15914  isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Task1/Mem.sol\":15885:15914  !isExcludedFromFee[recipient] */\n      iszero\n        /* \"Task1/Mem.sol\":15856:15914  isExcludedFromFee[sender] && !isExcludedFromFee[recipient] */\n    tag_252:\n        /* \"Task1/Mem.sol\":15853:15993  if(isExcludedFromFee[sender] && !isExcludedFromFee[recipient]){... */\n      iszero\n      tag_253\n      jumpi\n        /* \"Task1/Mem.sol\":15950:15978  buyCollectFee(sender,amount) */\n      tag_254\n        /* \"Task1/Mem.sol\":15964:15970  sender */\n      dup5\n        /* \"Task1/Mem.sol\":15971:15977  amount */\n      dup4\n        /* \"Task1/Mem.sol\":15950:15963  buyCollectFee */\n      tag_255\n        /* \"Task1/Mem.sol\":15950:15978  buyCollectFee(sender,amount) */\n      jump\t// in\n    tag_254:\n        /* \"Task1/Mem.sol\":15933:15978  transferAmount = buyCollectFee(sender,amount) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":15853:15993  if(isExcludedFromFee[sender] && !isExcludedFromFee[recipient]){... */\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":16010:16035  isExcludedFromFee[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":16010:16027  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":16010:16035  isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Task1/Mem.sol\":16009:16035  !isExcludedFromFee[sender] */\n      iszero\n        /* \"Task1/Mem.sol\":16009:16067  !isExcludedFromFee[sender] && isExcludedFromFee[recipient] */\n      dup1\n      iszero\n      tag_256\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":16039:16067  isExcludedFromFee[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":16039:16056  isExcludedFromFee */\n      0x06\n        /* \"Task1/Mem.sol\":16039:16067  isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Task1/Mem.sol\":16009:16067  !isExcludedFromFee[sender] && isExcludedFromFee[recipient] */\n    tag_256:\n        /* \"Task1/Mem.sol\":16006:16147  if(!isExcludedFromFee[sender] && isExcludedFromFee[recipient]){... */\n      iszero\n      tag_257\n      jumpi\n        /* \"Task1/Mem.sol\":16103:16132  SellCollectFee(sender,amount) */\n      tag_258\n        /* \"Task1/Mem.sol\":16118:16124  sender */\n      dup5\n        /* \"Task1/Mem.sol\":16125:16131  amount */\n      dup4\n        /* \"Task1/Mem.sol\":16103:16117  SellCollectFee */\n      tag_259\n        /* \"Task1/Mem.sol\":16103:16132  SellCollectFee(sender,amount) */\n      jump\t// in\n    tag_258:\n        /* \"Task1/Mem.sol\":16086:16132  transferAmount = SellCollectFee(sender,amount) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":16006:16147  if(!isExcludedFromFee[sender] && isExcludedFromFee[recipient]){... */\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":16180:16197  _balances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":16180:16189  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":16180:16197  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":16180:16209  _balances[sender].sub(amount) */\n      tag_260\n      swap1\n        /* \"Task1/Mem.sol\":16202:16208  amount */\n      dup4\n        /* \"Task1/Mem.sol\":16180:16201  _balances[sender].sub */\n      tag_261\n        /* \"Task1/Mem.sol\":16180:16209  _balances[sender].sub(amount) */\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":16160:16177  _balances[sender] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":16160:16169  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":16160:16177  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Task1/Mem.sol\":16160:16209  _balances[sender] = _balances[sender].sub(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Task1/Mem.sol\":16242:16262  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":16242:16282  _balances[recipient].add(transferAmount) */\n      tag_262\n      swap1\n        /* \"Task1/Mem.sol\":16267:16281  transferAmount */\n      dup3\n        /* \"Task1/Mem.sol\":16242:16266  _balances[recipient].add */\n      tag_187\n        /* \"Task1/Mem.sol\":16242:16282  _balances[recipient].add(transferAmount) */\n      jump\t// in\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":16219:16239  _balances[recipient] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":16219:16228  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":16219:16239  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":16219:16282  _balances[recipient] = _balances[recipient].add(transferAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Task1/Mem.sol\":16306:16349  Transfer(sender, recipient, transferAmount) */\n      swap2\n      mload\n      swap1\n      dup7\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      tag_263\n      swap1\n        /* \"Task1/Mem.sol\":16334:16348  transferAmount */\n      dup6\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"Task1/Mem.sol\":16306:16349  Transfer(sender, recipient, transferAmount) */\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Task1/Mem.sol\":15338:16356  {... */\n      pop\n        /* \"Task1/Mem.sol\":15260:16356  function _transfer(address sender, address recipient, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":4951:5182  function sub(... */\n    tag_178:\n        /* \"Task1/Mem.sol\":5067:5074  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":5126:5138  errorMessage */\n      dup2\n        /* \"Task1/Mem.sol\":5118:5124  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Task1/Mem.sol\":5110:5139  require(b <= a, errorMessage) */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_265:\n      pop\n      pop\n      pop\n        /* \"Task1/Mem.sol\":5160:5165  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Task1/Mem.sol\":4951:5182  function sub(... */\n      jump\t// out\n        /* \"Task1/Mem.sol\":9098:9228  function _checkOwner() internal view virtual {... */\n    tag_181:\n        /* \"Task1/Mem.sol\":8986:8993  address */\n      0x00\n        /* \"Task1/Mem.sol\":9012:9018  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Task1/Mem.sol\":7569:7579  msg.sender */\n      caller\n        /* \"Task1/Mem.sol\":9161:9184  owner() == _msgSender() */\n      eq\n        /* \"Task1/Mem.sol\":9153:9221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6496:6498   */\n      0x20\n        /* \"Task1/Mem.sol\":9153:9221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6478:6499   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6515:6533   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6508:6538   */\n      mstore\n        /* \"#utility.yul\":6574:6608   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6554:6572   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6547:6609   */\n      mstore\n        /* \"#utility.yul\":6626:6644   */\n      0x64\n      add\n        /* \"Task1/Mem.sol\":9153:9221  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_167\n        /* \"#utility.yul\":6294:6650   */\n      jump\n        /* \"Task1/Mem.sol\":2747:2843  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_187:\n        /* \"Task1/Mem.sol\":2805:2812  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":2831:2836  a + b */\n      tag_275\n        /* \"Task1/Mem.sol\":2835:2836  b */\n      dup3\n        /* \"Task1/Mem.sol\":2831:2832  a */\n      dup5\n        /* \"Task1/Mem.sol\":2831:2836  a + b */\n      tag_165\n      jump\t// in\n    tag_275:\n        /* \"Task1/Mem.sol\":2824:2836  return a + b */\n      swap4\n        /* \"Task1/Mem.sol\":2747:2843  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":10172:10359  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_196:\n        /* \"Task1/Mem.sol\":10245:10261  address oldOwner */\n      0x00\n        /* \"Task1/Mem.sol\":10264:10270  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":10280:10297  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"Task1/Mem.sol\":10312:10352  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Task1/Mem.sol\":10264:10270  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"Task1/Mem.sol\":10312:10352  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"Task1/Mem.sol\":10245:10261  address oldOwner */\n      swap1\n        /* \"Task1/Mem.sol\":10312:10352  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Task1/Mem.sol\":10235:10359  {... */\n      pop\n        /* \"Task1/Mem.sol\":10172:10359  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":18514:19112  function betweenCollectFee(address account, uint256 amount) private  returns (uint256) {... */\n    tag_251:\n        /* \"Task1/Mem.sol\":18592:18599  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":18620:18642  uint256 transferAmount */\n      dup1\n        /* \"Task1/Mem.sol\":18645:18651  amount */\n      dup3\n        /* \"Task1/Mem.sol\":18620:18651  uint256 transferAmount = amount */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":18669:18690  uint256 _inbetweenFee */\n      0x00\n        /* \"Task1/Mem.sol\":18693:18730  amount.mul(_inbetweenFee_).div(10000) */\n      tag_278\n        /* \"Task1/Mem.sol\":18724:18729  10000 */\n      0x2710\n        /* \"Task1/Mem.sol\":18693:18719  amount.mul(_inbetweenFee_) */\n      tag_279\n        /* \"Task1/Mem.sol\":18704:18718  _inbetweenFee_ */\n      sload(0x0c)\n        /* \"Task1/Mem.sol\":18693:18699  amount */\n      dup8\n        /* \"Task1/Mem.sol\":18693:18703  amount.mul */\n      tag_280\n      swap1\n        /* \"Task1/Mem.sol\":18693:18719  amount.mul(_inbetweenFee_) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_279:\n        /* \"Task1/Mem.sol\":18693:18723  amount.mul(_inbetweenFee_).div */\n      swap1\n      tag_281\n        /* \"Task1/Mem.sol\":18693:18730  amount.mul(_inbetweenFee_).div(10000) */\n      jump\t// in\n    tag_278:\n        /* \"Task1/Mem.sol\":18669:18730  uint256 _inbetweenFee = amount.mul(_inbetweenFee_).div(10000) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":18745:18762  _inbetweenFee > 0 */\n      dup1\n      iszero\n        /* \"Task1/Mem.sol\":18741:19067  if (_inbetweenFee > 0){... */\n      tag_282\n      jumpi\n        /* \"Task1/Mem.sol\":18794:18827  transferAmount.sub(_inbetweenFee) */\n      tag_283\n        /* \"Task1/Mem.sol\":18794:18808  transferAmount */\n      dup3\n        /* \"Task1/Mem.sol\":18813:18826  _inbetweenFee */\n      dup3\n        /* \"Task1/Mem.sol\":18794:18812  transferAmount.sub */\n      tag_261\n        /* \"Task1/Mem.sol\":18794:18827  transferAmount.sub(_inbetweenFee) */\n      jump\t// in\n    tag_283:\n        /* \"Task1/Mem.sol\":18881:18897  inbetweenAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x14))\n        /* \"Task1/Mem.sol\":18871:18898  _balances[inbetweenAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":18871:18880  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":18871:18898  _balances[inbetweenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":18777:18827  transferAmount = transferAmount.sub(_inbetweenFee) */\n      swap1\n      swap3\n      pop\n        /* \"Task1/Mem.sol\":18871:18917  _balances[inbetweenAddress].add(_inbetweenFee) */\n      tag_284\n      swap1\n        /* \"Task1/Mem.sol\":18903:18916  _inbetweenFee */\n      dup3\n        /* \"Task1/Mem.sol\":18871:18902  _balances[inbetweenAddress].add */\n      tag_187\n        /* \"Task1/Mem.sol\":18871:18917  _balances[inbetweenAddress].add(_inbetweenFee) */\n      jump\t// in\n    tag_284:\n        /* \"Task1/Mem.sol\":18851:18867  inbetweenAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x14))\n        /* \"Task1/Mem.sol\":18841:18868  _balances[inbetweenAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":18841:18850  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":18841:18868  _balances[inbetweenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":18841:18917  _balances[inbetweenAddress] = _balances[inbetweenAddress].add(_inbetweenFee) */\n      sstore\n        /* \"Task1/Mem.sol\":18952:18970  _inbetweenFeeTotal */\n      sload(0x10)\n        /* \"Task1/Mem.sol\":18952:18989  _inbetweenFeeTotal.add(_inbetweenFee) */\n      tag_285\n      swap1\n        /* \"Task1/Mem.sol\":18975:18988  _inbetweenFee */\n      dup3\n        /* \"Task1/Mem.sol\":18952:18974  _inbetweenFeeTotal.add */\n      tag_187\n        /* \"Task1/Mem.sol\":18952:18989  _inbetweenFeeTotal.add(_inbetweenFee) */\n      jump\t// in\n    tag_285:\n        /* \"Task1/Mem.sol\":18931:18949  _inbetweenFeeTotal */\n      0x10\n        /* \"Task1/Mem.sol\":18931:18989  _inbetweenFeeTotal = _inbetweenFeeTotal.add(_inbetweenFee) */\n      sstore\n        /* \"Task1/Mem.sol\":19025:19041  inbetweenAddress */\n      sload(0x14)\n        /* \"Task1/Mem.sol\":19008:19056  Transfer(account,inbetweenAddress,_inbetweenFee) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":19025:19041  inbetweenAddress */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Task1/Mem.sol\":19008:19056  Transfer(account,inbetweenAddress,_inbetweenFee) */\n      dup8\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"Task1/Mem.sol\":19008:19056  Transfer(account,inbetweenAddress,_inbetweenFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Task1/Mem.sol\":18741:19067  if (_inbetweenFee > 0){... */\n    tag_282:\n      pop\n        /* \"Task1/Mem.sol\":19091:19105  transferAmount */\n      swap4\n        /* \"Task1/Mem.sol\":18514:19112  function betweenCollectFee(address account, uint256 amount) private  returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":16367:17255  function buyCollectFee(address account, uint256 amount/*, uint256 rate*/) private returns (uint256) {... */\n    tag_255:\n        /* \"Task1/Mem.sol\":16458:16465  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":16486:16508  uint256 transferAmount */\n      dup1\n        /* \"Task1/Mem.sol\":16511:16517  amount */\n      dup3\n        /* \"Task1/Mem.sol\":16486:16517  uint256 transferAmount = amount */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":16528:16546  uint256 charityFee */\n      0x00\n        /* \"Task1/Mem.sol\":16549:16580  amount.mul(_charity).div(10000) */\n      tag_288\n        /* \"Task1/Mem.sol\":16574:16579  10000 */\n      0x2710\n        /* \"Task1/Mem.sol\":16549:16569  amount.mul(_charity) */\n      tag_279\n        /* \"Task1/Mem.sol\":16560:16568  _charity */\n      sload(0x09)\n        /* \"Task1/Mem.sol\":16549:16555  amount */\n      dup8\n        /* \"Task1/Mem.sol\":16549:16559  amount.mul */\n      tag_280\n      swap1\n        /* \"Task1/Mem.sol\":16549:16569  amount.mul(_charity) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Task1/Mem.sol\":16549:16580  amount.mul(_charity).div(10000) */\n    tag_288:\n        /* \"Task1/Mem.sol\":16528:16580  uint256 charityFee = amount.mul(_charity).div(10000) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":16590:16603  uint256 lpFee */\n      0x00\n        /* \"Task1/Mem.sol\":16606:16635  amount.mul(_lpFee).div(10000) */\n      tag_290\n        /* \"Task1/Mem.sol\":16629:16634  10000 */\n      0x2710\n        /* \"Task1/Mem.sol\":16606:16624  amount.mul(_lpFee) */\n      tag_279\n        /* \"Task1/Mem.sol\":16617:16623  _lpFee */\n      sload(0x0b)\n        /* \"Task1/Mem.sol\":16606:16612  amount */\n      dup9\n        /* \"Task1/Mem.sol\":16606:16616  amount.mul */\n      tag_280\n      swap1\n        /* \"Task1/Mem.sol\":16606:16624  amount.mul(_lpFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Task1/Mem.sol\":16606:16635  amount.mul(_lpFee).div(10000) */\n    tag_290:\n        /* \"Task1/Mem.sol\":16590:16635  uint256 lpFee = amount.mul(_lpFee).div(10000) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":16665:16674  lpFee > 0 */\n      dup1\n      iszero\n        /* \"Task1/Mem.sol\":16661:16912  if (lpFee > 0){... */\n      tag_292\n      jumpi\n        /* \"Task1/Mem.sol\":16706:16731  transferAmount.sub(lpFee) */\n      tag_293\n        /* \"Task1/Mem.sol\":16706:16720  transferAmount */\n      dup4\n        /* \"Task1/Mem.sol\":16725:16730  lpFee */\n      dup3\n        /* \"Task1/Mem.sol\":16706:16724  transferAmount.sub */\n      tag_261\n        /* \"Task1/Mem.sol\":16706:16731  transferAmount.sub(lpFee) */\n      jump\t// in\n    tag_293:\n        /* \"Task1/Mem.sol\":16778:16787  lpAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"Task1/Mem.sol\":16768:16788  _balances[lpAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":16768:16777  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":16768:16788  _balances[lpAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":16689:16731  transferAmount = transferAmount.sub(lpFee) */\n      swap1\n      swap4\n      pop\n        /* \"Task1/Mem.sol\":16768:16799  _balances[lpAddress].add(lpFee) */\n      tag_294\n      swap1\n        /* \"Task1/Mem.sol\":16793:16798  lpFee */\n      dup3\n        /* \"Task1/Mem.sol\":16768:16792  _balances[lpAddress].add */\n      tag_187\n        /* \"Task1/Mem.sol\":16768:16799  _balances[lpAddress].add(lpFee) */\n      jump\t// in\n    tag_294:\n        /* \"Task1/Mem.sol\":16755:16764  lpAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"Task1/Mem.sol\":16745:16765  _balances[lpAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":16745:16754  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":16745:16765  _balances[lpAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":16745:16799  _balances[lpAddress] = _balances[lpAddress].add(lpFee) */\n      sstore\n        /* \"Task1/Mem.sol\":16827:16838  _lpFeeTotal */\n      sload(0x0f)\n        /* \"Task1/Mem.sol\":16827:16849  _lpFeeTotal.add(lpFee) */\n      tag_295\n      swap1\n        /* \"Task1/Mem.sol\":16843:16848  lpFee */\n      dup3\n        /* \"Task1/Mem.sol\":16827:16842  _lpFeeTotal.add */\n      tag_187\n        /* \"Task1/Mem.sol\":16827:16849  _lpFeeTotal.add(lpFee) */\n      jump\t// in\n    tag_295:\n        /* \"Task1/Mem.sol\":16813:16824  _lpFeeTotal */\n      0x0f\n        /* \"Task1/Mem.sol\":16813:16849  _lpFeeTotal = _lpFeeTotal.add(lpFee) */\n      sstore\n        /* \"Task1/Mem.sol\":16885:16894  lpAddress */\n      sload(0x13)\n        /* \"Task1/Mem.sol\":16868:16901  Transfer(account,lpAddress,lpFee) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":16885:16894  lpAddress */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Task1/Mem.sol\":16868:16901  Transfer(account,lpAddress,lpFee) */\n      dup9\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"Task1/Mem.sol\":16868:16901  Transfer(account,lpAddress,lpFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Task1/Mem.sol\":16661:16912  if (lpFee > 0){... */\n    tag_292:\n        /* \"Task1/Mem.sol\":16925:16939  charityFee > 0 */\n      dup2\n      iszero\n        /* \"Task1/Mem.sol\":16922:17216  if(charityFee > 0){... */\n      tag_297\n      jumpi\n        /* \"Task1/Mem.sol\":16971:17001  transferAmount.sub(charityFee) */\n      tag_298\n        /* \"Task1/Mem.sol\":16971:16985  transferAmount */\n      dup4\n        /* \"Task1/Mem.sol\":16990:17000  charityFee */\n      dup4\n        /* \"Task1/Mem.sol\":16971:16989  transferAmount.sub */\n      tag_261\n        /* \"Task1/Mem.sol\":16971:17001  transferAmount.sub(charityFee) */\n      jump\t// in\n    tag_298:\n        /* \"Task1/Mem.sol\":17053:17067  charityAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n        /* \"Task1/Mem.sol\":17043:17068  _balances[charityAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":17043:17052  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":17043:17068  _balances[charityAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":16954:17001  transferAmount = transferAmount.sub(charityFee) */\n      swap1\n      swap4\n      pop\n        /* \"Task1/Mem.sol\":17043:17084  _balances[charityAddress].add(charityFee) */\n      tag_299\n      swap1\n        /* \"Task1/Mem.sol\":17073:17083  charityFee */\n      dup4\n        /* \"Task1/Mem.sol\":17043:17072  _balances[charityAddress].add */\n      tag_187\n        /* \"Task1/Mem.sol\":17043:17084  _balances[charityAddress].add(charityFee) */\n      jump\t// in\n    tag_299:\n        /* \"Task1/Mem.sol\":17025:17039  charityAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n        /* \"Task1/Mem.sol\":17015:17040  _balances[charityAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":17015:17024  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":17015:17040  _balances[charityAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":17015:17084  _balances[charityAddress] = _balances[charityAddress].add(charityFee) */\n      sstore\n        /* \"Task1/Mem.sol\":17114:17127  _charityTotal */\n      sload(0x0d)\n        /* \"Task1/Mem.sol\":17114:17143  _charityTotal.add(charityFee) */\n      tag_300\n      swap1\n        /* \"Task1/Mem.sol\":17132:17142  charityFee */\n      dup4\n        /* \"Task1/Mem.sol\":17114:17131  _charityTotal.add */\n      tag_187\n        /* \"Task1/Mem.sol\":17114:17143  _charityTotal.add(charityFee) */\n      jump\t// in\n    tag_300:\n        /* \"Task1/Mem.sol\":17098:17111  _charityTotal */\n      0x0d\n        /* \"Task1/Mem.sol\":17098:17143  _charityTotal = _charityTotal.add(charityFee) */\n      sstore\n        /* \"Task1/Mem.sol\":17179:17193  charityAddress */\n      sload(0x11)\n        /* \"Task1/Mem.sol\":17162:17205  Transfer(account,charityAddress,charityFee) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":17179:17193  charityAddress */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Task1/Mem.sol\":17162:17205  Transfer(account,charityAddress,charityFee) */\n      dup9\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"Task1/Mem.sol\":17162:17205  Transfer(account,charityAddress,charityFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Task1/Mem.sol\":16922:17216  if(charityFee > 0){... */\n    tag_297:\n      pop\n        /* \"Task1/Mem.sol\":17234:17248  transferAmount */\n      swap1\n      swap5\n        /* \"Task1/Mem.sol\":16367:17255  function buyCollectFee(address account, uint256 amount/*, uint256 rate*/) private returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":17262:18509  function SellCollectFee(address account, uint256 amount) private  returns (uint256) {... */\n    tag_259:\n        /* \"Task1/Mem.sol\":17337:17344  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":17365:17387  uint256 transferAmount */\n      dup1\n        /* \"Task1/Mem.sol\":17390:17396  amount */\n      dup3\n        /* \"Task1/Mem.sol\":17365:17396  uint256 transferAmount = amount */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":17406:17424  uint256 charityFee */\n      0x00\n        /* \"Task1/Mem.sol\":17427:17458  amount.mul(_charity).div(10000) */\n      tag_303\n        /* \"Task1/Mem.sol\":17452:17457  10000 */\n      0x2710\n        /* \"Task1/Mem.sol\":17427:17447  amount.mul(_charity) */\n      tag_279\n        /* \"Task1/Mem.sol\":17438:17446  _charity */\n      sload(0x09)\n        /* \"Task1/Mem.sol\":17427:17433  amount */\n      dup8\n        /* \"Task1/Mem.sol\":17427:17437  amount.mul */\n      tag_280\n      swap1\n        /* \"Task1/Mem.sol\":17427:17447  amount.mul(_charity) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Task1/Mem.sol\":17427:17458  amount.mul(_charity).div(10000) */\n    tag_303:\n        /* \"Task1/Mem.sol\":17406:17458  uint256 charityFee = amount.mul(_charity).div(10000) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":17468:17486  uint256 burningFee */\n      0x00\n        /* \"Task1/Mem.sol\":17489:17523  amount.mul(_burningFee).div(10000) */\n      tag_305\n        /* \"Task1/Mem.sol\":17517:17522  10000 */\n      0x2710\n        /* \"Task1/Mem.sol\":17489:17512  amount.mul(_burningFee) */\n      tag_279\n        /* \"Task1/Mem.sol\":17500:17511  _burningFee */\n      sload(0x0a)\n        /* \"Task1/Mem.sol\":17489:17495  amount */\n      dup9\n        /* \"Task1/Mem.sol\":17489:17499  amount.mul */\n      tag_280\n      swap1\n        /* \"Task1/Mem.sol\":17489:17512  amount.mul(_burningFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Task1/Mem.sol\":17489:17523  amount.mul(_burningFee).div(10000) */\n    tag_305:\n        /* \"Task1/Mem.sol\":17468:17523  uint256 burningFee = amount.mul(_burningFee).div(10000) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":17533:17546  uint256 lpFee */\n      0x00\n        /* \"Task1/Mem.sol\":17549:17578  amount.mul(_lpFee).div(10000) */\n      tag_307\n        /* \"Task1/Mem.sol\":17572:17577  10000 */\n      0x2710\n        /* \"Task1/Mem.sol\":17549:17567  amount.mul(_lpFee) */\n      tag_279\n        /* \"Task1/Mem.sol\":17560:17566  _lpFee */\n      sload(0x0b)\n        /* \"Task1/Mem.sol\":17549:17555  amount */\n      dup10\n        /* \"Task1/Mem.sol\":17549:17559  amount.mul */\n      tag_280\n      swap1\n        /* \"Task1/Mem.sol\":17549:17567  amount.mul(_lpFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Task1/Mem.sol\":17549:17578  amount.mul(_lpFee).div(10000) */\n    tag_307:\n        /* \"Task1/Mem.sol\":17533:17578  uint256 lpFee = amount.mul(_lpFee).div(10000) */\n      swap1\n      pop\n        /* \"Task1/Mem.sol\":17599:17613  burningFee > 0 */\n      dup2\n      iszero\n        /* \"Task1/Mem.sol\":17595:17896  if (burningFee > 0){... */\n      tag_309\n      jumpi\n        /* \"Task1/Mem.sol\":17645:17675  transferAmount.sub(burningFee) */\n      tag_310\n        /* \"Task1/Mem.sol\":17645:17659  transferAmount */\n      dup5\n        /* \"Task1/Mem.sol\":17664:17674  burningFee */\n      dup4\n        /* \"Task1/Mem.sol\":17645:17663  transferAmount.sub */\n      tag_261\n        /* \"Task1/Mem.sol\":17645:17675  transferAmount.sub(burningFee) */\n      jump\t// in\n    tag_310:\n        /* \"Task1/Mem.sol\":17727:17741  burningAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x12))\n        /* \"Task1/Mem.sol\":17717:17742  _balances[burningAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":17717:17726  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":17717:17742  _balances[burningAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":17628:17675  transferAmount = transferAmount.sub(burningFee) */\n      swap1\n      swap5\n      pop\n        /* \"Task1/Mem.sol\":17717:17758  _balances[burningAddress].add(burningFee) */\n      tag_311\n      swap1\n        /* \"Task1/Mem.sol\":17747:17757  burningFee */\n      dup4\n        /* \"Task1/Mem.sol\":17717:17746  _balances[burningAddress].add */\n      tag_187\n        /* \"Task1/Mem.sol\":17717:17758  _balances[burningAddress].add(burningFee) */\n      jump\t// in\n    tag_311:\n        /* \"Task1/Mem.sol\":17699:17713  burningAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x12))\n        /* \"Task1/Mem.sol\":17689:17714  _balances[burningAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":17689:17698  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":17689:17714  _balances[burningAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":17689:17758  _balances[burningAddress] = _balances[burningAddress].add(burningFee) */\n      sstore\n        /* \"Task1/Mem.sol\":17791:17807  _burningFeeTotal */\n      sload(0x0e)\n        /* \"Task1/Mem.sol\":17791:17823  _burningFeeTotal.add(burningFee) */\n      tag_312\n      swap1\n        /* \"Task1/Mem.sol\":17812:17822  burningFee */\n      dup4\n        /* \"Task1/Mem.sol\":17791:17811  _burningFeeTotal.add */\n      tag_187\n        /* \"Task1/Mem.sol\":17791:17823  _burningFeeTotal.add(burningFee) */\n      jump\t// in\n    tag_312:\n        /* \"Task1/Mem.sol\":17772:17788  _burningFeeTotal */\n      0x0e\n        /* \"Task1/Mem.sol\":17772:17823  _burningFeeTotal = _burningFeeTotal.add(burningFee) */\n      sstore\n        /* \"Task1/Mem.sol\":17859:17873  burningAddress */\n      sload(0x12)\n        /* \"Task1/Mem.sol\":17842:17885  Transfer(account,burningAddress,burningFee) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":17859:17873  burningAddress */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Task1/Mem.sol\":17842:17885  Transfer(account,burningAddress,burningFee) */\n      dup10\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"Task1/Mem.sol\":17842:17885  Transfer(account,burningAddress,burningFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Task1/Mem.sol\":17595:17896  if (burningFee > 0){... */\n    tag_309:\n        /* \"Task1/Mem.sol\":17910:17919  lpFee > 0 */\n      dup1\n      iszero\n        /* \"Task1/Mem.sol\":17906:18158  if (lpFee > 0){... */\n      tag_314\n      jumpi\n        /* \"Task1/Mem.sol\":17951:17976  transferAmount.sub(lpFee) */\n      tag_315\n        /* \"Task1/Mem.sol\":17951:17965  transferAmount */\n      dup5\n        /* \"Task1/Mem.sol\":17970:17975  lpFee */\n      dup3\n        /* \"Task1/Mem.sol\":17951:17969  transferAmount.sub */\n      tag_261\n        /* \"Task1/Mem.sol\":17951:17976  transferAmount.sub(lpFee) */\n      jump\t// in\n    tag_315:\n        /* \"Task1/Mem.sol\":18024:18033  lpAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"Task1/Mem.sol\":18014:18034  _balances[lpAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":18014:18023  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":18014:18034  _balances[lpAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":17934:17976  transferAmount = transferAmount.sub(lpFee) */\n      swap1\n      swap5\n      pop\n        /* \"Task1/Mem.sol\":18014:18045  _balances[lpAddress].add(lpFee) */\n      tag_316\n      swap1\n        /* \"Task1/Mem.sol\":18039:18044  lpFee */\n      dup3\n        /* \"Task1/Mem.sol\":18014:18038  _balances[lpAddress].add */\n      tag_187\n        /* \"Task1/Mem.sol\":18014:18045  _balances[lpAddress].add(lpFee) */\n      jump\t// in\n    tag_316:\n        /* \"Task1/Mem.sol\":18001:18010  lpAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"Task1/Mem.sol\":17991:18011  _balances[lpAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":17991:18000  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":17991:18011  _balances[lpAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":17991:18045  _balances[lpAddress] = _balances[lpAddress].add(lpFee) */\n      sstore\n        /* \"Task1/Mem.sol\":18073:18084  _lpFeeTotal */\n      sload(0x0f)\n        /* \"Task1/Mem.sol\":18073:18095  _lpFeeTotal.add(lpFee) */\n      tag_317\n      swap1\n        /* \"Task1/Mem.sol\":18089:18094  lpFee */\n      dup3\n        /* \"Task1/Mem.sol\":18073:18088  _lpFeeTotal.add */\n      tag_187\n        /* \"Task1/Mem.sol\":18073:18095  _lpFeeTotal.add(lpFee) */\n      jump\t// in\n    tag_317:\n        /* \"Task1/Mem.sol\":18059:18070  _lpFeeTotal */\n      0x0f\n        /* \"Task1/Mem.sol\":18059:18095  _lpFeeTotal = _lpFeeTotal.add(lpFee) */\n      sstore\n        /* \"Task1/Mem.sol\":18131:18140  lpAddress */\n      sload(0x13)\n        /* \"Task1/Mem.sol\":18114:18147  Transfer(account,lpAddress,lpFee) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":18131:18140  lpAddress */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Task1/Mem.sol\":18114:18147  Transfer(account,lpAddress,lpFee) */\n      dup10\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"Task1/Mem.sol\":18114:18147  Transfer(account,lpAddress,lpFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Task1/Mem.sol\":17906:18158  if (lpFee > 0){... */\n    tag_314:\n        /* \"Task1/Mem.sol\":18171:18185  charityFee > 0 */\n      dup3\n      iszero\n        /* \"Task1/Mem.sol\":18168:18463  if(charityFee > 0){... */\n      tag_319\n      jumpi\n        /* \"Task1/Mem.sol\":18217:18247  transferAmount.sub(charityFee) */\n      tag_320\n        /* \"Task1/Mem.sol\":18217:18231  transferAmount */\n      dup5\n        /* \"Task1/Mem.sol\":18236:18246  charityFee */\n      dup5\n        /* \"Task1/Mem.sol\":18217:18235  transferAmount.sub */\n      tag_261\n        /* \"Task1/Mem.sol\":18217:18247  transferAmount.sub(charityFee) */\n      jump\t// in\n    tag_320:\n        /* \"Task1/Mem.sol\":18300:18314  charityAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n        /* \"Task1/Mem.sol\":18290:18315  _balances[charityAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":18290:18299  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":18290:18315  _balances[charityAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Task1/Mem.sol\":18200:18247  transferAmount = transferAmount.sub(charityFee) */\n      swap1\n      swap5\n      pop\n        /* \"Task1/Mem.sol\":18290:18331  _balances[charityAddress].add(charityFee) */\n      tag_321\n      swap1\n        /* \"Task1/Mem.sol\":18320:18330  charityFee */\n      dup5\n        /* \"Task1/Mem.sol\":18290:18319  _balances[charityAddress].add */\n      tag_187\n        /* \"Task1/Mem.sol\":18290:18331  _balances[charityAddress].add(charityFee) */\n      jump\t// in\n    tag_321:\n        /* \"Task1/Mem.sol\":18272:18286  charityAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n        /* \"Task1/Mem.sol\":18262:18287  _balances[charityAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Task1/Mem.sol\":18262:18271  _balances */\n      0x04\n        /* \"Task1/Mem.sol\":18262:18287  _balances[charityAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Task1/Mem.sol\":18262:18331  _balances[charityAddress] = _balances[charityAddress].add(charityFee) */\n      sstore\n        /* \"Task1/Mem.sol\":18361:18374  _charityTotal */\n      sload(0x0d)\n        /* \"Task1/Mem.sol\":18361:18390  _charityTotal.add(charityFee) */\n      tag_322\n      swap1\n        /* \"Task1/Mem.sol\":18379:18389  charityFee */\n      dup5\n        /* \"Task1/Mem.sol\":18361:18378  _charityTotal.add */\n      tag_187\n        /* \"Task1/Mem.sol\":18361:18390  _charityTotal.add(charityFee) */\n      jump\t// in\n    tag_322:\n        /* \"Task1/Mem.sol\":18345:18358  _charityTotal */\n      0x0d\n        /* \"Task1/Mem.sol\":18345:18390  _charityTotal = _charityTotal.add(charityFee) */\n      sstore\n        /* \"Task1/Mem.sol\":18426:18440  charityAddress */\n      sload(0x11)\n        /* \"Task1/Mem.sol\":18409:18452  Transfer(account,charityAddress,charityFee) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup5\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Task1/Mem.sol\":18426:18440  charityAddress */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Task1/Mem.sol\":18409:18452  Transfer(account,charityAddress,charityFee) */\n      dup10\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"Task1/Mem.sol\":18409:18452  Transfer(account,charityAddress,charityFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Task1/Mem.sol\":18168:18463  if(charityFee > 0){... */\n    tag_319:\n      pop\n        /* \"Task1/Mem.sol\":18488:18502  transferAmount */\n      swap2\n      swap6\n        /* \"Task1/Mem.sol\":17262:18509  function SellCollectFee(address account, uint256 amount) private  returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Task1/Mem.sol\":3114:3210  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_261:\n        /* \"Task1/Mem.sol\":3172:3179  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":3198:3203  a - b */\n      tag_275\n        /* \"Task1/Mem.sol\":3202:3203  b */\n      dup3\n        /* \"Task1/Mem.sol\":3198:3199  a */\n      dup5\n        /* \"Task1/Mem.sol\":3198:3203  a - b */\n      tag_326\n      jump\t// in\n        /* \"Task1/Mem.sol\":3457:3553  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_280:\n        /* \"Task1/Mem.sol\":3515:3522  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":3541:3546  a * b */\n      tag_275\n        /* \"Task1/Mem.sol\":3545:3546  b */\n      dup3\n        /* \"Task1/Mem.sol\":3541:3542  a */\n      dup5\n        /* \"Task1/Mem.sol\":3541:3546  a * b */\n      tag_330\n      jump\t// in\n        /* \"Task1/Mem.sol\":3842:3938  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_281:\n        /* \"Task1/Mem.sol\":3900:3907  uint256 */\n      0x00\n        /* \"Task1/Mem.sol\":3926:3931  a / b */\n      tag_275\n        /* \"Task1/Mem.sol\":3930:3931  b */\n      dup3\n        /* \"Task1/Mem.sol\":3926:3927  a */\n      dup5\n        /* \"Task1/Mem.sol\":3926:3931  a / b */\n      tag_333\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_334:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_338:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_43:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_340:\n        /* \"#utility.yul\":343:372   */\n      tag_275\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_334\n      jump\t// in\n        /* \"#utility.yul\":565:1113   */\n    tag_50:\n        /* \"#utility.yul\":677:681   */\n      0x00\n        /* \"#utility.yul\":706:708   */\n      0x20\n        /* \"#utility.yul\":735:737   */\n      dup1\n        /* \"#utility.yul\":724:733   */\n      dup4\n        /* \"#utility.yul\":717:738   */\n      mstore\n        /* \"#utility.yul\":767:773   */\n      dup4\n        /* \"#utility.yul\":761:774   */\n      mload\n        /* \"#utility.yul\":810:816   */\n      dup1\n        /* \"#utility.yul\":805:807   */\n      dup3\n        /* \"#utility.yul\":794:803   */\n      dup6\n        /* \"#utility.yul\":790:808   */\n      add\n        /* \"#utility.yul\":783:817   */\n      mstore\n        /* \"#utility.yul\":835:836   */\n      0x00\n        /* \"#utility.yul\":845:985   */\n    tag_344:\n        /* \"#utility.yul\":859:865   */\n      dup2\n        /* \"#utility.yul\":856:857   */\n      dup2\n        /* \"#utility.yul\":853:866   */\n      lt\n        /* \"#utility.yul\":845:985   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":954:968   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":950:973   */\n      dup4\n      add\n        /* \"#utility.yul\":944:974   */\n      mload\n        /* \"#utility.yul\":920:937   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":939:941   */\n      0x40\n        /* \"#utility.yul\":916:942   */\n      add\n        /* \"#utility.yul\":909:975   */\n      mstore\n        /* \"#utility.yul\":874:884   */\n      dup3\n      add\n        /* \"#utility.yul\":845:985   */\n      jump(tag_344)\n    tag_346:\n        /* \"#utility.yul\":849:852   */\n      pop\n        /* \"#utility.yul\":1034:1035   */\n      0x00\n        /* \"#utility.yul\":1029:1031   */\n      0x40\n        /* \"#utility.yul\":1020:1026   */\n      dup3\n        /* \"#utility.yul\":1009:1018   */\n      dup7\n        /* \"#utility.yul\":1005:1027   */\n      add\n        /* \"#utility.yul\":1001:1032   */\n      add\n        /* \"#utility.yul\":994:1036   */\n      mstore\n        /* \"#utility.yul\":1104:1106   */\n      0x40\n        /* \"#utility.yul\":1097:1099   */\n      0x1f\n        /* \"#utility.yul\":1093:1100   */\n      not\n        /* \"#utility.yul\":1088:1090   */\n      0x1f\n        /* \"#utility.yul\":1080:1086   */\n      dup4\n        /* \"#utility.yul\":1076:1091   */\n      add\n        /* \"#utility.yul\":1072:1101   */\n      and\n        /* \"#utility.yul\":1061:1070   */\n      dup6\n        /* \"#utility.yul\":1057:1102   */\n      add\n        /* \"#utility.yul\":1053:1107   */\n      add\n        /* \"#utility.yul\":1045:1107   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":565:1113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1372   */\n    tag_53:\n        /* \"#utility.yul\":1186:1192   */\n      0x00\n        /* \"#utility.yul\":1194:1200   */\n      dup1\n        /* \"#utility.yul\":1247:1249   */\n      0x40\n        /* \"#utility.yul\":1235:1244   */\n      dup4\n        /* \"#utility.yul\":1226:1233   */\n      dup6\n        /* \"#utility.yul\":1222:1245   */\n      sub\n        /* \"#utility.yul\":1218:1250   */\n      slt\n        /* \"#utility.yul\":1215:1267   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":1263:1264   */\n      0x00\n        /* \"#utility.yul\":1260:1261   */\n      dup1\n        /* \"#utility.yul\":1253:1265   */\n      revert\n        /* \"#utility.yul\":1215:1267   */\n    tag_348:\n        /* \"#utility.yul\":1286:1315   */\n      tag_349\n        /* \"#utility.yul\":1305:1314   */\n      dup4\n        /* \"#utility.yul\":1286:1315   */\n      tag_334\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":1276:1315   */\n      swap5\n        /* \"#utility.yul\":1362:1364   */\n      0x20\n        /* \"#utility.yul\":1347:1365   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1334:1366   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1118:1372   */\n      jump\t// out\n        /* \"#utility.yul\":1569:1897   */\n    tag_65:\n        /* \"#utility.yul\":1646:1652   */\n      0x00\n        /* \"#utility.yul\":1654:1660   */\n      dup1\n        /* \"#utility.yul\":1662:1668   */\n      0x00\n        /* \"#utility.yul\":1715:1717   */\n      0x60\n        /* \"#utility.yul\":1703:1712   */\n      dup5\n        /* \"#utility.yul\":1694:1701   */\n      dup7\n        /* \"#utility.yul\":1690:1713   */\n      sub\n        /* \"#utility.yul\":1686:1718   */\n      slt\n        /* \"#utility.yul\":1683:1735   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":1731:1732   */\n      0x00\n        /* \"#utility.yul\":1728:1729   */\n      dup1\n        /* \"#utility.yul\":1721:1733   */\n      revert\n        /* \"#utility.yul\":1683:1735   */\n    tag_352:\n        /* \"#utility.yul\":1754:1783   */\n      tag_353\n        /* \"#utility.yul\":1773:1782   */\n      dup5\n        /* \"#utility.yul\":1754:1783   */\n      tag_334\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1744:1783   */\n      swap3\n      pop\n        /* \"#utility.yul\":1802:1840   */\n      tag_354\n        /* \"#utility.yul\":1836:1838   */\n      0x20\n        /* \"#utility.yul\":1825:1834   */\n      dup6\n        /* \"#utility.yul\":1821:1839   */\n      add\n        /* \"#utility.yul\":1802:1840   */\n      tag_334\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1792:1840   */\n      swap2\n      pop\n        /* \"#utility.yul\":1887:1889   */\n      0x40\n        /* \"#utility.yul\":1876:1885   */\n      dup5\n        /* \"#utility.yul\":1872:1890   */\n      add\n        /* \"#utility.yul\":1859:1891   */\n      calldataload\n        /* \"#utility.yul\":1849:1891   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1897   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1902:2249   */\n    tag_73:\n        /* \"#utility.yul\":1967:1973   */\n      0x00\n        /* \"#utility.yul\":1975:1981   */\n      dup1\n        /* \"#utility.yul\":2028:2030   */\n      0x40\n        /* \"#utility.yul\":2016:2025   */\n      dup4\n        /* \"#utility.yul\":2007:2014   */\n      dup6\n        /* \"#utility.yul\":2003:2026   */\n      sub\n        /* \"#utility.yul\":1999:2031   */\n      slt\n        /* \"#utility.yul\":1996:2048   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":2044:2045   */\n      0x00\n        /* \"#utility.yul\":2041:2042   */\n      dup1\n        /* \"#utility.yul\":2034:2046   */\n      revert\n        /* \"#utility.yul\":1996:2048   */\n    tag_356:\n        /* \"#utility.yul\":2067:2096   */\n      tag_357\n        /* \"#utility.yul\":2086:2095   */\n      dup4\n        /* \"#utility.yul\":2067:2096   */\n      tag_334\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2057:2096   */\n      swap2\n      pop\n        /* \"#utility.yul\":2146:2148   */\n      0x20\n        /* \"#utility.yul\":2135:2144   */\n      dup4\n        /* \"#utility.yul\":2131:2149   */\n      add\n        /* \"#utility.yul\":2118:2150   */\n      calldataload\n        /* \"#utility.yul\":2193:2198   */\n      dup1\n        /* \"#utility.yul\":2186:2199   */\n      iszero\n        /* \"#utility.yul\":2179:2200   */\n      iszero\n        /* \"#utility.yul\":2172:2177   */\n      dup2\n        /* \"#utility.yul\":2169:2201   */\n      eq\n        /* \"#utility.yul\":2159:2219   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":2215:2216   */\n      0x00\n        /* \"#utility.yul\":2212:2213   */\n      dup1\n        /* \"#utility.yul\":2205:2217   */\n      revert\n        /* \"#utility.yul\":2159:2219   */\n    tag_358:\n        /* \"#utility.yul\":2238:2243   */\n      dup1\n        /* \"#utility.yul\":2228:2243   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1902:2249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2651:2911   */\n    tag_145:\n        /* \"#utility.yul\":2719:2725   */\n      0x00\n        /* \"#utility.yul\":2727:2733   */\n      dup1\n        /* \"#utility.yul\":2780:2782   */\n      0x40\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2759:2766   */\n      dup6\n        /* \"#utility.yul\":2755:2778   */\n      sub\n        /* \"#utility.yul\":2751:2783   */\n      slt\n        /* \"#utility.yul\":2748:2800   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":2796:2797   */\n      0x00\n        /* \"#utility.yul\":2793:2794   */\n      dup1\n        /* \"#utility.yul\":2786:2798   */\n      revert\n        /* \"#utility.yul\":2748:2800   */\n    tag_362:\n        /* \"#utility.yul\":2819:2848   */\n      tag_363\n        /* \"#utility.yul\":2838:2847   */\n      dup4\n        /* \"#utility.yul\":2819:2848   */\n      tag_334\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2809:2848   */\n      swap2\n      pop\n        /* \"#utility.yul\":2867:2905   */\n      tag_364\n        /* \"#utility.yul\":2901:2903   */\n      0x20\n        /* \"#utility.yul\":2890:2899   */\n      dup5\n        /* \"#utility.yul\":2886:2904   */\n      add\n        /* \"#utility.yul\":2867:2905   */\n      tag_334\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2857:2905   */\n      swap1\n      pop\n        /* \"#utility.yul\":2651:2911   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2916:3296   */\n    tag_153:\n        /* \"#utility.yul\":2995:2996   */\n      0x01\n        /* \"#utility.yul\":2991:3003   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3038:3050   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3059:3120   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3113:3117   */\n      0x7f\n        /* \"#utility.yul\":3105:3111   */\n      dup3\n        /* \"#utility.yul\":3101:3118   */\n      and\n        /* \"#utility.yul\":3091:3118   */\n      swap2\n      pop\n        /* \"#utility.yul\":3059:3120   */\n    tag_366:\n        /* \"#utility.yul\":3166:3168   */\n      0x20\n        /* \"#utility.yul\":3158:3164   */\n      dup3\n        /* \"#utility.yul\":3155:3169   */\n      lt\n        /* \"#utility.yul\":3135:3153   */\n      dup2\n        /* \"#utility.yul\":3132:3170   */\n      sub\n        /* \"#utility.yul\":3129:3290   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":3212:3222   */\n      0x4e487b71\n        /* \"#utility.yul\":3207:3210   */\n      0xe0\n        /* \"#utility.yul\":3203:3223   */\n      shl\n        /* \"#utility.yul\":3200:3201   */\n      0x00\n        /* \"#utility.yul\":3193:3224   */\n      mstore\n        /* \"#utility.yul\":3247:3251   */\n      0x22\n        /* \"#utility.yul\":3244:3245   */\n      0x04\n        /* \"#utility.yul\":3237:3252   */\n      mstore\n        /* \"#utility.yul\":3275:3279   */\n      0x24\n        /* \"#utility.yul\":3272:3273   */\n      0x00\n        /* \"#utility.yul\":3265:3280   */\n      revert\n        /* \"#utility.yul\":3129:3290   */\n    tag_367:\n      pop\n        /* \"#utility.yul\":2916:3296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3301:3428   */\n    tag_335:\n        /* \"#utility.yul\":3362:3372   */\n      0x4e487b71\n        /* \"#utility.yul\":3357:3360   */\n      0xe0\n        /* \"#utility.yul\":3353:3373   */\n      shl\n        /* \"#utility.yul\":3350:3351   */\n      0x00\n        /* \"#utility.yul\":3343:3374   */\n      mstore\n        /* \"#utility.yul\":3393:3397   */\n      0x11\n        /* \"#utility.yul\":3390:3391   */\n      0x04\n        /* \"#utility.yul\":3383:3398   */\n      mstore\n        /* \"#utility.yul\":3417:3421   */\n      0x24\n        /* \"#utility.yul\":3414:3415   */\n      0x00\n        /* \"#utility.yul\":3407:3422   */\n      revert\n        /* \"#utility.yul\":3433:3558   */\n    tag_165:\n        /* \"#utility.yul\":3498:3507   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3519:3529   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3516:3552   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":3532:3550   */\n      tag_158\n      tag_335\n      jump\t// in\n        /* \"#utility.yul\":6655:6783   */\n    tag_326:\n        /* \"#utility.yul\":6722:6731   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6743:6754   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6740:6777   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":6757:6775   */\n      tag_158\n      tag_335\n      jump\t// in\n        /* \"#utility.yul\":6788:6956   */\n    tag_330:\n        /* \"#utility.yul\":6861:6870   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6892:6901   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6909:6924   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6903:6925   */\n      dup5\n      eq\n        /* \"#utility.yul\":6889:6926   */\n      or\n        /* \"#utility.yul\":6879:6950   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":6930:6948   */\n      tag_158\n      tag_335\n      jump\t// in\n        /* \"#utility.yul\":6961:7178   */\n    tag_333:\n        /* \"#utility.yul\":7001:7002   */\n      0x00\n        /* \"#utility.yul\":7027:7028   */\n      dup3\n        /* \"#utility.yul\":7017:7149   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":7071:7081   */\n      0x4e487b71\n        /* \"#utility.yul\":7066:7069   */\n      0xe0\n        /* \"#utility.yul\":7062:7082   */\n      shl\n        /* \"#utility.yul\":7059:7060   */\n      0x00\n        /* \"#utility.yul\":7052:7083   */\n      mstore\n        /* \"#utility.yul\":7106:7110   */\n      0x12\n        /* \"#utility.yul\":7103:7104   */\n      0x04\n        /* \"#utility.yul\":7096:7111   */\n      mstore\n        /* \"#utility.yul\":7134:7138   */\n      0x24\n        /* \"#utility.yul\":7131:7132   */\n      0x00\n        /* \"#utility.yul\":7124:7139   */\n      revert\n        /* \"#utility.yul\":7017:7149   */\n    tag_387:\n      pop\n        /* \"#utility.yul\":7163:7172   */\n      div\n      swap1\n        /* \"#utility.yul\":6961:7178   */\n      jump\t// out\n    stop\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122033285e74707a7872ed6036ad23de40a0a8e9c886c57a84a648ebac68b2e9290464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_322": {
									"entryPoint": null,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_442": {
									"entryPoint": 381,
									"id": 442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2914:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2881:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2805:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2816:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2827:4:1",
														"type": ""
													}
												],
												"src": "2735:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604052600b60809081526a4d656d457468657265756d60a81b60a0526001906200002c908262000272565b5060408051808201909152600481526309a8aa8960e31b602082015260029062000057908262000272565b506003805460ff191660129081179091556c01431e0fae6d7217caa000000060085560646009819055600a819055600b5561012c600c55601180546001600160a01b0319908116732cd2bd245b2c563c98356b543d6c9a1abf7353c51790915581548116909155601480549091167380dc1b16eb733ca49b289f6b39090ec0dc0222a81790556b09b18ab5df7180b6b8000000601555348015620000fa57600080fd5b5062000106336200017d565b3360008181526006602090815260408083208054600160ff199182168117909255308552828520805490911690911790556008548484526004835281842081905590519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200033e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001f857607f821691505b6020821081036200021957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200026d57600081815260208120601f850160051c81016020861015620002485750805b601f850160051c820191505b81811015620002695782815560010162000254565b5050505b505050565b81516001600160401b038111156200028e576200028e620001cd565b620002a6816200029f8454620001e3565b846200021f565b602080601f831160018114620002de5760008415620002c55750858301515b600019600386901b1c1916600185901b17855562000269565b600085815260208120601f198616915b828110156200030f57888601518255948401946001909101908401620002ee565b50858210156200032e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61153a806200034e6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063a9059cbb116100a2578063bcac917611610071578063bcac9176146103e6578063ceae0e8d146103ef578063dd62ed3e146103f8578063f2fde38b1461043157600080fd5b8063a9059cbb146103ae578063ad0a00aa146103c1578063afcf2fc4146103ca578063bbde77c1146103dd57600080fd5b80638da5cb5b116100de5780638da5cb5b1461036f57806395d89b41146103805780639b4dc8cc14610388578063a457c2d71461039b57600080fd5b806370a0823114610322578063715018a61461034b5780637a351a1d1461035357806382d99cb11461036657600080fd5b80632d43abd811610187578063481123961161015657806348112396146102ea5780634f8244f4146102fd57806352db1ca4146103065780636c7261371461030f57600080fd5b80632d43abd814610282578063313ce567146102975780633871ef64146102ac57806339509351146102d757600080fd5b806315c93a7d116101c357806315c93a7d1461025557806318160ddd1461025e57806323b872dd1461026657806327364d211461027957600080fd5b806302fb4880146101ea57806306fdde031461021d578063095ea7b314610232575b600080fd5b61020a6101f83660046112aa565b60076020526000908152604090205481565b6040519081526020015b60405180910390f35b610225610444565b60405161021491906112c5565b610245610240366004611313565b6104d6565b6040519015158152602001610214565b61020a600b5481565b60085461020a565b61024561027436600461133d565b6104ed565b61020a600f5481565b610295610290366004611379565b610652565b005b60035460405160ff9091168152602001610214565b6014546102bf906001600160a01b031681565b6040516001600160a01b039091168152602001610214565b6102456102e5366004611313565b61067f565b6012546102bf906001600160a01b031681565b61020a60105481565b61020a600d5481565b61029561031d366004611379565b6106b5565b61020a6103303660046112aa565b6001600160a01b031660009081526004602052604090205490565b6102956106df565b6102956103613660046112aa565b6106f3565b61020a60095481565b6000546001600160a01b03166102bf565b610225610738565b6013546102bf906001600160a01b031681565b6102456103a9366004611313565b610747565b6102456103bc366004611313565b610796565b61020a600a5481565b6011546102bf906001600160a01b031681565b61020a60155481565b61020a600c5481565b61020a600e5481565b61020a6104063660046113b5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b61029561043f3660046112aa565b6108bf565b606060018054610453906113e8565b80601f016020809104026020016040519081016040528092919081815260200182805461047f906113e8565b80156104cc5780601f106104a1576101008083540402835291602001916104cc565b820191906000526020600020905b8154815290600101906020018083116104af57829003601f168201915b5050505050905090565b60006104e3338484610938565b5060015b92915050565b33600081815260076020526040812054909190158061053057506001600160a01b038116600090815260076020526040902054429061052d90600a611438565b11155b6105755760405162461bcd60e51b81526020600482015260116024820152701058d8dbdd5b9d081a5cc81b1bd8dad959607a1b60448201526064015b60405180910390fd5b6015546001600160a01b03851660009081526004602052604090205461059c908590611438565b11156105ea5760405162461bcd60e51b815260206004820152601f60248201527f4d6178696d756d2077616c6c65742062616c616e636520657863656564656400604482015260640161056c565b6105f5858585610a5c565b610647853361064286604051806060016040528060288152602001611498602891396001600160a01b038b1660009081526005602090815260408083203384529091529020549190610d08565b610938565b506001949350505050565b61065a610d34565b506001600160a01b03166000908152600660205260409020805460ff19166001179055565b3360008181526005602090815260408083206001600160a01b038716845290915281205490916104e39185906106429086610d8e565b6106bd610d34565b506001600160a01b03166000908152600660205260409020805460ff19169055565b6106e7610d34565b6106f16000610da1565b565b6106fb610d34565b6013546001600160a01b039081169082160361071657600080fd5b601380546001600160a01b0319166001600160a01b0392909216919091179055565b606060028054610453906113e8565b60006104e33384610642856040518060600160405280602581526020016114e0602591393360009081526005602090815260408083206001600160a01b038d1684529091529020549190610d08565b3360008181526007602052604081205490919015806107d957506001600160a01b03811660009081526007602052604090205442906107d690600a611438565b11155b6108195760405162461bcd60e51b81526020600482015260116024820152701058d8dbdd5b9d081a5cc81b1bd8dad959607a1b604482015260640161056c565b83836015548161083e846001600160a01b031660009081526004602052604090205490565b6108489190611438565b11156108965760405162461bcd60e51b815260206004820152601f60248201527f4d6178696d756d2077616c6c65742062616c616e636520657863656564656400604482015260640161056c565b6108a1338787610a5c565b50503360009081526007602052604090204290555060019392505050565b6108c7610d34565b6001600160a01b03811661092c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161056c565b61093581610da1565b50565b6001600160a01b03831661099a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161056c565b6001600160a01b0382166109fb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161056c565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ac05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161056c565b6001600160a01b038216610b225760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161056c565b6001600160a01b038316600090815260066020526040902054819060ff168015610b6457506001600160a01b03831660009081526006602052604090205460ff165b15610b6c5750805b6001600160a01b03841660009081526006602052604090205460ff16158015610bae57506001600160a01b03831660009081526006602052604090205460ff16155b15610bc057610bbd8483610df1565b90505b6001600160a01b03841660009081526006602052604090205460ff168015610c0157506001600160a01b03831660009081526006602052604090205460ff16155b15610c1357610c108483610ebb565b90505b6001600160a01b03841660009081526006602052604090205460ff16158015610c5457506001600160a01b03831660009081526006602052604090205460ff165b15610c6657610c638483611037565b90505b6001600160a01b038416600090815260046020526040902054610c89908361126a565b6001600160a01b038086166000908152600460205260408082209390935590851681522054610cb89082610d8e565b6001600160a01b0380851660008181526004602052604090819020939093559151908616906000805160206114c083398151915290610cfa9085815260200190565b60405180910390a350505050565b60008184841115610d2c5760405162461bcd60e51b815260040161056c91906112c5565b505050900390565b6000546001600160a01b031633146106f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056c565b6000610d9a8284611438565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808290506000610e1a612710610e14600c548761127690919063ffffffff16565b90611282565b90508015610eb357610e2c828261126a565b6014546001600160a01b0316600090815260046020526040902054909250610e549082610d8e565b6014546001600160a01b0316600090815260046020526040902055601054610e7c9082610d8e565b6010556014546040518281526001600160a01b03918216918716906000805160206114c08339815191529060200160405180910390a35b509392505050565b6000808290506000610ede612710610e146009548761127690919063ffffffff16565b90506000610efd612710610e14600b548861127690919063ffffffff16565b90508015610f9657610f0f838261126a565b6013546001600160a01b0316600090815260046020526040902054909350610f379082610d8e565b6013546001600160a01b0316600090815260046020526040902055600f54610f5f9082610d8e565b600f556013546040518281526001600160a01b03918216918816906000805160206114c08339815191529060200160405180910390a35b811561102d57610fa6838361126a565b6011546001600160a01b0316600090815260046020526040902054909350610fce9083610d8e565b6011546001600160a01b0316600090815260046020526040902055600d54610ff69083610d8e565b600d556011546040518381526001600160a01b03918216918816906000805160206114c08339815191529060200160405180910390a35b5090949350505050565b600080829050600061105a612710610e146009548761127690919063ffffffff16565b90506000611079612710610e14600a548861127690919063ffffffff16565b90506000611098612710610e14600b548961127690919063ffffffff16565b90508115611131576110aa848361126a565b6012546001600160a01b03166000908152600460205260409020549094506110d29083610d8e565b6012546001600160a01b0316600090815260046020526040902055600e546110fa9083610d8e565b600e556012546040518381526001600160a01b03918216918916906000805160206114c08339815191529060200160405180910390a35b80156111c857611141848261126a565b6013546001600160a01b03166000908152600460205260409020549094506111699082610d8e565b6013546001600160a01b0316600090815260046020526040902055600f546111919082610d8e565b600f556013546040518281526001600160a01b03918216918916906000805160206114c08339815191529060200160405180910390a35b821561125f576111d8848461126a565b6011546001600160a01b03166000908152600460205260409020549094506112009084610d8e565b6011546001600160a01b0316600090815260046020526040902055600d546112289084610d8e565b600d556011546040518481526001600160a01b03918216918916906000805160206114c08339815191529060200160405180910390a35b509195945050505050565b6000610d9a828461144b565b6000610d9a828461145e565b6000610d9a8284611475565b80356001600160a01b03811681146112a557600080fd5b919050565b6000602082840312156112bc57600080fd5b610d9a8261128e565b600060208083528351808285015260005b818110156112f2578581018301518582016040015282016112d6565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561132657600080fd5b61132f8361128e565b946020939093013593505050565b60008060006060848603121561135257600080fd5b61135b8461128e565b92506113696020850161128e565b9150604084013590509250925092565b6000806040838503121561138c57600080fd5b6113958361128e565b9150602083013580151581146113aa57600080fd5b809150509250929050565b600080604083850312156113c857600080fd5b6113d18361128e565b91506113df6020840161128e565b90509250929050565b600181811c908216806113fc57607f821691505b60208210810361141c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104e7576104e7611422565b818103818111156104e7576104e7611422565b80820281158282048414176104e7576104e7611422565b60008261149257634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122033285e74707a7872ed6036ad23de40a0a8e9c886c57a84a648ebac68b2e9290464736f6c63430008130033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xB PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH11 0x4D656D457468657265756D PUSH1 0xA8 SHL PUSH1 0xA0 MSTORE PUSH1 0x1 SWAP1 PUSH3 0x2C SWAP1 DUP3 PUSH3 0x272 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x9A8AA89 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 PUSH3 0x57 SWAP1 DUP3 PUSH3 0x272 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH1 0x8 SSTORE PUSH1 0x64 PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB SSTORE PUSH2 0x12C PUSH1 0xC SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x2CD2BD245B2C563C98356B543D6C9A1ABF7353C5 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x14 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x80DC1B16EB733CA49B289F6B39090EC0DC0222A8 OR SWAP1 SSTORE PUSH12 0x9B18AB5DF7180B6B8000000 PUSH1 0x15 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x106 CALLER PUSH3 0x17D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 SLOAD DUP5 DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x33E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x219 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x26D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x248 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x269 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x254 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x28E JUMPI PUSH3 0x28E PUSH3 0x1CD JUMP JUMPDEST PUSH3 0x2A6 DUP2 PUSH3 0x29F DUP5 SLOAD PUSH3 0x1E3 JUMP JUMPDEST DUP5 PUSH3 0x21F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2DE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2C5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x269 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x30F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2EE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x32E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x153A DUP1 PUSH3 0x34E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBCAC9176 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBCAC9176 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xCEAE0E8D EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xAD0A00AA EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xAFCF2FC4 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xBBDE77C1 EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x9B4DC8CC EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x7A351A1D EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x82D99CB1 EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D43ABD8 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x48112396 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x48112396 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x4F8244F4 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x52DB1CA4 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x6C726137 EQ PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D43ABD8 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x3871EF64 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15C93A7D GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x15C93A7D EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x27364D21 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB4880 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x232 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x245 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x20A PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x652 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x295 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x225 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x453 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47F SWAP1 PUSH2 0x13E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E3 CALLER DUP5 DUP5 PUSH2 0x938 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 ISZERO DUP1 PUSH2 0x530 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 PUSH2 0x52D SWAP1 PUSH1 0xA PUSH2 0x1438 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1058D8DBDD5B9D081A5CC81B1BD8DAD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x59C SWAP1 DUP6 SWAP1 PUSH2 0x1438 JUMP JUMPDEST GT ISZERO PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D2077616C6C65742062616C616E636520657863656564656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST PUSH2 0x5F5 DUP6 DUP6 DUP6 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x647 DUP6 CALLER PUSH2 0x642 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1498 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x65A PUSH2 0xD34 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4E3 SWAP2 DUP6 SWAP1 PUSH2 0x642 SWAP1 DUP7 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x6BD PUSH2 0xD34 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x6F1 PUSH1 0x0 PUSH2 0xDA1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6FB PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x453 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E3 CALLER DUP5 PUSH2 0x642 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E0 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 ISZERO DUP1 PUSH2 0x7D9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 PUSH2 0x7D6 SWAP1 PUSH1 0xA PUSH2 0x1438 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1058D8DBDD5B9D081A5CC81B1BD8DAD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST DUP4 DUP4 PUSH1 0x15 SLOAD DUP2 PUSH2 0x83E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x1438 JUMP JUMPDEST GT ISZERO PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D2077616C6C65742062616C616E636520657863656564656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST PUSH2 0x8A1 CALLER DUP8 DUP8 PUSH2 0xA5C JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH2 0x935 DUP2 PUSH2 0xDA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xB64 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB6C JUMPI POP DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBAE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xBC0 JUMPI PUSH2 0xBBD DUP5 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xC01 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC10 DUP5 DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xC54 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xC66 JUMPI PUSH2 0xC63 DUP5 DUP4 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC89 SWAP1 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xCB8 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xCFA SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xD2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 DUP5 PUSH2 0x1438 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0xE1A PUSH2 0x2710 PUSH2 0xE14 PUSH1 0xC SLOAD DUP8 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1282 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xE2C DUP3 DUP3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0xE54 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH2 0xE7C SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0xEDE PUSH2 0x2710 PUSH2 0xE14 PUSH1 0x9 SLOAD DUP8 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEFD PUSH2 0x2710 PUSH2 0xE14 PUSH1 0xB SLOAD DUP9 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xF96 JUMPI PUSH2 0xF0F DUP4 DUP3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH2 0xF37 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xF SLOAD PUSH2 0xF5F SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP2 ISZERO PUSH2 0x102D JUMPI PUSH2 0xFA6 DUP4 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH2 0xFCE SWAP1 DUP4 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0xFF6 SWAP1 DUP4 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0x105A PUSH2 0x2710 PUSH2 0xE14 PUSH1 0x9 SLOAD DUP8 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1079 PUSH2 0x2710 PUSH2 0xE14 PUSH1 0xA SLOAD DUP9 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1098 PUSH2 0x2710 PUSH2 0xE14 PUSH1 0xB SLOAD DUP10 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1131 JUMPI PUSH2 0x10AA DUP5 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP PUSH2 0x10D2 SWAP1 DUP4 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xE SLOAD PUSH2 0x10FA SWAP1 DUP4 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 ISZERO PUSH2 0x11C8 JUMPI PUSH2 0x1141 DUP5 DUP3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP PUSH2 0x1169 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xF SLOAD PUSH2 0x1191 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP3 ISZERO PUSH2 0x125F JUMPI PUSH2 0x11D8 DUP5 DUP5 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP PUSH2 0x1200 SWAP1 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0x1228 SWAP1 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 DUP5 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 DUP5 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 DUP5 PUSH2 0x1475 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9A DUP3 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12F2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x12D6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132F DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135B DUP5 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP PUSH2 0x1369 PUSH1 0x20 DUP6 ADD PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1395 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D1 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x13DF PUSH1 0x20 DUP5 ADD PUSH2 0x128E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x141C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4E7 JUMPI PUSH2 0x4E7 PUSH2 0x1422 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4E7 JUMPI PUSH2 0x4E7 PUSH2 0x1422 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4E7 JUMPI PUSH2 0x4E7 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1492 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365DDF252AD1BE2C89B69C2 0xB0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212203328 0x5E PUSH21 0x707A7872ED6036AD23DE40A0A8E9C886C57A84A648 0xEB 0xAC PUSH9 0xB2E9290464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "11144:36:0:-:0;11056:8458;11144:36;;11056:8458;11144:36;;;-1:-1:-1;;;11144:36:0;;;;;;;;:::i;:::-;-1:-1:-1;11186:31:0;;;;;;;;;;;;-1:-1:-1;;;11186:31:0;;;;;;;;;;:::i;:::-;-1:-1:-1;11223:28:0;;;-1:-1:-1;;11223:28:0;11249:2;11223:28;;;;;;11527:20;11494:53;;11580:3;11554:29;;;;11599:32;;;;11644:27;;11715:3;11683:35;;11872:75;;;-1:-1:-1;;;;;;11872:75:0;;;11905:42;11872:75;;;;11958:74;;;;;;;12117:76;;;;;;12151:42;12117:76;;;12238:17;12204:51;;12664:242;;;;;;;;;-1:-1:-1;8675:32:0;7569:10;8675:18;:32::i;:::-;12707:10;12689:29;;;;:17;:29;;;;;;;;:36;;12721:4;-1:-1:-1;;12689:36:0;;;;;;;;12761:4;12735:32;;;;;:39;;;;;;;;;;12808:12;;12784:21;;;:9;:21;;;;;:36;;;12852:46;;2881:25:1;;;12852:46:0;;2854:18:1;12852:46:0;;;;;;;11056:8458;;10172:187;10245:16;10264:6;;-1:-1:-1;;;;;10280:17:0;;;-1:-1:-1;;;;;;10280:17:0;;;;;;10312:40;;10264:6;;;;;;;10312:40;;10245:16;10312:40;10235:124;10172:187;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;2735:177::-;11056:8458:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ExcludedFromFee_1407": {
									"entryPoint": 1618,
									"id": 1407,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@IncludeInFee_1423": {
									"entryPoint": 1717,
									"id": 1423,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@SellCollectFee_1329": {
									"entryPoint": 4151,
									"id": 1329,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_approve_940": {
									"entryPoint": 2360,
									"id": 940,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burningFeeTotal_568": {
									"entryPoint": null,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_burningFee_558": {
									"entryPoint": null,
									"id": 558,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_charityTotal_566": {
									"entryPoint": null,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_charity_555": {
									"entryPoint": null,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_385": {
									"entryPoint": 3380,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_inbetweenFeeTotal_572": {
									"entryPoint": null,
									"id": 572,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_inbetweenFee__564": {
									"entryPoint": null,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_lockTimestamp_545": {
									"entryPoint": null,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_lpFeeTotal_570": {
									"entryPoint": null,
									"id": 570,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_lpFee_561": {
									"entryPoint": null,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_322": {
									"entryPoint": null,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_442": {
									"entryPoint": 3489,
									"id": 442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1067": {
									"entryPoint": 2652,
									"id": 1067,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 3470,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_769": {
									"entryPoint": null,
									"id": 769,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_789": {
									"entryPoint": 1238,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_716": {
									"entryPoint": null,
									"id": 716,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@betweenCollectFee_1391": {
									"entryPoint": 3569,
									"id": 1391,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burningAddress_578": {
									"entryPoint": null,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyCollectFee_1175": {
									"entryPoint": 3771,
									"id": 1175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@charityAddress_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_694": {
									"entryPoint": null,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_896": {
									"entryPoint": 1863,
									"id": 896,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 4738,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@inbetweenAddress_583": {
									"entryPoint": null,
									"id": 583,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseAllowance_868": {
									"entryPoint": 1663,
									"id": 868,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lpAddress_580": {
									"entryPoint": null,
									"id": 580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxWalletBalance_590": {
									"entryPoint": null,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 4726,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_678": {
									"entryPoint": 1092,
									"id": 678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_371": {
									"entryPoint": null,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_399": {
									"entryPoint": 1759,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setLPAddress_1441": {
									"entryPoint": 1779,
									"id": 1441,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 4714,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_260": {
									"entryPoint": 3336,
									"id": 260,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_686": {
									"entryPoint": 1848,
									"id": 686,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_841": {
									"entryPoint": 1261,
									"id": 841,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_422": {
									"entryPoint": 2239,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_752": {
									"entryPoint": 1942,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_104267c7892f9914808c25827e20032382daf34f0cdf95e15f8d66b7f5b00e41__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3696a5724fd30f8ebb95abd3cef3a8ad1a4959139792add59a1ce6a1f657f6f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7180:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:1",
														"type": ""
													}
												],
												"src": "383:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "686:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "696:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "706:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "700:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "724:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "735:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "747:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "767:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "761:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "761:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "751:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "794:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "805:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "783:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "783:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "826:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "835:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "830:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "895:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "924:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "920:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "920:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "939:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "916:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "916:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "958:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "966:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "970:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "909:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "909:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "909:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "856:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "859:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "853:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "853:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "867:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "869:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "878:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "881:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "874:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "874:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "869:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "849:3:1",
																"statements": []
															},
															"src": "845:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1009:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1020:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1005:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1005:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1029:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1001:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1034:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "994:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1045:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1061:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1080:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1088:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1076:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1076:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1097:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1093:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1093:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1072:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1072:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1057:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1104:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1053:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1045:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "655:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "677:4:1",
														"type": ""
													}
												],
												"src": "565:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1205:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1251:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1260:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1263:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1253:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1253:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1226:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1235:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1222:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:32:1"
															},
															"nodeType": "YulIf",
															"src": "1215:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1276:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1305:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1286:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1324:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1351:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1347:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1334:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1324:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1163:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1174:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1186:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1194:6:1",
														"type": ""
													}
												],
												"src": "1118:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1472:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1482:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1494:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1505:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1490:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1482:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1524:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1549:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1542:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1542:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1535:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1517:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1441:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1452:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1463:4:1",
														"type": ""
													}
												],
												"src": "1377:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1673:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1719:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1728:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1731:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1721:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1721:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1721:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1694:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1703:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1690:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1715:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:32:1"
															},
															"nodeType": "YulIf",
															"src": "1683:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1744:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1773:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1754:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1792:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1836:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1802:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1849:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1876:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1887:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1872:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1872:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1859:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1849:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1623:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1634:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1646:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1654:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1662:6:1",
														"type": ""
													}
												],
												"src": "1569:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1986:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2032:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2044:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2034:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2034:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2007:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2016:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2028:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1999:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1999:32:1"
															},
															"nodeType": "YulIf",
															"src": "1996:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2057:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2086:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2067:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2067:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2057:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2105:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2135:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2146:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2131:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2118:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2109:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2203:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2212:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2215:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2205:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2205:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2172:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2193:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2186:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2186:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2179:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2169:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2169:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:40:1"
															},
															"nodeType": "YulIf",
															"src": "2159:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2238:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2228:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1944:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1955:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1967:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1975:6:1",
														"type": ""
													}
												],
												"src": "1902:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2361:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2403:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2418:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2414:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2396:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2320:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2331:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2342:4:1",
														"type": ""
													}
												],
												"src": "2254:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2554:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2566:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2554:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2596:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2627:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2632:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2623:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2623:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2636:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2619:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2619:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2589:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2513:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2524:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2535:4:1",
														"type": ""
													}
												],
												"src": "2443:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2784:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2793:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2796:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2786:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2786:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2786:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2759:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2755:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2755:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2751:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:32:1"
															},
															"nodeType": "YulIf",
															"src": "2748:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2838:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2819:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2809:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2890:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2901:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2886:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2886:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2867:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2857:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2696:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2707:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2719:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2727:6:1",
														"type": ""
													}
												],
												"src": "2651:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2981:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2995:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2998:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2991:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2981:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3012:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3042:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3048:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3038:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3038:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3016:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3089:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3091:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3105:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3113:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3101:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3101:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3091:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3069:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:26:1"
															},
															"nodeType": "YulIf",
															"src": "3059:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3179:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3200:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3207:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3212:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3203:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3203:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3193:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3193:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3193:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3244:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3247:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3237:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3237:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3237:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3272:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3275:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3265:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3265:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3135:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3158:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3155:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3155:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3132:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:38:1"
															},
															"nodeType": "YulIf",
															"src": "3129:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2951:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2960:6:1",
														"type": ""
													}
												],
												"src": "2916:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3333:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3350:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3357:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3362:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3353:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3343:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3390:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3393:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3414:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3417:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3407:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3301:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3481:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3491:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3502:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3505:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3491:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3530:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3532:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3532:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3532:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3522:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3525:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3519:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:10:1"
															},
															"nodeType": "YulIf",
															"src": "3516:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3464:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3467:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3473:3:1",
														"type": ""
													}
												],
												"src": "3433:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3737:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3754:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3765:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3747:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3747:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3788:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3799:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3784:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3838:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:18:1"
																	},
																	{
																		"hexValue": "4163636f756e74206973206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3843:19:1",
																		"type": "",
																		"value": "Account is locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3816:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3872:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3884:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3895:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3880:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3872:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3696a5724fd30f8ebb95abd3cef3a8ad1a4959139792add59a1ce6a1f657f6f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3714:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3728:4:1",
														"type": ""
													}
												],
												"src": "3563:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4083:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4100:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4093:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4145:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4150:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4123:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4184:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4169:18:1"
																	},
																	{
																		"hexValue": "4d6178696d756d2077616c6c65742062616c616e6365206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4189:33:1",
																		"type": "",
																		"value": "Maximum wallet balance exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4162:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4232:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4255:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4232:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_104267c7892f9914808c25827e20032382daf34f0cdf95e15f8d66b7f5b00e41__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4060:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4074:4:1",
														"type": ""
													}
												],
												"src": "3909:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4443:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4460:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4453:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4494:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4505:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4490:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4490:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4510:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4483:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4533:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4544:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4529:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4549:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4522:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4604:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4615:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4600:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4620:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4593:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4638:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4650:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4646:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4638:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4420:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4434:4:1",
														"type": ""
													}
												],
												"src": "4269:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4867:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4878:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4860:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4860:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4901:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4912:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4897:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4917:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4890:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4940:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4956:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4929:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4929:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5011:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5022:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5027:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5000:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5000:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5043:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5055:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5066:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5051:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5043:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4827:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4841:4:1",
														"type": ""
													}
												],
												"src": "4676:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5272:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5283:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5265:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5265:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5306:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5317:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5302:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5322:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5345:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5356:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5341:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5361:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5334:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5334:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5416:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5427:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5412:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5432:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5405:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5405:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5446:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5458:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5469:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5454:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5446:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5232:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5246:4:1",
														"type": ""
													}
												],
												"src": "5081:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5658:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5675:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5686:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5720:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5705:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5725:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5748:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5759:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5744:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5744:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5764:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5737:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5830:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5815:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5835:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5808:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5808:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5852:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5864:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5875:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5852:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5635:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5649:4:1",
														"type": ""
													}
												],
												"src": "5484:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6064:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6081:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6092:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6074:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6074:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6126:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6111:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6104:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6154:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6165:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6150:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6170:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6143:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6143:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6225:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6236:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6221:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6221:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6241:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6214:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6214:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6214:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6256:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6268:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6279:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6256:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6041:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6055:4:1",
														"type": ""
													}
												],
												"src": "5890:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6468:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6478:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6530:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6515:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6508:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6508:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6558:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6569:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6554:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6574:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6547:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6618:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6630:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6641:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6618:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6445:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6459:4:1",
														"type": ""
													}
												],
												"src": "6294:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6704:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6714:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6726:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6729:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6722:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6722:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6714:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6755:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6757:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6757:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6757:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6746:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6752:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6743:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6743:11:1"
															},
															"nodeType": "YulIf",
															"src": "6740:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6686:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6689:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6695:4:1",
														"type": ""
													}
												],
												"src": "6655:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6840:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6850:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6865:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6868:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6861:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6850:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6928:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6930:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6930:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6930:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6899:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6892:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6892:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6906:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6913:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6922:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6909:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6909:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6903:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6903:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6889:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6889:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:45:1"
															},
															"nodeType": "YulIf",
															"src": "6879:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6819:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6822:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6828:7:1",
														"type": ""
													}
												],
												"src": "6788:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7007:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7038:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7059:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7066:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7071:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7062:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7062:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7052:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7052:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7052:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7103:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7106:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7096:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7096:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7096:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7134:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7124:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7124:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7124:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7027:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:9:1"
															},
															"nodeType": "YulIf",
															"src": "7017:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7158:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7167:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7170:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7163:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7158:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6992:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6995:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7001:1:1",
														"type": ""
													}
												],
												"src": "6961:217:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3696a5724fd30f8ebb95abd3cef3a8ad1a4959139792add59a1ce6a1f657f6f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Account is locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_104267c7892f9914808c25827e20032382daf34f0cdf95e15f8d66b7f5b00e41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Maximum wallet balance exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBCAC9176 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBCAC9176 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xCEAE0E8D EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xAD0A00AA EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xAFCF2FC4 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xBBDE77C1 EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x9B4DC8CC EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x7A351A1D EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x82D99CB1 EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D43ABD8 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x48112396 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x48112396 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x4F8244F4 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x52DB1CA4 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x6C726137 EQ PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D43ABD8 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x3871EF64 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15C93A7D GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x15C93A7D EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x27364D21 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB4880 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x232 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x245 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x20A PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x652 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x295 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x225 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x453 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47F SWAP1 PUSH2 0x13E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E3 CALLER DUP5 DUP5 PUSH2 0x938 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 ISZERO DUP1 PUSH2 0x530 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 PUSH2 0x52D SWAP1 PUSH1 0xA PUSH2 0x1438 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1058D8DBDD5B9D081A5CC81B1BD8DAD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x59C SWAP1 DUP6 SWAP1 PUSH2 0x1438 JUMP JUMPDEST GT ISZERO PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D2077616C6C65742062616C616E636520657863656564656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST PUSH2 0x5F5 DUP6 DUP6 DUP6 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x647 DUP6 CALLER PUSH2 0x642 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1498 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x65A PUSH2 0xD34 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4E3 SWAP2 DUP6 SWAP1 PUSH2 0x642 SWAP1 DUP7 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x6BD PUSH2 0xD34 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x6F1 PUSH1 0x0 PUSH2 0xDA1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6FB PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x453 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E3 CALLER DUP5 PUSH2 0x642 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E0 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 ISZERO DUP1 PUSH2 0x7D9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 PUSH2 0x7D6 SWAP1 PUSH1 0xA PUSH2 0x1438 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1058D8DBDD5B9D081A5CC81B1BD8DAD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST DUP4 DUP4 PUSH1 0x15 SLOAD DUP2 PUSH2 0x83E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x1438 JUMP JUMPDEST GT ISZERO PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D2077616C6C65742062616C616E636520657863656564656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST PUSH2 0x8A1 CALLER DUP8 DUP8 PUSH2 0xA5C JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH2 0x935 DUP2 PUSH2 0xDA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xB64 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB6C JUMPI POP DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBAE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xBC0 JUMPI PUSH2 0xBBD DUP5 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xC01 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC10 DUP5 DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xC54 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xC66 JUMPI PUSH2 0xC63 DUP5 DUP4 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC89 SWAP1 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xCB8 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xCFA SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xD2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 DUP5 PUSH2 0x1438 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0xE1A PUSH2 0x2710 PUSH2 0xE14 PUSH1 0xC SLOAD DUP8 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1282 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xE2C DUP3 DUP3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0xE54 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH2 0xE7C SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0xEDE PUSH2 0x2710 PUSH2 0xE14 PUSH1 0x9 SLOAD DUP8 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEFD PUSH2 0x2710 PUSH2 0xE14 PUSH1 0xB SLOAD DUP9 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xF96 JUMPI PUSH2 0xF0F DUP4 DUP3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH2 0xF37 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xF SLOAD PUSH2 0xF5F SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP2 ISZERO PUSH2 0x102D JUMPI PUSH2 0xFA6 DUP4 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH2 0xFCE SWAP1 DUP4 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0xFF6 SWAP1 DUP4 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0x105A PUSH2 0x2710 PUSH2 0xE14 PUSH1 0x9 SLOAD DUP8 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1079 PUSH2 0x2710 PUSH2 0xE14 PUSH1 0xA SLOAD DUP9 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1098 PUSH2 0x2710 PUSH2 0xE14 PUSH1 0xB SLOAD DUP10 PUSH2 0x1276 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1131 JUMPI PUSH2 0x10AA DUP5 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP PUSH2 0x10D2 SWAP1 DUP4 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xE SLOAD PUSH2 0x10FA SWAP1 DUP4 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 ISZERO PUSH2 0x11C8 JUMPI PUSH2 0x1141 DUP5 DUP3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP PUSH2 0x1169 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xF SLOAD PUSH2 0x1191 SWAP1 DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP3 ISZERO PUSH2 0x125F JUMPI PUSH2 0x11D8 DUP5 DUP5 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP PUSH2 0x1200 SWAP1 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0x1228 SWAP1 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 DUP5 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 DUP5 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9A DUP3 DUP5 PUSH2 0x1475 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9A DUP3 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12F2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x12D6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132F DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135B DUP5 PUSH2 0x128E JUMP JUMPDEST SWAP3 POP PUSH2 0x1369 PUSH1 0x20 DUP6 ADD PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1395 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D1 DUP4 PUSH2 0x128E JUMP JUMPDEST SWAP2 POP PUSH2 0x13DF PUSH1 0x20 DUP5 ADD PUSH2 0x128E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x141C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4E7 JUMPI PUSH2 0x4E7 PUSH2 0x1422 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4E7 JUMPI PUSH2 0x4E7 PUSH2 0x1422 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4E7 JUMPI PUSH2 0x4E7 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1492 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365DDF252AD1BE2C89B69C2 0xB0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212203328 0x5E PUSH21 0x707A7872ED6036AD23DE40A0A8E9C886C57A84A648 0xEB 0xAC PUSH9 0xB2E9290464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "11056:8458:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11437:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:1;;;517:2;502:18;11437:50:0;;;;;;;;12912:81;;;:::i;:::-;;;;;;;:::i;13830:156::-;;;;;;:::i;:::-;;:::i;:::-;;;1542:14:1;;1535:22;1517:41;;1505:2;1490:18;13830:156:0;1377:187:1;11644:27:0;;;;;;13177:98;13256:12;;13177:98;;13992:439;;;;;;:::i;:::-;;:::i;11801:26::-;;;;;;19119:115;;;;;;:::i;:::-;;:::i;:::-;;13090:81;13155:9;;13090:81;;13155:9;;;;2396:36:1;;2384:2;2369:18;13090:81:0;2254:184:1;12117:76:0;;;;;-1:-1:-1;;;;;12117:76:0;;;;;;-1:-1:-1;;;;;2607:32:1;;;2589:51;;2577:2;2562:18;12117:76:0;2443:203:1;14437:211:0;;;;;;:::i;:::-;;:::i;11958:74::-;;;;;-1:-1:-1;;;;;11958:74:0;;;11833:33;;;;;;11730:28;;;;;;19244:113;;;;;;:::i;:::-;;:::i;13281:118::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13374:18:0;13347:7;13374:18;;;:9;:18;;;;;;;13281:118;9570:101;;;:::i;19368:143::-;;;;;;:::i;:::-;;:::i;11554:29::-;;;;;;8940:85;8986:7;9012:6;-1:-1:-1;;;;;9012:6:0;8940:85;;12999;;;:::i;12040:24::-;;;;;-1:-1:-1;;;;;12040:24:0;;;14654:262;;;;;;:::i;:::-;;:::i;13405:272::-;;;;;;:::i;:::-;;:::i;11599:32::-;;;;;;11872:75;;;;;-1:-1:-1;;;;;11872:75:0;;;12204:51;;;;;;11683:35;;;;;;11764:31;;;;;;13683:141;;;;;;:::i;:::-;-1:-1:-1;;;;;13790:18:0;;;13764:7;13790:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;13683:141;9820:198;;;;;;:::i;:::-;;:::i;12912:81::-;12949:13;12981:5;12974:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12912:81;:::o;13830:156::-;13905:4;13921:37;13930:10;13942:7;13951:6;13921:8;:37::i;:::-;-1:-1:-1;13975:4:0;13830:156;;;;;:::o;13992:439::-;14080:10;14118:4;12340:23;;;:14;:23;;;;;;14118:4;;14080:10;12340:28;;:79;;-1:-1:-1;;;;;;12372:23:0;;;;;;:14;:23;;;;;;12404:15;;12372:28;;12398:2;12372:28;:::i;:::-;:47;;12340:79;12332:109;;;;-1:-1:-1;;;12332:109:0;;3765:2:1;12332:109:0;;;3747:21:1;3804:2;3784:18;;;3777:30;-1:-1:-1;;;3823:18:1;;;3816:47;3880:18;;12332:109:0;;;;;;;;;14175:16:::1;::::0;-1:-1:-1;;;;;14142:20:0;::::1;;::::0;;;:9:::1;:20;::::0;;;;;:29:::1;::::0;14165:6;;14142:29:::1;:::i;:::-;:49;;14134:93;;;::::0;-1:-1:-1;;;14134:93:0;;4111:2:1;14134:93:0::1;::::0;::::1;4093:21:1::0;4150:2;4130:18;;;4123:30;4189:33;4169:18;;;4162:61;4240:18;;14134:93:0::1;3909:355:1::0;14134:93:0::1;14237:34;14247:6;14254:9;14264:6;14237:9;:34::i;:::-;14288:115;14297:6;14304:10;14315:87;14352:6;14315:87;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;14315:19:0;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;14335:10:::1;14315:31:::0;;;;;;;;;:87;:35:::1;:87::i;:::-;14288:8;:115::i;:::-;-1:-1:-1::0;14420:4:0::1;::::0;13992:439;-1:-1:-1;;;;13992:439:0:o;19119:115::-;8833:13;:11;:13::i;:::-;-1:-1:-1;;;;;;19194:26:0::1;;::::0;;;:17:::1;:26;::::0;;;;:33;;-1:-1:-1;;19194:33:0::1;19223:4;19194:33;::::0;;19119:115::o;14437:211::-;14550:10;14525:4;14571:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14571:32:0;;;;;;;;;;14525:4;;14541:79;;14562:7;;14571:48;;14608:10;14571:36;:48::i;19244:113::-;8833:13;:11;:13::i;:::-;-1:-1:-1;;;;;;19316:26:0::1;19345:5;19316:26:::0;;;:17:::1;:26;::::0;;;;:34;;-1:-1:-1;;19316:34:0::1;::::0;;19244:113::o;9570:101::-;8833:13;:11;:13::i;:::-;9634:30:::1;9661:1;9634:18;:30::i;:::-;9570:101::o:0;19368:143::-;8833:13;:11;:13::i;:::-;19455:9:::1;::::0;-1:-1:-1;;;;;19455:9:0;;::::1;19443:21:::0;;::::1;::::0;19435:30:::1;;;::::0;::::1;;19484:9;:20:::0;;-1:-1:-1;;;;;;19484:20:0::1;-1:-1:-1::0;;;;;19484:20:0;;;::::1;::::0;;;::::1;::::0;;19368:143::o;12999:85::-;13038:13;13070:7;13063:14;;;;;:::i;14654:262::-;14747:4;14763:125;14772:10;14784:7;14793:94;14830:15;14793:94;;;;;;;;;;;;;;;;;14805:10;14793:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14793:32:0;;;;;;;;;;;:94;:36;:94::i;13405:272::-;13474:10;13542:4;12340:23;;;:14;:23;;;;;;13542:4;;13474:10;12340:28;;:79;;-1:-1:-1;;;;;;12372:23:0;;;;;;:14;:23;;;;;;12404:15;;12372:28;;12398:2;12372:28;:::i;:::-;:47;;12340:79;12332:109;;;;-1:-1:-1;;;12332:109:0;;3765:2:1;12332:109:0;;;3747:21:1;3804:2;3784:18;;;3777:30;-1:-1:-1;;;3823:18:1;;;3816:47;3880:18;;12332:109:0;3563:341:1;12332:109:0;13497:9:::1;13508:6;12579:16;;12569:6;12546:20;12556:9;-1:-1:-1::0;;;;;13374:18:0;13347:7;13374:18;;;:9;:18;;;;;;;13281:118;12546:20:::1;:29;;;;:::i;:::-;:49;;12538:93;;;::::0;-1:-1:-1;;;12538:93:0;;4111:2:1;12538:93:0::1;::::0;::::1;4093:21:1::0;4150:2;4130:18;;;4123:30;4189:33;4169:18;;;4162:61;4240:18;;12538:93:0::1;3909:355:1::0;12538:93:0::1;13557:38:::2;13567:10;13578:9;13588:6;13557:9;:38::i;:::-;-1:-1:-1::0;;13619:10:0::2;13604:26;::::0;;;:14:::2;:26;::::0;;;;13633:15:::2;13604:44:::0;;-1:-1:-1;13666:4:0::2;::::0;13405:272;-1:-1:-1;;;13405:272:0:o;9820:198::-;8833:13;:11;:13::i;:::-;-1:-1:-1;;;;;9908:22:0;::::1;9900:73;;;::::0;-1:-1:-1;;;9900:73:0;;4471:2:1;9900:73:0::1;::::0;::::1;4453:21:1::0;4510:2;4490:18;;;4483:30;4549:34;4529:18;;;4522:62;-1:-1:-1;;;4600:18:1;;;4593:36;4646:19;;9900:73:0::1;4269:402:1::0;9900:73:0::1;9983:28;10002:8;9983:18;:28::i;:::-;9820:198:::0;:::o;14922:331::-;-1:-1:-1;;;;;15014:19:0;;15006:68;;;;-1:-1:-1;;;15006:68:0;;4878:2:1;15006:68:0;;;4860:21:1;4917:2;4897:18;;;4890:30;4956:34;4936:18;;;4929:62;-1:-1:-1;;;5007:18:1;;;5000:34;5051:19;;15006:68:0;4676:400:1;15006:68:0;-1:-1:-1;;;;;15092:21:0;;15084:68;;;;-1:-1:-1;;;15084:68:0;;5283:2:1;15084:68:0;;;5265:21:1;5322:2;5302:18;;;5295:30;5361:34;5341:18;;;5334:62;-1:-1:-1;;;5412:18:1;;;5405:32;5454:19;;15084:68:0;5081:398:1;15084:68:0;-1:-1:-1;;;;;15163:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15214:32;;529:25:1;;;15214:32:0;;502:18:1;15214:32:0;;;;;;;14922:331;;;:::o;15260:1096::-;-1:-1:-1;;;;;15356:20:0;;15348:70;;;;-1:-1:-1;;;15348:70:0;;5686:2:1;15348:70:0;;;5668:21:1;5725:2;5705:18;;;5698:30;5764:34;5744:18;;;5737:62;-1:-1:-1;;;5815:18:1;;;5808:35;5860:19;;15348:70:0;5484:401:1;15348:70:0;-1:-1:-1;;;;;15436:23:0;;15428:71;;;;-1:-1:-1;;;15428:71:0;;6092:2:1;15428:71:0;;;6074:21:1;6131:2;6111:18;;;6104:30;6170:34;6150:18;;;6143:62;-1:-1:-1;;;6221:18:1;;;6214:33;6264:19;;15428:71:0;5890:399:1;15428:71:0;-1:-1:-1;;;;;15568:25:0;;15519:22;15568:25;;;:17;:25;;;;;;15544:6;;15568:25;;:57;;;;-1:-1:-1;;;;;;15597:28:0;;;;;;:17;:28;;;;;;;;15568:57;15565:117;;;-1:-1:-1;15661:6:0;15565:117;-1:-1:-1;;;;;15699:25:0;;;;;;:17;:25;;;;;;;;15698:26;:59;;;;-1:-1:-1;;;;;;15729:28:0;;;;;;:17;:28;;;;;;;;15728:29;15698:59;15695:145;;;15793:32;15811:6;15818;15793:17;:32::i;:::-;15776:49;;15695:145;-1:-1:-1;;;;;15856:25:0;;;;;;:17;:25;;;;;;;;:58;;;;-1:-1:-1;;;;;;15886:28:0;;;;;;:17;:28;;;;;;;;15885:29;15856:58;15853:140;;;15950:28;15964:6;15971;15950:13;:28::i;:::-;15933:45;;15853:140;-1:-1:-1;;;;;16010:25:0;;;;;;:17;:25;;;;;;;;16009:26;:58;;;;-1:-1:-1;;;;;;16039:28:0;;;;;;:17;:28;;;;;;;;16009:58;16006:141;;;16103:29;16118:6;16125;16103:14;:29::i;:::-;16086:46;;16006:141;-1:-1:-1;;;;;16180:17:0;;;;;;:9;:17;;;;;;:29;;16202:6;16180:21;:29::i;:::-;-1:-1:-1;;;;;16160:17:0;;;;;;;:9;:17;;;;;;:49;;;;16242:20;;;;;;;:40;;16267:14;16242:24;:40::i;:::-;-1:-1:-1;;;;;16219:20:0;;;;;;;:9;:20;;;;;;;:63;;;;16306:43;;;;;;-1:-1:-1;;;;;;;;;;;16306:43:0;;;16334:14;529:25:1;;517:2;502:18;;383:177;16306:43:0;;;;;;;;15338:1018;15260:1096;;;:::o;4951:231::-;5067:7;5126:12;5118:6;;;;5110:29;;;;-1:-1:-1;;;5110:29:0;;;;;;;;:::i;:::-;-1:-1:-1;;;5160:5:0;;;4951:231::o;9098:130::-;8986:7;9012:6;-1:-1:-1;;;;;9012:6:0;7569:10;9161:23;9153:68;;;;-1:-1:-1;;;9153:68:0;;6496:2:1;9153:68:0;;;6478:21:1;;;6515:18;;;6508:30;6574:34;6554:18;;;6547:62;6626:18;;9153:68:0;6294:356:1;2747:96:0;2805:7;2831:5;2835:1;2831;:5;:::i;:::-;2824:12;2747:96;-1:-1:-1;;;2747:96:0:o;10172:187::-;10245:16;10264:6;;-1:-1:-1;;;;;10280:17:0;;;-1:-1:-1;;;;;;10280:17:0;;;;;;10312:40;;10264:6;;;;;;;10312:40;;10245:16;10312:40;10235:124;10172:187;:::o;18514:598::-;18592:7;18620:22;18645:6;18620:31;;18669:21;18693:37;18724:5;18693:26;18704:14;;18693:6;:10;;:26;;;;:::i;:::-;:30;;:37::i;:::-;18669:61;-1:-1:-1;18745:17:0;;18741:326;;18794:33;:14;18813:13;18794:18;:33::i;:::-;18881:16;;-1:-1:-1;;;;;18881:16:0;18871:27;;;;:9;:27;;;;;;18777:50;;-1:-1:-1;18871:46:0;;18903:13;18871:31;:46::i;:::-;18851:16;;-1:-1:-1;;;;;18851:16:0;18841:27;;;;:9;:27;;;;;:76;18952:18;;:37;;18975:13;18952:22;:37::i;:::-;18931:18;:58;19025:16;;19008:48;;529:25:1;;;-1:-1:-1;;;;;19025:16:0;;;;19008:48;;;-1:-1:-1;;;;;;;;;;;19008:48:0;517:2:1;502:18;19008:48:0;;;;;;;18741:326;-1:-1:-1;19091:14:0;18514:598;-1:-1:-1;;;18514:598:0:o;16367:888::-;16458:7;16486:22;16511:6;16486:31;;16528:18;16549:31;16574:5;16549:20;16560:8;;16549:6;:10;;:20;;;;:::i;:31::-;16528:52;;16590:13;16606:29;16629:5;16606:18;16617:6;;16606;:10;;:18;;;;:::i;:29::-;16590:45;-1:-1:-1;16665:9:0;;16661:251;;16706:25;:14;16725:5;16706:18;:25::i;:::-;16778:9;;-1:-1:-1;;;;;16778:9:0;16768:20;;;;:9;:20;;;;;;16689:42;;-1:-1:-1;16768:31:0;;16793:5;16768:24;:31::i;:::-;16755:9;;-1:-1:-1;;;;;16755:9:0;16745:20;;;;:9;:20;;;;;:54;16827:11;;:22;;16843:5;16827:15;:22::i;:::-;16813:11;:36;16885:9;;16868:33;;529:25:1;;;-1:-1:-1;;;;;16885:9:0;;;;16868:33;;;-1:-1:-1;;;;;;;;;;;16868:33:0;517:2:1;502:18;16868:33:0;;;;;;;16661:251;16925:14;;16922:294;;16971:30;:14;16990:10;16971:18;:30::i;:::-;17053:14;;-1:-1:-1;;;;;17053:14:0;17043:25;;;;:9;:25;;;;;;16954:47;;-1:-1:-1;17043:41:0;;17073:10;17043:29;:41::i;:::-;17025:14;;-1:-1:-1;;;;;17025:14:0;17015:25;;;;:9;:25;;;;;:69;17114:13;;:29;;17132:10;17114:17;:29::i;:::-;17098:13;:45;17179:14;;17162:43;;529:25:1;;;-1:-1:-1;;;;;17179:14:0;;;;17162:43;;;-1:-1:-1;;;;;;;;;;;17162:43:0;517:2:1;502:18;17162:43:0;;;;;;;16922:294;-1:-1:-1;17234:14:0;;16367:888;-1:-1:-1;;;;16367:888:0:o;17262:1247::-;17337:7;17365:22;17390:6;17365:31;;17406:18;17427:31;17452:5;17427:20;17438:8;;17427:6;:10;;:20;;;;:::i;:31::-;17406:52;;17468:18;17489:34;17517:5;17489:23;17500:11;;17489:6;:10;;:23;;;;:::i;:34::-;17468:55;;17533:13;17549:29;17572:5;17549:18;17560:6;;17549;:10;;:18;;;;:::i;:29::-;17533:45;-1:-1:-1;17599:14:0;;17595:301;;17645:30;:14;17664:10;17645:18;:30::i;:::-;17727:14;;-1:-1:-1;;;;;17727:14:0;17717:25;;;;:9;:25;;;;;;17628:47;;-1:-1:-1;17717:41:0;;17747:10;17717:29;:41::i;:::-;17699:14;;-1:-1:-1;;;;;17699:14:0;17689:25;;;;:9;:25;;;;;:69;17791:16;;:32;;17812:10;17791:20;:32::i;:::-;17772:16;:51;17859:14;;17842:43;;529:25:1;;;-1:-1:-1;;;;;17859:14:0;;;;17842:43;;;-1:-1:-1;;;;;;;;;;;17842:43:0;517:2:1;502:18;17842:43:0;;;;;;;17595:301;17910:9;;17906:252;;17951:25;:14;17970:5;17951:18;:25::i;:::-;18024:9;;-1:-1:-1;;;;;18024:9:0;18014:20;;;;:9;:20;;;;;;17934:42;;-1:-1:-1;18014:31:0;;18039:5;18014:24;:31::i;:::-;18001:9;;-1:-1:-1;;;;;18001:9:0;17991:20;;;;:9;:20;;;;;:54;18073:11;;:22;;18089:5;18073:15;:22::i;:::-;18059:11;:36;18131:9;;18114:33;;529:25:1;;;-1:-1:-1;;;;;18131:9:0;;;;18114:33;;;-1:-1:-1;;;;;;;;;;;18114:33:0;517:2:1;502:18;18114:33:0;;;;;;;17906:252;18171:14;;18168:295;;18217:30;:14;18236:10;18217:18;:30::i;:::-;18300:14;;-1:-1:-1;;;;;18300:14:0;18290:25;;;;:9;:25;;;;;;18200:47;;-1:-1:-1;18290:41:0;;18320:10;18290:29;:41::i;:::-;18272:14;;-1:-1:-1;;;;;18272:14:0;18262:25;;;;:9;:25;;;;;:69;18361:13;;:29;;18379:10;18361:17;:29::i;:::-;18345:13;:45;18426:14;;18409:43;;529:25:1;;;-1:-1:-1;;;;;18426:14:0;;;;18409:43;;;-1:-1:-1;;;;;;;;;;;18409:43:0;517:2:1;502:18;18409:43:0;;;;;;;18168:295;-1:-1:-1;18488:14:0;;17262:1247;-1:-1:-1;;;;;17262:1247:0:o;3114:96::-;3172:7;3198:5;3202:1;3198;:5;:::i;3457:96::-;3515:7;3541:5;3545:1;3541;:5;:::i;3842:96::-;3900:7;3926:5;3930:1;3926;:5;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:548::-;677:4;706:2;735;724:9;717:21;767:6;761:13;810:6;805:2;794:9;790:18;783:34;835:1;845:140;859:6;856:1;853:13;845:140;;;954:14;;;950:23;;944:30;920:17;;;939:2;916:26;909:66;874:10;;845:140;;;849:3;1034:1;1029:2;1020:6;1009:9;1005:22;1001:31;994:42;1104:2;1097;1093:7;1088:2;1080:6;1076:15;1072:29;1061:9;1057:45;1053:54;1045:62;;;;565:548;;;;:::o;1118:254::-;1186:6;1194;1247:2;1235:9;1226:7;1222:23;1218:32;1215:52;;;1263:1;1260;1253:12;1215:52;1286:29;1305:9;1286:29;:::i;:::-;1276:39;1362:2;1347:18;;;;1334:32;;-1:-1:-1;;;1118:254:1:o;1569:328::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1754:29;1773:9;1754:29;:::i;:::-;1744:39;;1802:38;1836:2;1825:9;1821:18;1802:38;:::i;:::-;1792:48;;1887:2;1876:9;1872:18;1859:32;1849:42;;1569:328;;;;;:::o;1902:347::-;1967:6;1975;2028:2;2016:9;2007:7;2003:23;1999:32;1996:52;;;2044:1;2041;2034:12;1996:52;2067:29;2086:9;2067:29;:::i;:::-;2057:39;;2146:2;2135:9;2131:18;2118:32;2193:5;2186:13;2179:21;2172:5;2169:32;2159:60;;2215:1;2212;2205:12;2159:60;2238:5;2228:15;;;1902:347;;;;;:::o;2651:260::-;2719:6;2727;2780:2;2768:9;2759:7;2755:23;2751:32;2748:52;;;2796:1;2793;2786:12;2748:52;2819:29;2838:9;2819:29;:::i;:::-;2809:39;;2867:38;2901:2;2890:9;2886:18;2867:38;:::i;:::-;2857:48;;2651:260;;;;;:::o;2916:380::-;2995:1;2991:12;;;;3038;;;3059:61;;3113:4;3105:6;3101:17;3091:27;;3059:61;3166:2;3158:6;3155:14;3135:18;3132:38;3129:161;;3212:10;3207:3;3203:20;3200:1;3193:31;3247:4;3244:1;3237:15;3275:4;3272:1;3265:15;3129:161;;2916:380;;;:::o;3301:127::-;3362:10;3357:3;3353:20;3350:1;3343:31;3393:4;3390:1;3383:15;3417:4;3414:1;3407:15;3433:125;3498:9;;;3519:10;;;3516:36;;;3532:18;;:::i;6655:128::-;6722:9;;;6743:11;;;6740:37;;;6757:18;;:::i;6788:168::-;6861:9;;;6892;;6909:15;;;6903:22;;6889:37;6879:71;;6930:18;;:::i;6961:217::-;7001:1;7027;7017:132;;7071:10;7066:3;7062:20;7059:1;7052:31;7106:4;7103:1;7096:15;7134:4;7131:1;7124:15;7017:132;-1:-1:-1;7163:9:1;;6961:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1086800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ExcludedFromFee(address,bool)": "26882",
								"IncludeInFee(address,bool)": "26941",
								"_burningFee()": "2351",
								"_burningFeeTotal()": "2350",
								"_charity()": "2396",
								"_charityTotal()": "2373",
								"_inbetweenFeeTotal()": "2351",
								"_inbetweenFee_()": "2328",
								"_lockTimestamp(address)": "2555",
								"_lpFee()": "2330",
								"_lpFeeTotal()": "2396",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24688",
								"balanceOf(address)": "2572",
								"burningAddress()": "2382",
								"charityAddress()": "2426",
								"decimals()": "2357",
								"decreaseAllowance(address,uint256)": "infinite",
								"inbetweenAddress()": "2427",
								"increaseAllowance(address,uint256)": "infinite",
								"lpAddress()": "2426",
								"maxWalletBalance()": "2395",
								"name()": "infinite",
								"owner()": "2376",
								"renounceOwnership()": "infinite",
								"setLPAddress(address)": "28978",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							},
							"internal": {
								"SellCollectFee(address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"betweenCollectFee(address,uint256)": "infinite",
								"buyCollectFee(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11144,
									"end": 11180,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D656D457468657265756D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 11144,
									"end": 11180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11144,
									"end": 11180,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A8AA89"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 11186,
									"end": 11217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11186,
									"end": 11217,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11249,
									"end": 11251,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11223,
									"end": 11251,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11527,
									"end": 11547,
									"name": "PUSH",
									"source": 0,
									"value": "1431E0FAE6D7217CAA0000000"
								},
								{
									"begin": 11494,
									"end": 11547,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 11494,
									"end": 11547,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11580,
									"end": 11583,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 11554,
									"end": 11583,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11554,
									"end": 11583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11554,
									"end": 11583,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11554,
									"end": 11583,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11599,
									"end": 11631,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 11599,
									"end": 11631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11599,
									"end": 11631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11599,
									"end": 11631,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11671,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 11644,
									"end": 11671,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11715,
									"end": 11718,
									"name": "PUSH",
									"source": 0,
									"value": "12C"
								},
								{
									"begin": 11683,
									"end": 11718,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 11683,
									"end": 11718,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11905,
									"end": 11947,
									"name": "PUSH",
									"source": 0,
									"value": "2CD2BD245B2C563C98356B543D6C9A1ABF7353C5"
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11872,
									"end": 11947,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11958,
									"end": 12032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11958,
									"end": 12032,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11958,
									"end": 12032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11958,
									"end": 12032,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11958,
									"end": 12032,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11958,
									"end": 12032,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11958,
									"end": 12032,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12151,
									"end": 12193,
									"name": "PUSH",
									"source": 0,
									"value": "80DC1B16EB733CA49B289F6B39090EC0DC0222A8"
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12117,
									"end": 12193,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12238,
									"end": 12255,
									"name": "PUSH",
									"source": 0,
									"value": "9B18AB5DF7180B6B8000000"
								},
								{
									"begin": 12204,
									"end": 12255,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 12204,
									"end": 12255,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12664,
									"end": 12906,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8675,
									"end": 8707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7569,
									"end": 7579,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8675,
									"end": 8693,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8675,
									"end": 8707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8675,
									"end": 8707,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8675,
									"end": 8707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12707,
									"end": 12717,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12706,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12718,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12721,
									"end": 12725,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12689,
									"end": 12725,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12761,
									"end": 12765,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12767,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12767,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12767,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12735,
									"end": 12774,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12808,
									"end": 12820,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12808,
									"end": 12820,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12805,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12805,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12805,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12793,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12784,
									"end": 12805,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12805,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12805,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12805,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 12820,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12898,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10172,
									"end": 10359,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 10172,
									"end": 10359,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10245,
									"end": 10261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10280,
									"end": 10297,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10312,
									"end": 10352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10312,
									"end": 10352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10264,
									"end": 10270,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10312,
									"end": 10352,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10312,
									"end": 10352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10245,
									"end": 10261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10312,
									"end": 10352,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 10235,
									"end": 10359,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10172,
									"end": 10359,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10172,
									"end": 10359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11056,
									"end": 19514,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033285e74707a7872ed6036ad23de40a0a8e9c886c57a84a648ebac68b2e9290464736f6c63430008130033",
									".code": [
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "BCAC9176"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "BCAC9176"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "CEAE0E8D"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "AD0A00AA"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "AFCF2FC4"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "BBDE77C1"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "9B4DC8CC"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "7A351A1D"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "82D99CB1"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "2D43ABD8"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "48112396"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "48112396"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "4F8244F4"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "52DB1CA4"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "6C726137"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "2D43ABD8"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "3871EF64"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "15C93A7D"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "15C93A7D"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "27364D21"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "2FB4880"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 19514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11437,
											"end": 11487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11487,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 12912,
											"end": 12993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12912,
											"end": 12993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13830,
											"end": 13986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13830,
											"end": 13986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11644,
											"end": 11671,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11644,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11644,
											"end": 11671,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 11644,
											"end": 11671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11671,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13275,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13177,
											"end": 13275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13256,
											"end": 13268,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13256,
											"end": 13268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13177,
											"end": 13275,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13992,
											"end": 14431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13992,
											"end": 14431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 11827,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11801,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11801,
											"end": 11827,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 11801,
											"end": 11827,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 11827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 11827,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 19119,
											"end": 19234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19119,
											"end": 19234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13171,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13090,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13090,
											"end": 13171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13090,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2254,
											"end": 2438,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2640,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2443,
											"end": 2646,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14437,
											"end": 14648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14437,
											"end": 14648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11958,
											"end": 12032,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11730,
											"end": 11758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11730,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11730,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11730,
											"end": 11758,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 11730,
											"end": 11758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11730,
											"end": 11758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11730,
											"end": 11758,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 19244,
											"end": 19357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 19244,
											"end": 19357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13281,
											"end": 13399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9570,
											"end": 9671,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9570,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9570,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9570,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9570,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 19368,
											"end": 19511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 19368,
											"end": 19511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11554,
											"end": 11583,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11554,
											"end": 11583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11554,
											"end": 11583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11554,
											"end": 11583,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11554,
											"end": 11583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11554,
											"end": 11583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11554,
											"end": 11583,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8940,
											"end": 9025,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8940,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8940,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8940,
											"end": 9025,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12999,
											"end": 13084,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12999,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12999,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12999,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12999,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12064,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14654,
											"end": 14916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14654,
											"end": 14916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13405,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 13405,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11631,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11599,
											"end": 11631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11599,
											"end": 11631,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 11599,
											"end": 11631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11631,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11872,
											"end": 11947,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12204,
											"end": 12255,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12204,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12204,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12204,
											"end": 12255,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12204,
											"end": 12255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12204,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12204,
											"end": 12255,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 11718,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11683,
											"end": 11718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 11718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11683,
											"end": 11718,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 11683,
											"end": 11718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 11718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 11718,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11795,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11764,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11764,
											"end": 11795,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 11764,
											"end": 11795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11795,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13683,
											"end": 13824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13764,
											"end": 13771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13801,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13824,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9820,
											"end": 10018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 9820,
											"end": 10018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12981,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12974,
											"end": 12986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12974,
											"end": 12986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 12993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 13909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13921,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13930,
											"end": 13940,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 13949,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13921,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13921,
											"end": 13958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13921,
											"end": 13958,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13921,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13975,
											"end": 13979,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14080,
											"end": 14090,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12354,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14080,
											"end": 14090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 12340,
											"end": 12419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12386,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12404,
											"end": 12419,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12404,
											"end": 12419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12400,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12372,
											"end": 12400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12419,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12419,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 12340,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1058D8DBDD5B9D081A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14175,
											"end": 14191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14175,
											"end": 14191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14142,
											"end": 14162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14142,
											"end": 14171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14142,
											"end": 14171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14142,
											"end": 14171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14191,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14134,
											"end": 14227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14134,
											"end": 14227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14134,
											"end": 14227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14134,
											"end": 14227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14134,
											"end": 14227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14134,
											"end": 14227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14134,
											"end": 14227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14134,
											"end": 14227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14134,
											"end": 14227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "4D6178696D756D2077616C6C65742062616C616E636520657863656564656400"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14134,
											"end": 14227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3909,
											"end": 4264,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14134,
											"end": 14227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14134,
											"end": 14227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14237,
											"end": 14271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14247,
											"end": 14253,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14263,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14264,
											"end": 14270,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14237,
											"end": 14246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14237,
											"end": 14271,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14237,
											"end": 14271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14237,
											"end": 14271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 14297,
											"end": 14303,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14314,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 14352,
											"end": 14358,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14315,
											"end": 14334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14345,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14315,
											"end": 14402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 14315,
											"end": 14402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 14288,
											"end": 14403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 14288,
											"end": 14403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14420,
											"end": 14424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14420,
											"end": 14424,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13992,
											"end": 14431,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13992,
											"end": 14431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19119,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8833,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8833,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19194,
											"end": 19220,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19194,
											"end": 19220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19194,
											"end": 19220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19194,
											"end": 19220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19194,
											"end": 19220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19194,
											"end": 19227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19194,
											"end": 19227,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19227,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14437,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14560,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14582,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14541,
											"end": 14620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14562,
											"end": 14569,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14562,
											"end": 14569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 14571,
											"end": 14619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14618,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 14571,
											"end": 14619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 19244,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8833,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8833,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19316,
											"end": 19342,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19345,
											"end": 19350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19316,
											"end": 19342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19316,
											"end": 19342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19316,
											"end": 19342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19316,
											"end": 19342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19342,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19316,
											"end": 19350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9570,
											"end": 9671,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9570,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8833,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8833,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9661,
											"end": 9662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 9634,
											"end": 9664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9634,
											"end": 9664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9570,
											"end": 9671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 19368,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 8833,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8833,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19455,
											"end": 19464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19455,
											"end": 19464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19455,
											"end": 19464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19455,
											"end": 19464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19455,
											"end": 19464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19443,
											"end": 19464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19435,
											"end": 19465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 19435,
											"end": 19465,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19435,
											"end": 19465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19435,
											"end": 19465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19435,
											"end": 19465,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19435,
											"end": 19465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 19435,
											"end": 19465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19484,
											"end": 19504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19484,
											"end": 19504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19368,
											"end": 19511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12999,
											"end": 13084,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12999,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13051,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13070,
											"end": 13077,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13063,
											"end": 13077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13063,
											"end": 13077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13063,
											"end": 13077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 13063,
											"end": 13077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13063,
											"end": 13077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13063,
											"end": 13077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14654,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14747,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14763,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14772,
											"end": 14782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14784,
											"end": 14791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 14830,
											"end": 14845,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "PUSH data",
											"source": 0,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14805,
											"end": 14815,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14804,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14816,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14793,
											"end": 14887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13474,
											"end": 13484,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12354,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13474,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 12340,
											"end": 12419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12386,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12404,
											"end": 12419,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12404,
											"end": 12419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12400,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12372,
											"end": 12400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 12372,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12419,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12419,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 12340,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1058D8DBDD5B9D081A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3563,
											"end": 3904,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 12332,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13508,
											"end": 13514,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12579,
											"end": 12595,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12569,
											"end": 12575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 12556,
											"end": 12565,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13281,
											"end": 13399,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 12546,
											"end": 12566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 12546,
											"end": 12575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12546,
											"end": 12575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 12546,
											"end": 12575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12595,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12538,
											"end": 12631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 12538,
											"end": 12631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12538,
											"end": 12631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12538,
											"end": 12631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12538,
											"end": 12631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12538,
											"end": 12631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12538,
											"end": 12631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12538,
											"end": 12631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "4D6178696D756D2077616C6C65742062616C616E636520657863656564656400"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12538,
											"end": 12631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3909,
											"end": 4264,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12538,
											"end": 12631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 12538,
											"end": 12631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13595,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 13567,
											"end": 13577,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13578,
											"end": 13587,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13594,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13566,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 13557,
											"end": 13595,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13595,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 13557,
											"end": 13595,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13619,
											"end": 13629,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13630,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13604,
											"end": 13630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13618,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13604,
											"end": 13630,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13604,
											"end": 13630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13604,
											"end": 13630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13633,
											"end": 13648,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13666,
											"end": 13670,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13666,
											"end": 13670,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13677,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13405,
											"end": 13677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 8833,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8833,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 8833,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9908,
											"end": 9930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9900,
											"end": 9973,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9900,
											"end": 9973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9900,
											"end": 9973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9900,
											"end": 9973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9900,
											"end": 9973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4453,
											"end": 4474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4583,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4522,
											"end": 4584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4665,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4646,
											"end": 4665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 9973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4269,
											"end": 4671,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 9973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9900,
											"end": 9973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 10002,
											"end": 10010,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 9983,
											"end": 10011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9983,
											"end": 10011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 10018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 10018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 15253,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 14922,
											"end": 15253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15014,
											"end": 15033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15014,
											"end": 15033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4878,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4897,
											"end": 4915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4990,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5051,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5051,
											"end": 5070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4676,
											"end": 5076,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 15006,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15092,
											"end": 15113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15092,
											"end": 15113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5430,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5412,
											"end": 5430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5412,
											"end": 5430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5473,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5454,
											"end": 5473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5081,
											"end": 5479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 15084,
											"end": 15152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15174,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15190,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15199,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15199,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 15253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 15253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 15253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 15253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15260,
											"end": 16356,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 15260,
											"end": 16356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15356,
											"end": 15376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15356,
											"end": 15376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5860,
											"end": 5879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5484,
											"end": 5885,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 15348,
											"end": 15418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15436,
											"end": 15459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15436,
											"end": 15459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6074,
											"end": 6095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6133,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6204,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6150,
											"end": 6168,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6150,
											"end": 6168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6221,
											"end": 6239,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6221,
											"end": 6239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5890,
											"end": 6289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 15428,
											"end": 15499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15519,
											"end": 15541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15544,
											"end": 15550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15544,
											"end": 15550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15568,
											"end": 15593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 15568,
											"end": 15625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15614,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15597,
											"end": 15625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15625,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 15568,
											"end": 15625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15661,
											"end": 15667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15699,
											"end": 15724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 15698,
											"end": 15757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15746,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15729,
											"end": 15757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 15757,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 15698,
											"end": 15757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15695,
											"end": 15840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15695,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 15695,
											"end": 15840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15793,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 15811,
											"end": 15817,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15818,
											"end": 15824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15793,
											"end": 15810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 15793,
											"end": 15825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15793,
											"end": 15825,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 15793,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15776,
											"end": 15825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15776,
											"end": 15825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15695,
											"end": 15840,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 15695,
											"end": 15840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15873,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15856,
											"end": 15881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 15856,
											"end": 15914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15903,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15886,
											"end": 15914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15885,
											"end": 15914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15914,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 15856,
											"end": 15914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 15993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 15853,
											"end": 15993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15950,
											"end": 15978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 15964,
											"end": 15970,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 15950,
											"end": 15978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15950,
											"end": 15978,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 15950,
											"end": 15978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15933,
											"end": 15978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15933,
											"end": 15978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 15993,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 15853,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16009,
											"end": 16035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16009,
											"end": 16067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16009,
											"end": 16067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16009,
											"end": 16067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 16009,
											"end": 16067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16056,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16039,
											"end": 16067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16009,
											"end": 16067,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 16009,
											"end": 16067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16006,
											"end": 16147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16006,
											"end": 16147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 16006,
											"end": 16147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 16118,
											"end": 16124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16125,
											"end": 16131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 16103,
											"end": 16132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16132,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 16103,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16006,
											"end": 16147,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 16006,
											"end": 16147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 16180,
											"end": 16209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16202,
											"end": 16208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 16180,
											"end": 16209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16209,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 16180,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16209,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16209,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16209,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 16242,
											"end": 16282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16242,
											"end": 16282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16282,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 16242,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16282,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16282,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16282,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16334,
											"end": 16348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16349,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 15338,
											"end": 16356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15260,
											"end": 16356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15260,
											"end": 16356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15260,
											"end": 16356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15260,
											"end": 16356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 5182,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4951,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5110,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5110,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5160,
											"end": 5165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9098,
											"end": 9228,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9098,
											"end": 9228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 8993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7569,
											"end": 7579,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6496,
											"end": 6498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6608,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6626,
											"end": 6644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6294,
											"end": 6650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2843,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2747,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2835,
											"end": 2836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2831,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2836,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2831,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2747,
											"end": 2843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10172,
											"end": 10359,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10172,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10297,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10312,
											"end": 10352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10312,
											"end": 10352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10312,
											"end": 10352,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10312,
											"end": 10352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10312,
											"end": 10352,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10172,
											"end": 10359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10172,
											"end": 10359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18514,
											"end": 19112,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 18514,
											"end": 19112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18592,
											"end": 18599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18620,
											"end": 18642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18693,
											"end": 18730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 18724,
											"end": 18729,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 18693,
											"end": 18719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 18704,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 18704,
											"end": 18718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18699,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 18693,
											"end": 18703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18719,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18693,
											"end": 18719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18719,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 18693,
											"end": 18719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 18693,
											"end": 18730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18730,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 18693,
											"end": 18730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18745,
											"end": 18762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18745,
											"end": 18762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18741,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 18741,
											"end": 19067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18794,
											"end": 18827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 18794,
											"end": 18808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18794,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 18794,
											"end": 18827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18794,
											"end": 18827,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 18794,
											"end": 18827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18881,
											"end": 18897,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 18881,
											"end": 18897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18881,
											"end": 18897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18898,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18777,
											"end": 18827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18777,
											"end": 18827,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18871,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 18871,
											"end": 18917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18903,
											"end": 18916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18871,
											"end": 18917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18871,
											"end": 18917,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 18871,
											"end": 18917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18851,
											"end": 18867,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 18851,
											"end": 18867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18851,
											"end": 18867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18868,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18917,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18952,
											"end": 18970,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18952,
											"end": 18970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18952,
											"end": 18989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 18952,
											"end": 18989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 18988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18952,
											"end": 18974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18952,
											"end": 18989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18952,
											"end": 18989,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 18952,
											"end": 18989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18949,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18931,
											"end": 18989,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19025,
											"end": 19041,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19025,
											"end": 19041,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19025,
											"end": 19041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19025,
											"end": 19041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19025,
											"end": 19041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19025,
											"end": 19041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19056,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18741,
											"end": 19067,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 18741,
											"end": 19067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19091,
											"end": 19105,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18514,
											"end": 19112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18514,
											"end": 19112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 17255,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 16367,
											"end": 17255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16458,
											"end": 16465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16486,
											"end": 16508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16528,
											"end": 16546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16549,
											"end": 16580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 16574,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 16560,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16560,
											"end": 16568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16555,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 16549,
											"end": 16559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16580,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 16549,
											"end": 16580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16528,
											"end": 16580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16528,
											"end": 16580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16606,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 16629,
											"end": 16634,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 16606,
											"end": 16624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 16617,
											"end": 16623,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 16617,
											"end": 16623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16612,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 16606,
											"end": 16616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16606,
											"end": 16624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16635,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 16606,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16665,
											"end": 16674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16665,
											"end": 16674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 16661,
											"end": 16912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16725,
											"end": 16730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 16706,
											"end": 16731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16731,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 16706,
											"end": 16731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16778,
											"end": 16787,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16778,
											"end": 16787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16778,
											"end": 16787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16731,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16768,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 16768,
											"end": 16799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16793,
											"end": 16798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16768,
											"end": 16799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16799,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 16768,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16755,
											"end": 16764,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16755,
											"end": 16764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16755,
											"end": 16764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16799,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16827,
											"end": 16838,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 16827,
											"end": 16838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16827,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 16827,
											"end": 16849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16843,
											"end": 16848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16827,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16827,
											"end": 16849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16827,
											"end": 16849,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 16827,
											"end": 16849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16824,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 16813,
											"end": 16849,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16885,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16885,
											"end": 16894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16885,
											"end": 16894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16885,
											"end": 16894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16885,
											"end": 16894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16885,
											"end": 16894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16901,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16912,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 16661,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 16939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16922,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16922,
											"end": 17216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16971,
											"end": 17001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 16971,
											"end": 16985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16990,
											"end": 17000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16971,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 16971,
											"end": 17001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16971,
											"end": 17001,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 16971,
											"end": 17001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17053,
											"end": 17067,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17053,
											"end": 17067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17053,
											"end": 17067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17068,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 17001,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17043,
											"end": 17084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 17043,
											"end": 17084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17073,
											"end": 17083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 17043,
											"end": 17084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17084,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 17043,
											"end": 17084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17039,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17025,
											"end": 17039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17025,
											"end": 17039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17040,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17015,
											"end": 17084,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 17114,
											"end": 17127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 17114,
											"end": 17143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 17142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 17114,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17143,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 17114,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17098,
											"end": 17111,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 17098,
											"end": 17143,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17179,
											"end": 17193,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17179,
											"end": 17193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17179,
											"end": 17193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17179,
											"end": 17193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17179,
											"end": 17193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17179,
											"end": 17193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17205,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16922,
											"end": 17216,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16922,
											"end": 17216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17234,
											"end": 17248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17234,
											"end": 17248,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 17255,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16367,
											"end": 17255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 18509,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 17262,
											"end": 18509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17337,
											"end": 17344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17365,
											"end": 17387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17390,
											"end": 17396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17406,
											"end": 17424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17427,
											"end": 17458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 17452,
											"end": 17457,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 17427,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17438,
											"end": 17446,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17438,
											"end": 17446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17433,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 17427,
											"end": 17437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17427,
											"end": 17447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17458,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 17427,
											"end": 17458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17406,
											"end": 17458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17406,
											"end": 17458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17468,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17489,
											"end": 17523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 17517,
											"end": 17522,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 17489,
											"end": 17512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17500,
											"end": 17511,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17500,
											"end": 17511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17495,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 17489,
											"end": 17499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17489,
											"end": 17512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17523,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 17489,
											"end": 17523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17468,
											"end": 17523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17468,
											"end": 17523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17533,
											"end": 17546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17549,
											"end": 17578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 17572,
											"end": 17577,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 17549,
											"end": 17567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17560,
											"end": 17566,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 17560,
											"end": 17566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17555,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 17549,
											"end": 17559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17549,
											"end": 17567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17549,
											"end": 17578,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 17549,
											"end": 17578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17533,
											"end": 17578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17599,
											"end": 17613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17599,
											"end": 17613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17595,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 17595,
											"end": 17896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17645,
											"end": 17675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 17645,
											"end": 17659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17664,
											"end": 17674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17645,
											"end": 17663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 17645,
											"end": 17675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17645,
											"end": 17675,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 17645,
											"end": 17675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17727,
											"end": 17741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17727,
											"end": 17741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17628,
											"end": 17675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17628,
											"end": 17675,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17717,
											"end": 17758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 17717,
											"end": 17758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17747,
											"end": 17757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 17717,
											"end": 17758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17717,
											"end": 17758,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 17717,
											"end": 17758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 17713,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17699,
											"end": 17713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17699,
											"end": 17713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17714,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17758,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17791,
											"end": 17807,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 17791,
											"end": 17807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17791,
											"end": 17823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 17791,
											"end": 17823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17812,
											"end": 17822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17791,
											"end": 17811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 17791,
											"end": 17823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17791,
											"end": 17823,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 17791,
											"end": 17823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17772,
											"end": 17788,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 17772,
											"end": 17823,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17859,
											"end": 17873,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17859,
											"end": 17873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17859,
											"end": 17873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17859,
											"end": 17873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17859,
											"end": 17873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17859,
											"end": 17873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17885,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17595,
											"end": 17896,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 17595,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17906,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 17906,
											"end": 18158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 17951,
											"end": 17965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17970,
											"end": 17975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 17951,
											"end": 17976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 17976,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 17951,
											"end": 17976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18024,
											"end": 18033,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 18024,
											"end": 18033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18024,
											"end": 18033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17976,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18014,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 18014,
											"end": 18045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18039,
											"end": 18044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18014,
											"end": 18045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18045,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 18014,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18010,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 18001,
											"end": 18010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18001,
											"end": 18010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17991,
											"end": 18000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17991,
											"end": 18011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17991,
											"end": 18045,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18073,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 18073,
											"end": 18084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18073,
											"end": 18095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 18073,
											"end": 18095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18089,
											"end": 18094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18073,
											"end": 18088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18073,
											"end": 18095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18073,
											"end": 18095,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 18073,
											"end": 18095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18059,
											"end": 18070,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 18059,
											"end": 18095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18114,
											"end": 18147,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17906,
											"end": 18158,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 17906,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18171,
											"end": 18185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18171,
											"end": 18185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 18168,
											"end": 18463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 18217,
											"end": 18231,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 18217,
											"end": 18247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18247,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 18217,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18300,
											"end": 18314,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 18300,
											"end": 18314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18300,
											"end": 18314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18200,
											"end": 18247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18200,
											"end": 18247,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18290,
											"end": 18331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 18290,
											"end": 18331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18320,
											"end": 18330,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18290,
											"end": 18331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18331,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 18290,
											"end": 18331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18286,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 18272,
											"end": 18286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18272,
											"end": 18286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18262,
											"end": 18271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18262,
											"end": 18287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18262,
											"end": 18331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18361,
											"end": 18374,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 18361,
											"end": 18374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18361,
											"end": 18390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 18361,
											"end": 18390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18379,
											"end": 18389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18361,
											"end": 18378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18361,
											"end": 18390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18361,
											"end": 18390,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 18361,
											"end": 18390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18345,
											"end": 18358,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 18345,
											"end": 18390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18426,
											"end": 18440,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 18426,
											"end": 18440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18426,
											"end": 18440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18426,
											"end": 18440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18426,
											"end": 18440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18426,
											"end": 18440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18452,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18463,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 18168,
											"end": 18463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18488,
											"end": 18502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18488,
											"end": 18502,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 18509,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17262,
											"end": 18509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3210,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3114,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3199,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 3198,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3553,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 3457,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3545,
											"end": 3546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 3541,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3938,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 3842,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3927,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 3926,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 565,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 717,
											"end": 738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 761,
											"end": 774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 805,
											"end": 807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 794,
											"end": 803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 985,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 845,
											"end": 985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 859,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 866,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 845,
											"end": 985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 845,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 845,
											"end": 985,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 954,
											"end": 968,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 954,
											"end": 968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 950,
											"end": 973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 950,
											"end": 973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 944,
											"end": 974,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 920,
											"end": 937,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 920,
											"end": 937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 920,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 939,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 916,
											"end": 942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 909,
											"end": 975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 874,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 874,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 845,
											"end": 985,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 985,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 845,
											"end": 985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 849,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1018,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1106,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1093,
											"end": 1100,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1107,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 1113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 565,
											"end": 1113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 565,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1372,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1118,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1250,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1305,
											"end": 1314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1286,
											"end": 1315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1286,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1315,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1366,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1366,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 1701,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1718,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1754,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1802,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1802,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1891,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1902,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2046,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2067,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2150,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2201,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2159,
											"end": 2219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2217,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2159,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2838,
											"end": 2847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2819,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2848,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2819,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2899,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2867,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2905,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2867,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2916,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3059,
											"end": 3120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3117,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3059,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3169,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3129,
											"end": 3290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3207,
											"end": 3210,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3203,
											"end": 3223,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3251,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3244,
											"end": 3245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3237,
											"end": 3252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3290,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3129,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 3301,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3353,
											"end": 3373,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3383,
											"end": 3398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3414,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3558,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3433,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3529,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3552,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3516,
											"end": 3552,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 3532,
											"end": 3550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6783,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6655,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6731,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6740,
											"end": 6777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6757,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6757,
											"end": 6775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6956,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 6788,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6892,
											"end": 6901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6892,
											"end": 6901,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6909,
											"end": 6924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6909,
											"end": 6924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6909,
											"end": 6924,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6925,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6889,
											"end": 6926,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6879,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6879,
											"end": 6950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6930,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6930,
											"end": 6948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 7178,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6961,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7017,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 7017,
											"end": 7149,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7081,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7066,
											"end": 7069,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7062,
											"end": 7082,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7110,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7103,
											"end": 7104,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7096,
											"end": 7111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7131,
											"end": 7132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7139,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7017,
											"end": 7149,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 7017,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 7178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"Task1/Mem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ExcludedFromFee(address,bool)": "2d43abd8",
							"IncludeInFee(address,bool)": "6c726137",
							"_burningFee()": "ad0a00aa",
							"_burningFeeTotal()": "ceae0e8d",
							"_charity()": "82d99cb1",
							"_charityTotal()": "52db1ca4",
							"_inbetweenFeeTotal()": "4f8244f4",
							"_inbetweenFee_()": "bcac9176",
							"_lockTimestamp(address)": "02fb4880",
							"_lpFee()": "15c93a7d",
							"_lpFeeTotal()": "27364d21",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burningAddress()": "48112396",
							"charityAddress()": "afcf2fc4",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"inbetweenAddress()": "3871ef64",
							"increaseAllowance(address,uint256)": "39509351",
							"lpAddress()": "9b4dc8cc",
							"maxWalletBalance()": "bbde77c1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setLPAddress(address)": "7a351a1d",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"ExcludedFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"IncludeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_burningFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_burningFeeTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_charity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_charityTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_inbetweenFeeTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_inbetweenFee_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_lockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_lpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_lpFeeTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burningAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"charityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inbetweenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Address\",\"type\":\"address\"}],\"name\":\"setLPAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Task1/Mem.sol\":\"MemEthereum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Task1/Mem.sol\":{\"keccak256\":\"0xd19cff6ea6535d5270c7bf7a86bb6562500e3a19ca5425b6296154a8ef973417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540ff895f946b546ac13835b2f22944337f7d42452a36100dc8abcea02ac637e\",\"dweb:/ipfs/Qma4zPBN94HXYJh4Li3pW6zLsWXe77VHo1PbWps2SdvtP1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 338,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 521,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 524,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 527,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint8"
							},
							{
								"astId": 531,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 537,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_allowances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 541,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "isExcludedFromFee",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 545,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_lockTimestamp",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 552,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 555,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_charity",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 558,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_burningFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 561,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_lpFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 564,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_inbetweenFee_",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 566,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_charityTotal",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 568,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_burningFeeTotal",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 570,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_lpFeeTotal",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 572,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "_inbetweenFeeTotal",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 575,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "charityAddress",
								"offset": 0,
								"slot": "17",
								"type": "t_address"
							},
							{
								"astId": 578,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "burningAddress",
								"offset": 0,
								"slot": "18",
								"type": "t_address"
							},
							{
								"astId": 580,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "lpAddress",
								"offset": 0,
								"slot": "19",
								"type": "t_address"
							},
							{
								"astId": 583,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "inbetweenAddress",
								"offset": 0,
								"slot": "20",
								"type": "t_address"
							},
							{
								"astId": 590,
								"contract": "Task1/Mem.sol:MemEthereum",
								"label": "maxWalletBalance",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Task1/Mem.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Task1/Mem.sol\":{\"keccak256\":\"0xd19cff6ea6535d5270c7bf7a86bb6562500e3a19ca5425b6296154a8ef973417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540ff895f946b546ac13835b2f22944337f7d42452a36100dc8abcea02ac637e\",\"dweb:/ipfs/Qma4zPBN94HXYJh4Li3pW6zLsWXe77VHo1PbWps2SdvtP1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 338,
								"contract": "Task1/Mem.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Task1/Mem.sol\":474:6774  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Task1/Mem.sol\":474:6774  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220395163047d5e1dbfaac7714861969fe437028f464f8e6f8341bde4490046034764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395163047d5e1dbfaac7714861969fe437028f464f8e6f8341bde4490046034764736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY MLOAD PUSH4 0x47D5E1D 0xBF 0xAA 0xC7 PUSH18 0x4861969FE437028F464F8E6F8341BDE44900 CHAINID SUB SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "474:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;474:6300:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395163047d5e1dbfaac7714861969fe437028f464f8e6f8341bde4490046034764736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY MLOAD PUSH4 0x47D5E1D 0xBF 0xAA 0xC7 PUSH18 0x4861969FE437028F464F8E6F8341BDE44900 CHAINID SUB SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "474:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 474,
									"end": 6774,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220395163047d5e1dbfaac7714861969fe437028f464f8e6f8341bde4490046034764736f6c63430008130033",
									".code": [
										{
											"begin": 474,
											"end": 6774,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 474,
											"end": 6774,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 474,
											"end": 6774,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 474,
											"end": 6774,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 474,
											"end": 6774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 6774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 6774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 6774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 6774,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Task1/Mem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Task1/Mem.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Task1/Mem.sol\":{\"keccak256\":\"0xd19cff6ea6535d5270c7bf7a86bb6562500e3a19ca5425b6296154a8ef973417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540ff895f946b546ac13835b2f22944337f7d42452a36100dc8abcea02ac637e\",\"dweb:/ipfs/Qma4zPBN94HXYJh4Li3pW6zLsWXe77VHo1PbWps2SdvtP1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Task1/Mem.sol": {
				"ast": {
					"absolutePath": "Task1/Mem.sol",
					"exportedSymbols": {
						"Context": [
							332
						],
						"IERC20": [
							511
						],
						"MemEthereum": [
							1442
						],
						"Ownable": [
							443
						],
						"SafeMath": [
							311
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "277:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "482:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "709:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "719:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "751:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "743:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "743:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "755:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "759:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "743:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "778:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "782:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "778:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "774:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "800:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "792:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "785:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "824:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "830:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "823:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "816:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "497:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "642:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "657:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "649:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "668:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "660:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "694:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "700:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:15:0"
									},
									"scope": 311,
									"src": "633:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1070:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1080:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1108:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1112:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1108:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1104:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1123:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1130:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1122:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1115:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1160:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1164:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1160:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1153:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1146:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "855:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1003:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1018:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1010:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1029:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1021:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1054:15:0"
									},
									"scope": 311,
									"src": "994:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1407:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1417:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1675:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1680:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1671:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1697:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1690:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1683:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1721:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1713:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1713:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1725:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1729:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1725:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1713:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1748:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1752:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1748:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1757:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1748:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1744:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1768:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1775:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1760:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1799:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1805:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1798:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1791:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1189:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1340:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1355:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1347:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1366:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1358:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:15:0"
									},
									"scope": 311,
									"src": "1331:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2049:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2059:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2087:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2092:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2087:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2083:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2103:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2110:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2102:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2095:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2134:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2140:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2144:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2140:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2133:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2126:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1830:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1982:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1997:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1989:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2040:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:15:0"
									},
									"scope": 311,
									"src": "1973:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2398:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2408:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2436:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2441:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2436:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2432:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2452:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2451:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2444:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2483:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2489:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2493:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2489:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2482:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2475:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2169:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2331:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2357:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2349:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2389:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:15:0"
									},
									"scope": 311,
									"src": "2322:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2814:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2831:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2835:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2831:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2824:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2518:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2756:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2768:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2760:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2779:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2771:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2805:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:9:0"
									},
									"scope": 311,
									"src": "2747:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3181:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3198:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3202:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3198:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3191:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2849:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3123:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3135:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3127:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3146:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3138:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3172:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:9:0"
									},
									"scope": 311,
									"src": "3114:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3524:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3541:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3534:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3216:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3466:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3478:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3470:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3489:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3481:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3515:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3514:9:0"
									},
									"scope": 311,
									"src": "3457:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3909:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3926:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3930:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3926:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3919:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3559:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3851:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3863:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3855:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3866:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3899:9:0"
									},
									"scope": 311,
									"src": "3842:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4458:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4475:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4468:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3944:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4400:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4412:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4404:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4423:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4415:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4403:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4449:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4448:9:0"
									},
									"scope": 311,
									"src": "4391:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5076:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5086:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5123:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5118:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5126:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5110:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5110:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5110:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5164:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5160:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5153:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4493:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4960:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4981:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4973:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5000:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4992:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5025:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5011:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5067:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5066:9:0"
									},
									"scope": 311,
									"src": "4951:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5791:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5801:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5833:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5837:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5833:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5840:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5825:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5825:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5825:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5874:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5878:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5867:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5188:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5675:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5696:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5688:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5715:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5707:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5740:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5726:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5726:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5782:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5781:9:0"
									},
									"scope": 311,
									"src": "5666:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6667:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6677:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6709:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6713:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6709:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6716:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6701:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6701:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6701:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6750:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6754:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6750:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6743:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5902:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6551:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6572:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6564:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6591:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6583:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6616:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6602:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6602:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6658:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6657:9:0"
									},
									"scope": 311,
									"src": "6542:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1443,
							"src": "474:6300:0",
							"usedErrors": []
						},
						{
							"id": 312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6936:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 313,
								"nodeType": "StructuredDocumentation",
								"src": "6961:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 332,
							"linearizedBaseContracts": [
								332
							],
							"name": "Context",
							"nameLocation": "7476:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "7552:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 318,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7569:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7573:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7569:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 317,
												"id": 320,
												"nodeType": "Return",
												"src": "7562:17:0"
											}
										]
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7499:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7509:2:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7543:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7542:9:0"
									},
									"scope": 332,
									"src": "7490:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "7659:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 327,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7676:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7680:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7676:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 326,
												"id": 329,
												"nodeType": "Return",
												"src": "7669:15:0"
											}
										]
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7601:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7609:2:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7643:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7643:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7642:16:0"
									},
									"scope": 332,
									"src": "7592:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1443,
							"src": "7458:235:0",
							"usedErrors": []
						},
						{
							"id": 333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7872:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"8422:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "8422:7:0"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "8422:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "7898:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443,
								332
							],
							"name": "Ownable",
							"nameLocation": "8411:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "8452:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "8436:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 337,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8436:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 344,
									"name": "OwnershipTransferred",
									"nameLocation": "8471:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "8508:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "8492:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "8539:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "8523:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8491:57:0"
									},
									"src": "8465:84:0"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "8665:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 349,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "8694:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8694:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "8675:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "8675:32:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "8555:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8662:2:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8665:0:0"
									},
									"scope": 443,
									"src": "8651:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "8823:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 357,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "8833:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8833:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "8833:13:0"
											},
											{
												"id": 360,
												"nodeType": "PlaceholderStatement",
												"src": "8856:1:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "8720:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 362,
									"name": "onlyOwner",
									"nameLocation": "8811:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8820:2:0"
									},
									"src": "8802:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "8995:30:0",
										"statements": [
											{
												"expression": {
													"id": 368,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "9012:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 367,
												"id": 369,
												"nodeType": "Return",
												"src": "9005:13:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "8870:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "8949:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8954:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "8986:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8985:9:0"
									},
									"scope": 443,
									"src": "8940:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "9143:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 376,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "9161:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9161:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 378,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "9172:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9172:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9161:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9186:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9153:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "9153:68:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "9031:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "9107:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9118:2:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9143:0:0"
									},
									"scope": 443,
									"src": "9098:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "9624:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9653:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9653:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9653:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 391,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "9634:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9634:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "9634:30:0"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "9234:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 389,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 388,
												"name": "onlyOwner",
												"nameLocations": [
													"9614:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "9614:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9614:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "9579:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9596:2:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9624:0:0"
									},
									"scope": 443,
									"src": "9570:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "9890:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "9908:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9928:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9920:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9920:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9920:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9908:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9932:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9900:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "9900:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "10002:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "9983:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9983:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9983:28:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "9677:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 404,
												"name": "onlyOwner",
												"nameLocations": [
													"9880:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "9880:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9880:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "9829:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9855:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "9847:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9846:18:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9890:0:0"
									},
									"scope": 443,
									"src": "9820:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "10235:124:0",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "10253:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "10245:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 428,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10245:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"id": 430,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "10264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10245:25:0"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "10280:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "10289:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10280:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "10280:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 437,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "10333:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "10343:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 436,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "10312:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10312:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "EmitStatement",
												"src": "10307:45:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "10024:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "10181:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10208:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "10200:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10199:18:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10235:0:0"
									},
									"scope": 443,
									"src": "10172:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1443,
							"src": "8393:1968:0",
							"usedErrors": []
						},
						{
							"id": 444,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "10365:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 511,
							"linearizedBaseContracts": [
								511
							],
							"name": "IERC20",
							"nameLocation": "10400:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "10426:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10437:2:0"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "10463:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10462:9:0"
									},
									"scope": 511,
									"src": "10417:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "10486:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10504:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "10496:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10495:17:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "10536:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10535:9:0"
									},
									"scope": 511,
									"src": "10477:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "10559:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10576:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "10568:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "10587:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10567:35:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "10620:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10619:6:0"
									},
									"scope": 511,
									"src": "10550:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "10640:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10658:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10650:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10665:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10649:32:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10704:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10703:9:0"
									},
									"scope": 511,
									"src": "10631:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "10727:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10743:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "10735:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10760:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "10752:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10734:33:0"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "10786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:6:0"
									},
									"scope": 511,
									"src": "10718:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10806:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10827:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "10819:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10842:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "10834:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10860:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "10852:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10818:49:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "10886:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10886:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10885:6:0"
									},
									"scope": 511,
									"src": "10797:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 502,
									"name": "Transfer",
									"nameLocation": "10903:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10928:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10912:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10950:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10934:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10962:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10954:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10911:57:0"
									},
									"src": "10897:72:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 510,
									"name": "Approval",
									"nameLocation": "10980:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11005:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "10989:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11027:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "11011:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11043:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "11035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10988:61:0"
									},
									"src": "10974:76:0"
								}
							],
							"scope": 1443,
							"src": "10390:662:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 512,
										"name": "IERC20",
										"nameLocations": [
											"11080:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 511,
										"src": "11080:6:0"
									},
									"id": 513,
									"nodeType": "InheritanceSpecifier",
									"src": "11080:6:0"
								},
								{
									"baseName": {
										"id": 514,
										"name": "Ownable",
										"nameLocations": [
											"11088:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 443,
										"src": "11088:7:0"
									},
									"id": 515,
									"nodeType": "InheritanceSpecifier",
									"src": "11088:7:0"
								}
							],
							"canonicalName": "MemEthereum",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								443,
								332,
								511
							],
							"name": "MemEthereum",
							"nameLocation": "11065:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 518,
									"libraryName": {
										"id": 516,
										"name": "SafeMath",
										"nameLocations": [
											"11113:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "11113:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "11107:27:0",
									"typeName": {
										"id": 517,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11126:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 521,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "11159:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11144:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 519,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11144:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d656d457468657265756d",
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11167:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d2166d4ad193547842cf3461c7c221ac35a75da547085cae94717f0659ec7cb0",
											"typeString": "literal_string \"MemEthereum\""
										},
										"value": "MemEthereum"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 524,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "11201:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11186:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 522,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11186:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d455448",
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11211:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_064ba78a8cdb5d9b059e0a37958856e0314d4d2af1b4b75da1eb36c359ade9da",
											"typeString": "literal_string \"METH\""
										},
										"value": "METH"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 527,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "11237:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11223:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 525,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11223:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 526,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11249:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 531,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "11300:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11263:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 530,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 528,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11271:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11263:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11282:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 537,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "11372:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11315:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 536,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 532,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11323:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11315:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 535,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 533,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11342:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11334:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 534,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11353:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 541,
									"mutability": "mutable",
									"name": "isExcludedFromFee",
									"nameLocation": "11414:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11389:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 540,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 538,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11397:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11389:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 539,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "11408:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "02fb4880",
									"id": 545,
									"mutability": "mutable",
									"name": "_lockTimestamp",
									"nameLocation": "11473:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11437:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 544,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 542,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11445:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11437:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 543,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11456:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 552,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "11511:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11494:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 546,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11494:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000000"
										},
										"id": 551,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030303030303030303030",
											"id": 547,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "11527:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000000_by_1",
												"typeString": "int_const 100000000000"
											},
											"value": "100000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 550,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 548,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "11541:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 549,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "11545:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "11541:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "11527:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "82d99cb1",
									"id": 555,
									"mutability": "mutable",
									"name": "_charity",
									"nameLocation": "11569:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11554:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 553,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11554:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 554,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11580:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad0a00aa",
									"id": 558,
									"mutability": "mutable",
									"name": "_burningFee",
									"nameLocation": "11614:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11599:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 556,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11599:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 557,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11628:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15c93a7d",
									"id": 561,
									"mutability": "mutable",
									"name": "_lpFee",
									"nameLocation": "11659:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11644:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 559,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11644:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 560,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11668:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bcac9176",
									"id": 564,
									"mutability": "mutable",
									"name": "_inbetweenFee_",
									"nameLocation": "11698:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11683:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11683:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11715:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "52db1ca4",
									"id": 566,
									"mutability": "mutable",
									"name": "_charityTotal",
									"nameLocation": "11745:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11730:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11730:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ceae0e8d",
									"id": 568,
									"mutability": "mutable",
									"name": "_burningFeeTotal",
									"nameLocation": "11779:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11764:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 567,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11764:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27364d21",
									"id": 570,
									"mutability": "mutable",
									"name": "_lpFeeTotal",
									"nameLocation": "11816:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11801:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 569,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11801:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f8244f4",
									"id": 572,
									"mutability": "mutable",
									"name": "_inbetweenFeeTotal",
									"nameLocation": "11848:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11833:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 571,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11833:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "afcf2fc4",
									"id": 575,
									"mutability": "mutable",
									"name": "charityAddress",
									"nameLocation": "11887:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11872:75:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 573,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11872:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832434432424432343562324335363343393833353642353433643643396131614266373335334335",
										"id": 574,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11905:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2CD2BD245b2C563C98356B543d6C9a1aBf7353C5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48112396",
									"id": 578,
									"mutability": "mutable",
									"name": "burningAddress",
									"nameLocation": "11973:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "11958:74:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 576,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11958:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 577,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11990:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0000000000000000000000000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b4dc8cc",
									"id": 580,
									"mutability": "mutable",
									"name": "lpAddress",
									"nameLocation": "12055:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "12040:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 579,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12040:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3871ef64",
									"id": 583,
									"mutability": "mutable",
									"name": "inbetweenAddress",
									"nameLocation": "12132:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "12117:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 581,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12117:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838304463314231366542373333436134394232383966364233393039304543306443303232326138",
										"id": 582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12151:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x80Dc1B16eB733Ca49B289f6B39090EC0dC0222a8"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bbde77c1",
									"id": 590,
									"mutability": "mutable",
									"name": "maxWalletBalance",
									"nameLocation": "12219:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1442,
									"src": "12204:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 584,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12204:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_3000000000000000000000000000_by_1",
											"typeString": "int_const 3000000000000000000000000000"
										},
										"id": 589,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33303030303030303030",
											"id": 585,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "12238:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3000000000_by_1",
												"typeString": "int_const 3000000000"
											},
											"value": "3000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 588,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 586,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12249:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 587,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12253:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "12249:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "12238:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000000000000000000000000000_by_1",
											"typeString": "int_const 3000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "12322:144:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 595,
																		"name": "_lockTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "12340:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 597,
																	"indexExpression": {
																		"id": 596,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "12355:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12340:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12367:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12340:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 600,
																			"name": "_lockTimestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "12372:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 602,
																		"indexExpression": {
																			"id": 601,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "12387:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12372:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12398:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "12372:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 605,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "12404:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12410:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "12404:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12372:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12340:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74206973206c6f636b6564",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12421:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3696a5724fd30f8ebb95abd3cef3a8ad1a4959139792add59a1ce6a1f657f6f4",
																"typeString": "literal_string \"Account is locked\""
															},
															"value": "Account is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3696a5724fd30f8ebb95abd3cef3a8ad1a4959139792add59a1ce6a1f657f6f4",
																"typeString": "literal_string \"Account is locked\""
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12332:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "12332:109:0"
											},
											{
												"id": 612,
												"nodeType": "PlaceholderStatement",
												"src": "12451:1:0"
											}
										]
									},
									"id": 614,
									"name": "antiBot",
									"nameLocation": "12297:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12313:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "12305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12304:17:0"
									},
									"src": "12288:178:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "12527:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 622,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 616,
																			"src": "12556:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 621,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 716,
																		"src": "12546:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12546:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 624,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "12569:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12546:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 626,
																"name": "maxWalletBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "12579:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12546:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d2077616c6c65742062616c616e6365206578636565646564",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12597:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_104267c7892f9914808c25827e20032382daf34f0cdf95e15f8d66b7f5b00e41",
																"typeString": "literal_string \"Maximum wallet balance exceeded\""
															},
															"value": "Maximum wallet balance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_104267c7892f9914808c25827e20032382daf34f0cdf95e15f8d66b7f5b00e41",
																"typeString": "literal_string \"Maximum wallet balance exceeded\""
															}
														],
														"id": 620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12538:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "12538:93:0"
											},
											{
												"id": 631,
												"nodeType": "PlaceholderStatement",
												"src": "12641:1:0"
											}
										]
									},
									"id": 633,
									"name": "maxWallet",
									"nameLocation": "12482:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12500:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "12492:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "12511:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12491:35:0"
									},
									"src": "12473:185:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "12678:228:0",
										"statements": [
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 636,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "12689:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 639,
														"indexExpression": {
															"expression": {
																"id": 637,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12707:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12711:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12707:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12689:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12721:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12689:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "12689:36:0"
											},
											{
												"expression": {
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 643,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "12735:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 648,
														"indexExpression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12761:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemEthereum_$1442",
																		"typeString": "contract MemEthereum"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemEthereum_$1442",
																		"typeString": "contract MemEthereum"
																	}
																],
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12753:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12753:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12753:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12735:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12770:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12735:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "12735:39:0"
											},
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 652,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "12784:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 655,
														"indexExpression": {
															"expression": {
																"id": 653,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12794:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12798:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12794:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12784:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 656,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "12808:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12784:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "12784:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12869:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12861:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12861:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12861:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 664,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12873:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12877:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12873:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "12885:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "12852:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12852:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "EmitStatement",
												"src": "12847:51:0"
											}
										]
									},
									"id": 670,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12675:2:0"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12678:0:0"
									},
									"scope": 1442,
									"src": "12664:242:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "12964:29:0",
										"statements": [
											{
												"expression": {
													"id": 675,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 521,
													"src": "12981:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 674,
												"id": 676,
												"nodeType": "Return",
												"src": "12974:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12921:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12925:2:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "12949:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12949:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12948:15:0"
									},
									"scope": 1442,
									"src": "12912:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "13053:31:0",
										"statements": [
											{
												"expression": {
													"id": 683,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 524,
													"src": "13070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 682,
												"id": 684,
												"nodeType": "Return",
												"src": "13063:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13008:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13014:2:0"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "13038:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13038:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13037:15:0"
									},
									"scope": 1442,
									"src": "12999:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "13138:33:0",
										"statements": [
											{
												"expression": {
													"id": 691,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 527,
													"src": "13155:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 690,
												"id": 692,
												"nodeType": "Return",
												"src": "13148:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13099:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13107:2:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "13131:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 688,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13131:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13130:7:0"
									},
									"scope": 1442,
									"src": "13090:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										449
									],
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "13239:36:0",
										"statements": [
											{
												"expression": {
													"id": 700,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "13256:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 701,
												"nodeType": "Return",
												"src": "13249:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13186:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 696,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13207:8:0"
									},
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13197:2:0"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "13230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13229:9:0"
									},
									"scope": 1442,
									"src": "13177:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										456
									],
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "13356:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 711,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "13374:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 713,
													"indexExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "13384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13374:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 714,
												"nodeType": "Return",
												"src": "13367:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13290:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 707,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13324:8:0"
									},
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13308:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "13300:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13299:17:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "13347:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13346:9:0"
									},
									"scope": 1442,
									"src": "13281:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										465
									],
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "13548:129:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 735,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13567:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13571:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13567:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "13578:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "13588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "13557:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13557:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "13557:38:0"
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 741,
															"name": "_lockTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "13604:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 744,
														"indexExpression": {
															"expression": {
																"id": 742,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13619:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13623:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13619:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13604:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 745,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "13633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13639:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "13633:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13604:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "13604:44:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 733,
												"id": 750,
												"nodeType": "Return",
												"src": "13659:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 723,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "13474:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13478:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "13474:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 725,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 722,
												"name": "antiBot",
												"nameLocations": [
													"13466:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 614,
												"src": "13466:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13466:19:0"
										},
										{
											"arguments": [
												{
													"id": 727,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 718,
													"src": "13497:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 728,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 720,
													"src": "13508:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 729,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 726,
												"name": "maxWallet",
												"nameLocations": [
													"13486:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 633,
												"src": "13486:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13486:29:0"
										}
									],
									"name": "transfer",
									"nameLocation": "13414:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13516:8:0"
									},
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13431:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "13423:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13450:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "13442:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13422:35:0"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "13542:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13541:6:0"
									},
									"scope": 1442,
									"src": "13405:272:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										474
									],
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "13773:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 762,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "13790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 764,
														"indexExpression": {
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "13802:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13790:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 766,
													"indexExpression": {
														"id": 765,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "13809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13790:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 761,
												"id": 767,
												"nodeType": "Return",
												"src": "13783:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "13692:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 758,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13741:8:0"
									},
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "13702:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13725:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "13717:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13701:32:0"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "13764:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13763:9:0"
									},
									"scope": 1442,
									"src": "13683:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										483
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "13911:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 780,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13930:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13934:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13930:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "13942:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "13951:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "13921:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "13921:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13975:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 778,
												"id": 787,
												"nodeType": "Return",
												"src": "13968:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13839:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 775,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13887:8:0"
									},
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13855:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "13847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13872:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "13864:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13846:33:0"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "13905:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13904:6:0"
									},
									"scope": 1442,
									"src": "13830:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										494
									],
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "14124:307:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 806,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "14142:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 808,
																	"indexExpression": {
																		"id": 807,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "14152:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14142:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 809,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "14165:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14142:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 811,
																"name": "maxWalletBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "14175:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14142:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d2077616c6c65742062616c616e6365206578636565646564",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14193:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_104267c7892f9914808c25827e20032382daf34f0cdf95e15f8d66b7f5b00e41",
																"typeString": "literal_string \"Maximum wallet balance exceeded\""
															},
															"value": "Maximum wallet balance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_104267c7892f9914808c25827e20032382daf34f0cdf95e15f8d66b7f5b00e41",
																"typeString": "literal_string \"Maximum wallet balance exceeded\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14134:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "14134:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "14247:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "14254:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "14264:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "14237:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14237:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "14237:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 823,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "14297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 824,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14304:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14308:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14304:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 833,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "14352:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14359:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 826,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "14315:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 828,
																		"indexExpression": {
																			"id": 827,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "14327:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14315:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 831,
																	"indexExpression": {
																		"expression": {
																			"id": 829,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "14335:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14339:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "14335:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14315:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14347:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 260,
																"src": "14315:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14315:87:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 822,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "14288:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14288:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "14288:115:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14420:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 804,
												"id": 839,
												"nodeType": "Return",
												"src": "14413:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 798,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "14080:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14084:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "14080:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 800,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 797,
												"name": "antiBot",
												"nameLocations": [
													"14072:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 614,
												"src": "14072:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14072:19:0"
										}
									],
									"name": "transferFrom",
									"nameLocation": "14001:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 801,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14092:8:0"
									},
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14022:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "14014:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14038:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "14030:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14057:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "14049:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14013:51:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "14118:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 802,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14118:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14117:6:0"
									},
									"scope": 1442,
									"src": "13992:439:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "14531:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 851,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14550:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14554:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14550:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "14562:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 861,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "14608:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 854,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "14571:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 857,
																		"indexExpression": {
																			"expression": {
																				"id": 855,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "14583:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14587:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "14583:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14571:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 859,
																	"indexExpression": {
																		"id": 858,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "14595:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14571:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14604:3:0",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 175,
																"src": "14571:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14571:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "14541:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14541:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "14541:79:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14637:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 849,
												"id": 866,
												"nodeType": "Return",
												"src": "14630:11:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "14446:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14472:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "14464:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "14489:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "14481:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14463:37:0"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "14525:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14524:6:0"
									},
									"scope": 1442,
									"src": "14437:211:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "14753:163:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 878,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14772:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14776:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14772:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "14784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 888,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "14830:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14847:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 881,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "14793:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 884,
																		"indexExpression": {
																			"expression": {
																				"id": 882,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "14805:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14809:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "14805:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14793:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 886,
																	"indexExpression": {
																		"id": 885,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "14817:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14793:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14826:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 260,
																"src": "14793:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14793:94:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "14763:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14763:125:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "14763:125:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 876,
												"id": 894,
												"nodeType": "Return",
												"src": "14898:11:0"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "14663:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14689:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "14681:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "14706:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "14698:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14680:42:0"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "14747:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14747:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14746:6:0"
									},
									"scope": 1442,
									"src": "14654:262:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "14996:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "15014:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15031:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15023:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 907,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15023:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15023:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15014:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15035:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15006:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "15006:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "15092:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15111:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15103:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 917,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15103:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15103:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15092:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15115:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15084:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "15084:68:0"
											},
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 925,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "15163:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 928,
															"indexExpression": {
																"id": 926,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "15175:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15163:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 929,
														"indexExpression": {
															"id": 927,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "15182:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15163:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 930,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "15193:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15163:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "15163:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 934,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "15223:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "15230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "15239:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 933,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "15214:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15214:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "EmitStatement",
												"src": "15209:37:0"
											}
										]
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14931:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14948:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "14940:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "14955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14980:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "14972:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14939:48:0"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14996:0:0"
									},
									"scope": 1442,
									"src": "14922:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "15338:1018:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 950,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "15356:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15374:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15366:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 951,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15366:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15366:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15356:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15378:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15348:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "15348:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 960,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "15436:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15457:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 961,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15449:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15449:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15436:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15461:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15428:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "15428:71:0"
											},
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "15527:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1066,
														"src": "15519:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"id": 971,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 946,
													"src": "15544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15519:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 973,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "15568:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 975,
														"indexExpression": {
															"id": 974,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "15586:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15568:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 976,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "15597:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 978,
														"indexExpression": {
															"id": 977,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "15615:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15597:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15568:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"nodeType": "IfStatement",
												"src": "15565:117:0",
												"trueBody": {
													"id": 984,
													"nodeType": "Block",
													"src": "15626:56:0",
													"statements": [
														{
															"expression": {
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 980,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "15644:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 981,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "15661:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15644:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 983,
															"nodeType": "ExpressionStatement",
															"src": "15644:23:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15698:26:0",
														"subExpression": {
															"baseExpression": {
																"id": 986,
																"name": "isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "15699:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 988,
															"indexExpression": {
																"id": 987,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "15717:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15699:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15728:29:0",
														"subExpression": {
															"baseExpression": {
																"id": 990,
																"name": "isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "15729:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 992,
															"indexExpression": {
																"id": 991,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "15747:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15729:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15698:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "15695:145:0",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "15758:82:0",
													"statements": [
														{
															"expression": {
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 995,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "15776:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 997,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "15811:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 998,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "15818:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 996,
																		"name": "betweenCollectFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1391,
																		"src": "15793:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) returns (uint256)"
																		}
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15793:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15776:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "15776:49:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1004,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "15856:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1006,
														"indexExpression": {
															"id": 1005,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "15874:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15856:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15885:29:0",
														"subExpression": {
															"baseExpression": {
																"id": 1007,
																"name": "isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "15886:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1009,
															"indexExpression": {
																"id": 1008,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "15904:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15886:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15856:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1020,
												"nodeType": "IfStatement",
												"src": "15853:140:0",
												"trueBody": {
													"id": 1019,
													"nodeType": "Block",
													"src": "15915:78:0",
													"statements": [
														{
															"expression": {
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1012,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "15933:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1014,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "15964:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1015,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "15971:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1013,
																		"name": "buyCollectFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "15950:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) returns (uint256)"
																		}
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15950:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15933:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1018,
															"nodeType": "ExpressionStatement",
															"src": "15933:45:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16009:26:0",
														"subExpression": {
															"baseExpression": {
																"id": 1021,
																"name": "isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "16010:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1023,
															"indexExpression": {
																"id": 1022,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "16028:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16010:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 1025,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "16039:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1027,
														"indexExpression": {
															"id": 1026,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "16057:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16039:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16009:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "16006:141:0",
												"trueBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "16068:79:0",
													"statements": [
														{
															"expression": {
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1029,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "16086:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1031,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "16118:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1032,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "16125:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1030,
																		"name": "SellCollectFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "16103:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) returns (uint256)"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16103:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16086:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1035,
															"nodeType": "ExpressionStatement",
															"src": "16086:46:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1038,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "16160:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1039,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "16170:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16160:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1045,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "16202:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1041,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "16180:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1043,
																"indexExpression": {
																	"id": 1042,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "16190:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16180:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16198:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "16180:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16180:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16160:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "16160:49:0"
											},
											{
												"expression": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1049,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "16219:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1051,
														"indexExpression": {
															"id": 1050,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "16229:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16219:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1056,
																"name": "transferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "16267:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1052,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "16242:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1054,
																"indexExpression": {
																	"id": 1053,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "16252:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16242:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16263:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "16242:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16242:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16219:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "16219:63:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1061,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "16315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "16323:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "transferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "16334:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1060,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "16306:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16306:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "EmitStatement",
												"src": "16301:48:0"
											}
										]
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "15269:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "15287:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "15279:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "15303:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "15295:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15322:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "15314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15278:51:0"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15338:0:0"
									},
									"scope": 1442,
									"src": "15260:1096:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "16467:788:0",
										"statements": [
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "16494:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "16486:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"id": 1078,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1071,
													"src": "16511:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16486:31:0"
											},
											{
												"assignments": [
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "charityFee",
														"nameLocation": "16536:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "16528:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1080,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16574:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1084,
																	"name": "_charity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "16560:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1082,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "16549:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16556:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "16549:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16549:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16570:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "16549:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16549:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16528:52:0"
											},
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "lpFee",
														"nameLocation": "16598:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "16590:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16590:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16629:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1094,
																	"name": "_lpFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "16617:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1092,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "16606:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16613:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "16606:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16606:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16625:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "16606:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16606:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16590:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1100,
														"name": "lpFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "16665:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16673:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16665:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "16661:251:0",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "16675:237:0",
													"statements": [
														{
															"expression": {
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1103,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "16689:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1106,
																			"name": "lpFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "16725:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1104,
																			"name": "transferAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1077,
																			"src": "16706:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16721:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "16706:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16706:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16689:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "16689:42:0"
														},
														{
															"expression": {
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1110,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "16745:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1112,
																	"indexExpression": {
																		"id": 1111,
																		"name": "lpAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "16755:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16745:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1117,
																			"name": "lpFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "16793:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1113,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "16768:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1115,
																			"indexExpression": {
																				"id": 1114,
																				"name": "lpAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 580,
																				"src": "16778:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16768:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16789:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "16768:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16768:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16745:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1120,
															"nodeType": "ExpressionStatement",
															"src": "16745:54:0"
														},
														{
															"expression": {
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1121,
																	"name": "_lpFeeTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "16813:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1124,
																			"name": "lpFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "16843:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1122,
																			"name": "_lpFeeTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 570,
																			"src": "16827:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16839:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "16827:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16827:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16813:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1127,
															"nodeType": "ExpressionStatement",
															"src": "16813:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1129,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "16877:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "lpAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "16885:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "lpFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "16895:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1128,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "16868:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16868:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1133,
															"nodeType": "EmitStatement",
															"src": "16863:38:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1136,
														"name": "charityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "16925:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16925:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "16922:294:0",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "16940:276:0",
													"statements": [
														{
															"expression": {
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1139,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "16954:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1142,
																			"name": "charityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "16990:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1140,
																			"name": "transferAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1077,
																			"src": "16971:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16986:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "16971:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16971:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16954:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1145,
															"nodeType": "ExpressionStatement",
															"src": "16954:47:0"
														},
														{
															"expression": {
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1146,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "17015:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1148,
																	"indexExpression": {
																		"id": 1147,
																		"name": "charityAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "17025:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17015:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1153,
																			"name": "charityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "17073:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1149,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "17043:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1151,
																			"indexExpression": {
																				"id": 1150,
																				"name": "charityAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "17053:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "17043:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17069:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "17043:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17043:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17015:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1156,
															"nodeType": "ExpressionStatement",
															"src": "17015:69:0"
														},
														{
															"expression": {
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1157,
																	"name": "_charityTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "17098:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1160,
																			"name": "charityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "17132:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1158,
																			"name": "_charityTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "17114:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17128:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "17114:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17114:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17098:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1163,
															"nodeType": "ExpressionStatement",
															"src": "17098:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1165,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "17171:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1166,
																		"name": "charityAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "17179:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1167,
																		"name": "charityFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "17194:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1164,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "17162:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17162:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1169,
															"nodeType": "EmitStatement",
															"src": "17157:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1172,
													"name": "transferAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1077,
													"src": "17234:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1075,
												"id": 1173,
												"nodeType": "Return",
												"src": "17227:21:0"
											}
										]
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyCollectFee",
									"nameLocation": "16376:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16398:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "16390:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16415:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "16407:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16389:51:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "16458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16457:9:0"
									},
									"scope": 1442,
									"src": "16367:888:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "17346:1163:0",
										"statements": [
											{
												"assignments": [
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "17373:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "17365:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"id": 1186,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1179,
													"src": "17390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17365:31:0"
											},
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "charityFee",
														"nameLocation": "17414:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "17406:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1192,
																	"name": "_charity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "17438:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1190,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "17427:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17434:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "17427:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17427:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17448:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "17427:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17427:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17406:52:0"
											},
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "burningFee",
														"nameLocation": "17476:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "17468:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17517:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1202,
																	"name": "_burningFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "17500:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1200,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "17489:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17496:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "17489:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17489:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17513:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "17489:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17489:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17468:55:0"
											},
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "lpFee",
														"nameLocation": "17541:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "17533:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17572:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1212,
																	"name": "_lpFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "17560:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1210,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "17549:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17556:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "17549:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17549:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17568:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "17549:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17549:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17533:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "burningFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "17599:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17612:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17599:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1253,
												"nodeType": "IfStatement",
												"src": "17595:301:0",
												"trueBody": {
													"id": 1252,
													"nodeType": "Block",
													"src": "17614:282:0",
													"statements": [
														{
															"expression": {
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1221,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "17628:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1224,
																			"name": "burningFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1199,
																			"src": "17664:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1222,
																			"name": "transferAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "17645:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17660:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "17645:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17645:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17628:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1227,
															"nodeType": "ExpressionStatement",
															"src": "17628:47:0"
														},
														{
															"expression": {
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1228,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "17689:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1230,
																	"indexExpression": {
																		"id": 1229,
																		"name": "burningAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "17699:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17689:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1235,
																			"name": "burningFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1199,
																			"src": "17747:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1231,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "17717:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1233,
																			"indexExpression": {
																				"id": 1232,
																				"name": "burningAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "17727:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "17717:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17743:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "17717:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17717:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17689:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1238,
															"nodeType": "ExpressionStatement",
															"src": "17689:69:0"
														},
														{
															"expression": {
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1239,
																	"name": "_burningFeeTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "17772:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1242,
																			"name": "burningFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1199,
																			"src": "17812:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1240,
																			"name": "_burningFeeTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "17791:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17808:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "17791:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17791:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17772:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "17772:51:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1247,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "17851:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1248,
																		"name": "burningAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "17859:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1249,
																		"name": "burningFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "17874:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1246,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "17842:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17842:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1251,
															"nodeType": "EmitStatement",
															"src": "17837:48:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1254,
														"name": "lpFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "17910:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17918:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17910:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1289,
												"nodeType": "IfStatement",
												"src": "17906:252:0",
												"trueBody": {
													"id": 1288,
													"nodeType": "Block",
													"src": "17920:238:0",
													"statements": [
														{
															"expression": {
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1257,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "17934:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1260,
																			"name": "lpFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "17970:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1258,
																			"name": "transferAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "17951:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17966:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "17951:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17951:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17934:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "17934:42:0"
														},
														{
															"expression": {
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1264,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "17991:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1266,
																	"indexExpression": {
																		"id": 1265,
																		"name": "lpAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "18001:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17991:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1271,
																			"name": "lpFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "18039:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1267,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "18014:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1269,
																			"indexExpression": {
																				"id": 1268,
																				"name": "lpAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 580,
																				"src": "18024:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18014:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18035:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "18014:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18014:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17991:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1274,
															"nodeType": "ExpressionStatement",
															"src": "17991:54:0"
														},
														{
															"expression": {
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1275,
																	"name": "_lpFeeTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "18059:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1278,
																			"name": "lpFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "18089:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1276,
																			"name": "_lpFeeTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 570,
																			"src": "18073:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18085:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "18073:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18073:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18059:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1281,
															"nodeType": "ExpressionStatement",
															"src": "18059:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1283,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "18123:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "lpAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "18131:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "lpFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "18141:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1282,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "18114:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18114:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1287,
															"nodeType": "EmitStatement",
															"src": "18109:38:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1290,
														"name": "charityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "18171:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18171:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "18168:295:0",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "18186:277:0",
													"statements": [
														{
															"expression": {
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1293,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "18200:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1296,
																			"name": "charityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1189,
																			"src": "18236:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1294,
																			"name": "transferAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "18217:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18232:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "18217:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18217:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18200:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1299,
															"nodeType": "ExpressionStatement",
															"src": "18200:47:0"
														},
														{
															"expression": {
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1300,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "18262:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1302,
																	"indexExpression": {
																		"id": 1301,
																		"name": "charityAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "18272:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18262:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1307,
																			"name": "charityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1189,
																			"src": "18320:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1303,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "18290:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1305,
																			"indexExpression": {
																				"id": 1304,
																				"name": "charityAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "18300:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18290:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18316:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "18290:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18290:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18262:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1310,
															"nodeType": "ExpressionStatement",
															"src": "18262:69:0"
														},
														{
															"expression": {
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1311,
																	"name": "_charityTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "18345:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1314,
																			"name": "charityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1189,
																			"src": "18379:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1312,
																			"name": "_charityTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "18361:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18375:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "18361:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18361:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18345:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1317,
															"nodeType": "ExpressionStatement",
															"src": "18345:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1319,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "18418:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1320,
																		"name": "charityAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "18426:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1321,
																		"name": "charityFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "18441:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1318,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "18409:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18409:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1323,
															"nodeType": "EmitStatement",
															"src": "18404:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1326,
													"name": "transferAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1185,
													"src": "18488:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1327,
												"nodeType": "Return",
												"src": "18481:21:0"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SellCollectFee",
									"nameLocation": "17271:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17294:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "17286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17311:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "17303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17285:33:0"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "17337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17336:9:0"
									},
									"scope": 1442,
									"src": "17262:1247:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "18601:511:0",
										"statements": [
											{
												"assignments": [
													1339
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "18628:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "18620:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"id": 1340,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1333,
													"src": "18645:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18620:31:0"
											},
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "_inbetweenFee",
														"nameLocation": "18677:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "18669:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18669:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1351,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18724:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1346,
																	"name": "_inbetweenFee_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "18704:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1344,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "18693:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18700:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "18693:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18693:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18720:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "18693:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18693:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18669:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1352,
														"name": "_inbetweenFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "18745:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18761:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18745:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1387,
												"nodeType": "IfStatement",
												"src": "18741:326:0",
												"trueBody": {
													"id": 1386,
													"nodeType": "Block",
													"src": "18763:304:0",
													"statements": [
														{
															"expression": {
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1355,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "18777:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1358,
																			"name": "_inbetweenFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "18813:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1356,
																			"name": "transferAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "18794:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18809:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "18794:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18794:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18777:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1361,
															"nodeType": "ExpressionStatement",
															"src": "18777:50:0"
														},
														{
															"expression": {
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1362,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "18841:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1364,
																	"indexExpression": {
																		"id": 1363,
																		"name": "inbetweenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "18851:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18841:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1369,
																			"name": "_inbetweenFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "18903:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1365,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "18871:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1367,
																			"indexExpression": {
																				"id": 1366,
																				"name": "inbetweenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "18881:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18871:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18899:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "18871:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18871:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18841:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1372,
															"nodeType": "ExpressionStatement",
															"src": "18841:76:0"
														},
														{
															"expression": {
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1373,
																	"name": "_inbetweenFeeTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "18931:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1376,
																			"name": "_inbetweenFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "18975:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1374,
																			"name": "_inbetweenFeeTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "18952:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18971:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "18952:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18952:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18931:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1379,
															"nodeType": "ExpressionStatement",
															"src": "18931:58:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1381,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1331,
																		"src": "19017:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1382,
																		"name": "inbetweenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "19025:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1383,
																		"name": "_inbetweenFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "19042:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1380,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "19008:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19008:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1385,
															"nodeType": "EmitStatement",
															"src": "19003:53:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1388,
													"name": "transferAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1339,
													"src": "19091:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1337,
												"id": 1389,
												"nodeType": "Return",
												"src": "19084:21:0"
											}
										]
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "betweenCollectFee",
									"nameLocation": "18523:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "18541:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18566:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "18558:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18540:33:0"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "18592:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18591:9:0"
									},
									"scope": 1442,
									"src": "18514:598:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "19184:50:0",
										"statements": [
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1400,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "19194:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1402,
														"indexExpression": {
															"id": 1401,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "19212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19194:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19223:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19194:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "19194:33:0"
											}
										]
									},
									"functionSelector": "2d43abd8",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1398,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1397,
												"name": "onlyOwner",
												"nameLocations": [
													"19174:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "19174:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19174:9:0"
										}
									],
									"name": "ExcludedFromFee",
									"nameLocation": "19128:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19152:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "19144:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "19161:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19143:23:0"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19184:0:0"
									},
									"scope": 1442,
									"src": "19119:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "19306:51:0",
										"statements": [
											{
												"expression": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1416,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "19316:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1418,
														"indexExpression": {
															"id": 1417,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "19334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19316:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19345:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "19316:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "19316:34:0"
											}
										]
									},
									"functionSelector": "6c726137",
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1414,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1413,
												"name": "onlyOwner",
												"nameLocations": [
													"19296:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "19296:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19296:9:0"
										}
									],
									"name": "IncludeInFee",
									"nameLocation": "19253:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19274:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "19266:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "19283:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19283:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19265:23:0"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19306:0:0"
									},
									"scope": 1442,
									"src": "19244:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "19425:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "_Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "19443:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1432,
																"name": "lpAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "19455:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19443:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19435:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "19435:30:0"
											},
											{
												"expression": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1436,
														"name": "lpAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "19484:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1437,
														"name": "_Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "19496:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19484:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "19484:20:0"
											}
										]
									},
									"functionSelector": "7a351a1d",
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1428,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1427,
												"name": "onlyOwner",
												"nameLocations": [
													"19415:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 362,
												"src": "19415:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19415:9:0"
										}
									],
									"name": "setLPAddress",
									"nameLocation": "19377:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "_Address",
												"nameLocation": "19398:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "19390:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19389:18:0"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19425:0:0"
									},
									"scope": 1442,
									"src": "19368:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1443,
							"src": "11056:8458:0",
							"usedErrors": []
						}
					],
					"src": "99:19415:0"
				},
				"id": 0
			}
		}
	}
}